MP2COD 3.60, COFF to COD File Converter
Copyright (c) 2003 Microchip Technology Inc.
Listing File Generated: Mon Jun 21 12:50:31 2004


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           ;************************************************************                    C:\Embedded\Rover\Rover_slave.ASM
                                           ;	TITLE:	Rover Slave - Receiver side                                             C:\Embedded\Rover\Rover_slave.ASM
                                           ;	It continually receives data from the Master and applies it to the             C:\Embedded\Rover\Rover_slave.ASM
                                           ;	drive motors and lights                                                        C:\Embedded\Rover\Rover_slave.ASM
                                           ;	Programmer: GINO ISLA                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           ;	Created:	June-02-2004                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           ;	REVISION HISTORY:                                                              C:\Embedded\Rover\Rover_slave.ASM
                                           ;	HARDWARE: BIT SRL. Low Power transciever                                       C:\Embedded\Rover\Rover_slave.ASM
                                           ;	FREQUENCY: 4.0 MHz                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           ;	Function: Remotly controlled vehicle                                           C:\Embedded\Rover\Rover_slave.ASM
                                           ;************************************************************                    C:\Embedded\Rover\Rover_slave.ASM
                                           			list	p=16f876                                                                 C:\Embedded\Rover\Rover_slave.ASM
                                                                                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           #define		DEBUG_MODE                                                              C:\Embedded\Rover\Rover_slave.ASM
                                                                                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           #include	<p16f876.inc>                                                           C:\Embedded\Rover\Rover_slave.ASM
                                                   LIST                                                                     C:\Program Files\MPLAB IDE\MCHIP_Tools\p16f876.inc
                                           ; P16F876.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.  C:\Program Files\MPLAB IDE\MCHIP_Tools\p16f876.inc
                                                   LIST                                                                     C:\Program Files\MPLAB IDE\MCHIP_Tools\p16f876.inc
                                           #include 	<CC1000.h>                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           ;/* Constants defined for CC1000 */                                              C:\Embedded\Rover\CC1000.h
                                                                                                                            C:\Embedded\Rover\CC1000.h
                                           ;/* Register addresses */                                                        C:\Embedded\Rover\CC1000.h
                                                                                                                            C:\Embedded\Rover\CC1000.h
                                           #define CC1000_MAIN            0x00                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FREQ_2A         0x01                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FREQ_1A         0x02                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FREQ_0A         0x03                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FREQ_2B         0x04                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FREQ_1B         0x05                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FREQ_0B         0x06                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSEP1           0x07                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSEP0           0x08                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_CURRENT         0x09                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FRONT_END       0x0A                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_PA_POW          0x0B                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_PLL             0x0C                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_LOCK            0x0D                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_CAL             0x0E                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_MODEM2          0x0F                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_MODEM1          0x10                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_MODEM0          0x11                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_MATCH           0x12                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSCTRL          0x13                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE7         0x14                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE6         0x15                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE5         0x16                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE4         0x17                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE3         0x18                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE2         0x19                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE1         0x1A                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSDELAY         0x1B                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_PRESCALER       0x1C                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST6           0x40                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST5           0x41                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST4           0x42                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST3           0x43                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST2           0x44                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST1           0x45                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST0           0x46                                              C:\Embedded\Rover\CC1000.h
                                                                                                                            C:\Embedded\Rover\CC1000.h
                                           ;                                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           ;REMEMBER TO CHANGE THE TX_MASTER/RX_SLAVE DEFINITION IN Rover.h                 C:\Embedded\Rover\Rover_slave.ASM
                                           ;AND ASSEMBLE THE CC1000_Routines LIBRARY                                        C:\Embedded\Rover\Rover_slave.ASM
                                           ;                                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           #include 	<rover.h>                                                              C:\Embedded\Rover\Rover_slave.ASM
                                           ;Pin usage definitions for the rover Master/Tranmitter                           C:\Embedded\Rover\rover.h
                                           ;CC1000 and PIC16f76                                                             C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;===========================================================                     C:\Embedded\Rover\rover.h
                                           ;CHANGE THESE DEFINITIONS WHEN COMPILING THE ASM CODE OR THE                     C:\Embedded\Rover\rover.h
                                           ;LIBRARY FOR MASTER OR FOR SLAVE                                                 C:\Embedded\Rover\rover.h
                                           ;#define		TX_MASTER                                                              C:\Embedded\Rover\rover.h
                                           #define		RX_SLAVE                                                                C:\Embedded\Rover\rover.h
                                           ;===========================================================                     C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           	ifdef	TX_MASTER                                                                 C:\Embedded\Rover\rover.h
                                           #define PCLK			PORTC,1	;                                                         C:\Embedded\Rover\rover.h
                                           #define PALE			PORTC,2	;                                                         C:\Embedded\Rover\rover.h
                                           	else                                                                            C:\Embedded\Rover\rover.h
                                           #define PCLK			PORTA,2	;                                                         C:\Embedded\Rover\rover.h
                                           #define PALE			PORTA,1	;                                                         C:\Embedded\Rover\rover.h
                                           	endif                                                                           C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           #define PDATA			PORTC,0	; Register interfaces                                    C:\Embedded\Rover\rover.h
                                           #define DIO 			PORTC,3	; Data interfaces                                         C:\Embedded\Rover\rover.h
                                           #define DCLK			PORTB,0 ;                                                         C:\Embedded\Rover\rover.h
                                           #define CHP_OUT			PORTC,5 ;not used                                              C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           #define PDATA_DIR		TRISC,0                                                       C:\Embedded\Rover\rover.h
                                           #define DIO_DIR			TRISC,3                                                        C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           #define SW1				PORTB,1	;Switches on Trasnmitter side                             C:\Embedded\Rover\rover.h
                                           #define SW2				PORTB,2	;                                                         C:\Embedded\Rover\rover.h
                                           #define SW3				PORTB,3	;                                                         C:\Embedded\Rover\rover.h
                                           #define	STEERING		PORTC,1	;                                                      C:\Embedded\Rover\rover.h
                                           #define	SPIN_DIR		PORTC,7	;                                                      C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           #define LED1			PORTC,4	;(IN5)LEDs on Receiver side corresponding to the          C:\Embedded\Rover\rover.h
                                           #define LED2			PORTB,2	;(IN6) swithces above                                     C:\Embedded\Rover\rover.h
                                           #define LED3			PORTB,1	;(IN7)                                                    C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;ERRORS AND OTHER EVENTS                                                         C:\Embedded\Rover\rover.h
                                           #define BUTTON_PRESSED	G_Events,0                                                C:\Embedded\Rover\rover.h
                                           #define REPLY_SENT		G_Events,1                                                   C:\Embedded\Rover\rover.h
                                           #define	NEW_COUNT		G_Events,2                                                    C:\Embedded\Rover\rover.h
                                           #define TIME_0_OUT		G_Events,3                                                   C:\Embedded\Rover\rover.h
                                           #define BYTE_FULL		G_Events,4                                                    C:\Embedded\Rover\rover.h
                                           #define RESET_CNTRS		G_Events,5                                                  C:\Embedded\Rover\rover.h
                                           #define CALIBRATION_OK	G_Events,6                                                C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;STATES                                                                          C:\Embedded\Rover\rover.h
                                           #define IDLE_MODE		G_State,0                                                     C:\Embedded\Rover\rover.h
                                           #define MASTER			G_State,1                                                       C:\Embedded\Rover\rover.h
                                           #define SLAVE			G_State,2                                                        C:\Embedded\Rover\rover.h
                                           #define RXCVER			G_State,3                                                       C:\Embedded\Rover\rover.h
                                           #define TXMTER			G_State,4                                                       C:\Embedded\Rover\rover.h
                                           #define	QUIET			G_State,5                                                        C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;PROTOCOL                                                                        C:\Embedded\Rover\rover.h
                                           ;PROTOCOL PARTS                                                                  C:\Embedded\Rover\rover.h
                                           #define BOF_FOUND		G_Pr_status,0                                                 C:\Embedded\Rover\rover.h
                                           #define PREAM_FINISHED	G_Pr_status,1                                             C:\Embedded\Rover\rover.h
                                           #define UI_FINISHED		G_Pr_status,2                                               C:\Embedded\Rover\rover.h
                                           #define	ADDR_CMPLT		G_Pr_status,3                                                C:\Embedded\Rover\rover.h
                                           #define NBR_BYTES_RCVD	G_Pr_status,4                                             C:\Embedded\Rover\rover.h
                                           #define DATA_RECEIVED	G_Pr_status,5                                              C:\Embedded\Rover\rover.h
                                           #define SUMCHECK_DONE	G_Pr_status,6                                              C:\Embedded\Rover\rover.h
                                           #define CMMND_COMPLETE	G_Pr_status,7                                             C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;OFFSETS:                                                                        C:\Embedded\Rover\rover.h
                                           #define PREAMBLE		0x00                                                           C:\Embedded\Rover\rover.h
                                           #define UI				0x03                                                               C:\Embedded\Rover\rover.h
                                           #define ADDRESS			0x05                                                           C:\Embedded\Rover\rover.h
                                           #define NO_BYTES		0x07                                                           C:\Embedded\Rover\rover.h
                                           #define DATA_OFFS		0x08                                                          C:\Embedded\Rover\rover.h
                                           #define SUM_CHECK		0x0F                                                          C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           #define	UI_CODE1		0xCD	;unique ramdom number                                     C:\Embedded\Rover\rover.h
                                           #define	UI_CODE2		0x4D	;                                                         C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;NUMBER OF BYTES                                                                 C:\Embedded\Rover\rover.h
                                           #define PREA_SIZE		3                                                             C:\Embedded\Rover\rover.h
                                           #define UI_SIZE			2                                                              C:\Embedded\Rover\rover.h
                                           #define ADD_SIZE		2                                                              C:\Embedded\Rover\rover.h
                                           #define NBR_SIZE		1                                                              C:\Embedded\Rover\rover.h
                                           #define DATA_SIZE		7                                                             C:\Embedded\Rover\rover.h
                                           #define CS_SIZE			1                                                              C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           TOT_FRAME_SIZ			equ	PREA_SIZE+UI_SIZE+ADD_SIZE+NBR_SIZE+DATA_SIZE+CS_SIZE        C:\Embedded\Rover\rover.h
                                           FIXED_PART				equ	PREA_SIZE+UI_SIZE+ADD_SIZE+NBR_SIZE                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           #define	RX_CURRENT		0x44 ;0100xxxx=950uA, XXXX=?????                             C:\Embedded\Rover\rover.h
                                           #define RXPLL			0x60                                                             C:\Embedded\Rover\rover.h
                                           #define	TX_CURRENT		0x81 ;1000xxxx=1450uA                                        C:\Embedded\Rover\rover.h
                                           #define TXPLL			0x48                                                             C:\Embedded\Rover\rover.h
                                           #define PA_VALUE		0xFF                                                           C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           ;TIMER 1 TIMERS                                                                  C:\Embedded\Rover\rover.h
                                           ;;;#define	RXMIT_TIM1L		0x90	;at 9600bps: h'3590 = 13,712uS=14ms                 C:\Embedded\Rover\rover.h
                                           ;;;#define	RXMIT_TIM1H		0x35	; (104uS/b*8bit/byt*16byt/frame+250uS+xx+ switch RX-TX) C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           #define	RXMIT_TIM1L		0xf0	;20ms includes delays for the master switch RX -> TX   C:\Embedded\Rover\rover.h
                                           #define	RXMIT_TIM1H		0x55	;                                                      C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           ;LOCK TIMEOUTS (this is a 16 bit integer e.g. 01FF)                              C:\Embedded\Rover\rover.h
                                           #define	LOCK1			0xFF                                                             C:\Embedded\Rover\rover.h
                                           #define	LOCK2			0x01                                                             C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           ;TOGGLES AND CONTROLS FOR LEDS                                                   C:\Embedded\Rover\rover.h
                                           ;#define TOGGLE_G		L_GREEN_CTL,7                                                 C:\Embedded\Rover\rover.h
                                           ;#define	GREEN_FLAG		L_GREEN_CTL,6                                               C:\Embedded\Rover\rover.h
                                           ;#define	SPEED_G			L_GREEN_CTL,5                                                 C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;#define TOGGLE_R		L_RED_CTL,7                                                   C:\Embedded\Rover\rover.h
                                           ;#define	RED_FLAG		L_RED_CTL,6                                                   C:\Embedded\Rover\rover.h
                                           ;#define	SPEED_R			L_RED_CTL,5                                                   C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;#define	SLOW_ON			b'11000110'		;1xx..=start on, x1x..=on, xx000110=6 beats      C:\Embedded\Rover\rover.h
                                           ;#define	SLOW_OFF		b'01000110'		;0xx..=start off, x1x..=on, xx000110=6 beats     C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;#define	FAST_ON			b'11000010'                                                   C:\Embedded\Rover\rover.h
                                           ;#define	FAST_OFF		b'01000010'                                                   C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;#define VERYSLOW		b'11010000'                                                   C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           #include	<macros.inc>                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           ;General maro definitions                                                        C:\Embedded\Rover\macros.inc
                                                                                                                            C:\Embedded\Rover\macros.inc
                                           M_CMP_JE	macro	value1,value2,jumpto	;value1 = value2?                            C:\Embedded\Rover\macros.inc
                                           		movf	value1,w                                                                  C:\Embedded\Rover\macros.inc
                                           		xorwf	value2,w                                                                 C:\Embedded\Rover\macros.inc
                                           		btfsc	STATUS,Z                                                                 C:\Embedded\Rover\macros.inc
                                           		goto	jumpto                                                                    C:\Embedded\Rover\macros.inc
                                           		endm                                                                           C:\Embedded\Rover\macros.inc
                                           M_CMPL_JE	macro	value1,literal,jumpto	;value1 = k?                               C:\Embedded\Rover\macros.inc
                                           		movf	value1,w                                                                  C:\Embedded\Rover\macros.inc
                                           		xorlw	literal                                                                  C:\Embedded\Rover\macros.inc
                                           		btfsc	STATUS,Z                                                                 C:\Embedded\Rover\macros.inc
                                           		goto	jumpto                                                                    C:\Embedded\Rover\macros.inc
                                           		endm                                                                           C:\Embedded\Rover\macros.inc
                                           M_CMPL_JNE	macro	value1,literal,jumpto	;value1 <> k?                             C:\Embedded\Rover\macros.inc
                                           		movf	value1,w                                                                  C:\Embedded\Rover\macros.inc
                                           		xorlw	literal                                                                  C:\Embedded\Rover\macros.inc
                                           		btfss	STATUS,Z                                                                 C:\Embedded\Rover\macros.inc
                                           		goto	jumpto                                                                    C:\Embedded\Rover\macros.inc
                                           		endm                                                                           C:\Embedded\Rover\macros.inc
                                           M_CMP_JG	macro	value1,value2,jumpto	;value1 > value2?                            C:\Embedded\Rover\macros.inc
                                           		movf	value2,w                                                                  C:\Embedded\Rover\macros.inc
                                           		subwf	value1,w	;v1-v2 > 0                                                      C:\Embedded\Rover\macros.inc
                                           		btfss	STATUS,C                                                                 C:\Embedded\Rover\macros.inc
                                           		goto	$+4                                                                       C:\Embedded\Rover\macros.inc
                                           		btfsc	STATUS,Z                                                                 C:\Embedded\Rover\macros.inc
                                           		goto	$+2                                                                       C:\Embedded\Rover\macros.inc
                                           		goto	jumpto                                                                    C:\Embedded\Rover\macros.inc
                                           		endm                                                                           C:\Embedded\Rover\macros.inc
                                                                                                                            C:\Embedded\Rover\macros.inc
                                           M_CMP_JGE	macro	value1,value2,jumpto	;value1 >= value2?                          C:\Embedded\Rover\macros.inc
                                           		movf	value2,w                                                                  C:\Embedded\Rover\macros.inc
                                           		subwf	value1,w	;v1-v2 >= 0                                                     C:\Embedded\Rover\macros.inc
                                           		btfsc	STATUS,C                                                                 C:\Embedded\Rover\macros.inc
                                           		goto	jumpto                                                                    C:\Embedded\Rover\macros.inc
                                           		endm                                                                           C:\Embedded\Rover\macros.inc
                                                                                                                            C:\Embedded\Rover\macros.inc
                                                                                                                            C:\Embedded\Rover\macros.inc
                                           M_CMP_JL	macro	value1,value2,jumpto	;value1 < value2?                            C:\Embedded\Rover\macros.inc
                                           		movf	value2,w                                                                  C:\Embedded\Rover\macros.inc
                                           		subwf	value1,w	;v1-v2 < 0                                                      C:\Embedded\Rover\macros.inc
                                           		btfss	STATUS,C                                                                 C:\Embedded\Rover\macros.inc
                                           		goto	jumpto                                                                    C:\Embedded\Rover\macros.inc
                                           		endm                                                                           C:\Embedded\Rover\macros.inc
                                                                                                                            C:\Embedded\Rover\macros.inc
                                           M_CMP_JLE	macro	value1,value2,jumpto	;value1 <= value2?                          C:\Embedded\Rover\macros.inc
                                           		movf	value1,w                                                                  C:\Embedded\Rover\macros.inc
                                           		subwf	value2,w	;v2-v1 > 0                                                      C:\Embedded\Rover\macros.inc
                                           		btfsc	STATUS,C                                                                 C:\Embedded\Rover\macros.inc
                                           		goto	$+2                                                                       C:\Embedded\Rover\macros.inc
                                           		btfsc	STATUS,Z                                                                 C:\Embedded\Rover\macros.inc
                                           		goto	jumpto                                                                    C:\Embedded\Rover\macros.inc
                                           		endm                                                                           C:\Embedded\Rover\macros.inc
                                                                                                                            C:\Embedded\Rover\macros.inc
                                                                                                                            C:\Embedded\Rover\macros.inc
                                           M_CMPL_JL	macro	value1,literal,jumpto	;value1 < literal?                         C:\Embedded\Rover\macros.inc
00019b   0821     MOVF      0x21,0x0       		movf	value1,w                                                                  C:\Embedded\Rover\macros.inc
00019c   3c7c     SUBLW     0x7c           		sublw	literal ;k-v1 < 0                                                        C:\Embedded\Rover\macros.inc
00019d   1c03     BTFSS     0x3,0x0        		btfss	STATUS,C                                                                 C:\Embedded\Rover\macros.inc
00019e   29a2     GOTO      0x1a2          		goto	$+4                                                                       C:\Embedded\Rover\macros.inc
00019f   1903     BTFSC     0x3,0x2        		btfsc	STATUS,Z                                                                 C:\Embedded\Rover\macros.inc
0001a0   29a2     GOTO      0x1a2          		goto	$+2                                                                       C:\Embedded\Rover\macros.inc
0001a1   29a8     GOTO      0x1a8          		goto	jumpto                                                                    C:\Embedded\Rover\macros.inc
                                           		endm                                                                           C:\Embedded\Rover\macros.inc
                                                                                                                            C:\Embedded\Rover\macros.inc
                                           M_CMPL_JG	macro	value1,literal,jumpto	;k-val1 < 0                                C:\Embedded\Rover\macros.inc
000197   0821     MOVF      0x21,0x0       		movf	value1,w                                                                  C:\Embedded\Rover\macros.inc
000198   3c84     SUBLW     0x84           		sublw	literal	                                                                 C:\Embedded\Rover\macros.inc
000199   1c03     BTFSS     0x3,0x0        		btfss	STATUS,C                                                                 C:\Embedded\Rover\macros.inc
00019a   29a5     GOTO      0x1a5          		goto	jumpto	                                                                   C:\Embedded\Rover\macros.inc
                                           		endm                                                                           C:\Embedded\Rover\macros.inc
                                           		                                                                               C:\Embedded\Rover\macros.inc
                                                                                                                            C:\Embedded\Rover\macros.inc
                                                                                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           ;LOCAL DATA                                                                      C:\Embedded\Rover\Rover_slave.ASM
                                           	UDATA                                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           L_Temp1			res 1 		;                                                              C:\Embedded\Rover\Rover_slave.ASM
                                           L_TEMP_2		RES	1		;                                                               C:\Embedded\Rover\Rover_slave.ASM
                                           L_Temp_CS		res	1		;temporary sum-check                                           C:\Embedded\Rover\Rover_slave.ASM
                                           L_BITS			res 1		;number of bits sent or received                                 C:\Embedded\Rover\Rover_slave.ASM
                                           L_BYTES			res 1		;number of bytes sent or received                               C:\Embedded\Rover\Rover_slave.ASM
                                           L_TX_COUNT		res	1		;TX_BUFFER counter                                            C:\Embedded\Rover\Rover_slave.ASM
                                           L_NEXT_FR_BYT	res	1		;counts the byte in the TX buffer                           C:\Embedded\Rover\Rover_slave.ASM
                                           L_INDEX			res 1		;index for addressing buffers below                             C:\Embedded\Rover\Rover_slave.ASM
                                           L_PORTC			res 1		;temporary PORTC                                                C:\Embedded\Rover\Rover_slave.ASM
                                           L_DATA_RX		res 1		;1 byte of received data                                       C:\Embedded\Rover\Rover_slave.ASM
                                           L_RX_BUFF		res d'16'	;Received data buffer                                       C:\Embedded\Rover\Rover_slave.ASM
                                           L_TX_BUFF		res d'16'	;Transmit data buffer                                       C:\Embedded\Rover\Rover_slave.ASM
                                           L_PERSIST		res	1		;counter for persistancy checks                                C:\Embedded\Rover\Rover_slave.ASM
                                           ;                                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           G_Events 		res 1		;This has to be seen by other modules                          C:\Embedded\Rover\Rover_slave.ASM
                                           G_Pr_status		res 1 		;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           G_State			res 1		;will determine the reaction in ISR                             C:\Embedded\Rover\Rover_slave.ASM
                                           ;                                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           D_ERROR_CNT		res	1		;Counts number of times in TREAT_ERROR                       C:\Embedded\Rover\Rover_slave.ASM
                                           D_ERROR_FLG		res	1		;Manual flag to read all CC1000 regs in TREAT_ERROR          C:\Embedded\Rover\Rover_slave.ASM
                                           D_BUGGGER		res	1		;                                                              C:\Embedded\Rover\Rover_slave.ASM
                                           ;                                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           STATUS_TEMP		res 1		;for saving STATUS reg during ISR                            C:\Embedded\Rover\Rover_slave.ASM
                                           L_FREQ_L		res	1		;calculated value for TIMER1_L                                  C:\Embedded\Rover\Rover_slave.ASM
                                           L_FREQ_H		res	1		;calculated value for TIMER1_H, steering motor frequency (half cycle) C:\Embedded\Rover\Rover_slave.ASM
                                                                                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           ;========================================================================================= C:\Embedded\Rover\Rover_slave.ASM
                                           DEBUG_BITS		res	1                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           D_BUG1			res	1		;                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           D_BUG2			res	1		;                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           ;========================================================================================== C:\Embedded\Rover\Rover_slave.ASM
                                           	UDATA_SHR				;Common bank                                                       C:\Embedded\Rover\Rover_slave.ASM
                                           L_EE_COUNT_L	res	1		;This has to be @ addr xxxxxx00 BUT the linker puts it in x71!!! C:\Embedded\Rover\Rover_slave.ASM
                                           L_EE_COUNT_H	res	1		;These reserve 8 bytes for data transfer with EEPROM         C:\Embedded\Rover\Rover_slave.ASM
                                           L_EE_COUNT_MORE	res	6		;                                                         C:\Embedded\Rover\Rover_slave.ASM
                                           W_TEMP			res	1		;for saving W reg during ISR                                     C:\Embedded\Rover\Rover_slave.ASM
                                           ;                                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           ;EXTERNAL AND GLOBAL SYMBOLS                                                     C:\Embedded\Rover\Rover_slave.ASM
                                           			Global	G_Events,G_Pr_status                                                   C:\Embedded\Rover\Rover_slave.ASM
                                           			extern	G_CC_Reg,G_CC_Data                                                     C:\Embedded\Rover\Rover_slave.ASM
                                                                                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           ;LIBRARY SUPPORT ROUTINES                                                        C:\Embedded\Rover\Rover_slave.ASM
                                           	extern	Setup_CC1000PD,Reset_CC1000,Setup_CC1000All,CalibrateCC1000              C:\Embedded\Rover\Rover_slave.ASM
                                           	extern	SetupCC1000Tx,SetupCC1000Rx,WakeUpCC1000toRx,WakeUpCC1000toTx            C:\Embedded\Rover\Rover_slave.ASM
                                           	extern	DelaymS,Delay100uS,DelayuS                                               C:\Embedded\Rover\Rover_slave.ASM
                                           	extern	ReadFromCC1000register                                                   C:\Embedded\Rover\Rover_slave.ASM
                                           	                                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           ;CONFIGURATION OF PIC                                                            C:\Embedded\Rover\Rover_slave.ASM
002007   3735     RETLW     0x35           	__CONFIG	_CP_OFF & _WDT_ON & _BODEN_OFF & _PWRTE_ON & _XT_OSC & _PWRTE_ON & _LVP_OFF & _DEBUG_ON & _CPD_OFF C:\Embedded\Rover\Rover_slave.ASM
                                                                                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           	CODE                                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           START_OF_THE_PROGRAM					;                                                       C:\Embedded\Rover\Rover_slave.ASM
                                           			org		0X000				; Reset Vector                                                  C:\Embedded\Rover\Rover_slave.ASM
000000   0000     NOP                      			nop							;                                                                   C:\Embedded\Rover\Rover_slave.ASM
000001   018a     CLRF      0xa            			clrf	PCLATH				;                                                              C:\Embedded\Rover\Rover_slave.ASM
000002   2824     GOTO      0x24           			goto	Start				;                                                               C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           			org		0x004				;Iterrupt Vector                                                C:\Embedded\Rover\Rover_slave.ASM
000004   28e8     GOTO      0xe8           			goto	TREAT_ERROR			; no Ints expected                                         C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;Table lookups for CC1000 register                                               C:\Embedded\Rover\Rover_slave.ASM
                                           ;Lookout for page boundaries!!!!!                                                C:\Embedded\Rover\Rover_slave.ASM
                                           GET_NEXT_REGISTER						;                                                         C:\Embedded\Rover\Rover_slave.ASM
                                           			Global	GET_NEXT_REGISTER	;                                                    C:\Embedded\Rover\Rover_slave.ASM
000005   0782     ADDWF     0x2,0x1        			ADDWF	PCL,F				;                                                              C:\Embedded\Rover\Rover_slave.ASM
                                           										;	                                                                     C:\Embedded\Rover\Rover_slave.ASM
000006   3400     RETLW     0x0            CC1Kregs	DATA 0x3400,0x3458,0x3420,0x3400,0x3442,0x3414,0x349c,0x3402	;Rf XTAL: 14.745600 C:\Embedded\Rover\Rover_slave.ASM
000007   3458     RETLW     0x58                                                                                            
000008   3420     RETLW     0x20                                                                                            
000009   3400     RETLW     0x0                                                                                             
00000a   3442     RETLW     0x42                                                                                            
00000b   3414     RETLW     0x14                                                                                            
00000c   349c     RETLW     0x9c                                                                                            
00000d   3402     RETLW     0x2                                                                                             
00000e   3480     RETLW     0x80           			DATA 0x3480,0x3444,0x3412,0x34FF,0x3460,0x3410,0x3426,0x348E	;PA_POW<0BH>=FF  C:\Embedded\Rover\Rover_slave.ASM
00000f   3444     RETLW     0x44                                                                                            
000010   3412     RETLW     0x12                                                                                            
000011   34ff     RETLW     0xff                                                                                            
000012   3460     RETLW     0x60                                                                                            
000013   3410     RETLW     0x10                                                                                            
000014   3426     RETLW     0x26                                                                                            
000015   348e     RETLW     0x8e                                                                                            
000016   346f     RETLW     0x6f           			DATA 0x346F,0x3447,0x3470,0x3401,0x3400,0x3400,0x3400,0x3400	;MODEM0<11H>     C:\Embedded\Rover\Rover_slave.ASM
000017   3447     RETLW     0x47                                                                                            
000018   3470     RETLW     0x70                                                                                            
000019   3401     RETLW     0x1                                                                                             
00001a   3400     RETLW     0x0                                                                                             
00001b   3400     RETLW     0x0                                                                                             
00001c   3400     RETLW     0x0                                                                                             
00001d   3400     RETLW     0x0                                                                                             
00001e   3400     RETLW     0x0            			DATA 0x3400,0x3400,0x3400,0x3400,0x3400                                       C:\Embedded\Rover\Rover_slave.ASM
00001f   3400     RETLW     0x0                                                                                             
000020   3400     RETLW     0x0                                                                                             
000021   3400     RETLW     0x0                                                                                             
000022   3400     RETLW     0x0                                                                                             
                                           			Global	CC1Kregs			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000023   0008     RETURN                   			RETURN 						;                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;Program execution starts here                                                   C:\Embedded\Rover\Rover_slave.ASM
                                           Start									;Setup MCU                                                         C:\Embedded\Rover\Rover_slave.ASM
000024   3035     MOVLW     0x35           			MOVLW	(D_BUG2-L_Temp_CS)+1;Clears all varialble data including                C:\Embedded\Rover\Rover_slave.ASM
000025   00a0     MOVWF     0x20           			MOVWF	L_Temp1				; RX and TX buffers, L_Temp1 is used                         C:\Embedded\Rover\Rover_slave.ASM
000026   3022     MOVLW     0x22           			MOVLW	L_Temp_CS			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000027   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\Rover\Rover_slave.ASM
000028   0180     CLRF      0x0            _CLR_MEM	CLRF	INDF				;                                                          C:\Embedded\Rover\Rover_slave.ASM
000029   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\Rover\Rover_slave.ASM
00002a   0ba0     DECFSZ    0x20,0x1       			DECFSZ	L_Temp1,F			;                                                          C:\Embedded\Rover\Rover_slave.ASM
00002b   2828     GOTO      0x28           			GOTO	_CLR_MEM			;                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00002c   0183     CLRF      0x3            			CLRF	STATUS				;BANK 0                                                        C:\Embedded\Rover\Rover_slave.ASM
00002d   0194     CLRF      0x14           			CLRF	SSPCON				;disable serial port                                           C:\Embedded\Rover\Rover_slave.ASM
00002e   019f     CLRF      0x1f           			CLRF	ADCON0				;                                                              C:\Embedded\Rover\Rover_slave.ASM
00002f   0198     CLRF      0x18           			CLRF	RCSTA				;Serial port disabled(bit banging)                              C:\Embedded\Rover\Rover_slave.ASM
000030   018b     CLRF      0xb            			CLRF	INTCON				;                                                              C:\Embedded\Rover\Rover_slave.ASM
000031   0185     CLRF      0x5            			CLRF	PORTA				;                                                               C:\Embedded\Rover\Rover_slave.ASM
000032   0186     CLRF      0x6            			CLRF	PORTB				;                                                               C:\Embedded\Rover\Rover_slave.ASM
000033   0187     CLRF      0x7            			CLRF	PORTC				;                                                               C:\Embedded\Rover\Rover_slave.ASM
000034   019b     CLRF      0x1b           			CLRF	CCPR2L				;                                                              C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000035   01f1     CLRF      0x71           			CLRF	L_EE_COUNT_L		;                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           ;PWD 									;                                                                  C:\Embedded\Rover\Rover_slave.ASM
                                           ;===									;                                                                   C:\Embedded\Rover\Rover_slave.ASM
000036   300c     MOVLW     0xc            			MOVLW	b'00001100' 		;bits 3-0=PWM mode (pg. 62)                               C:\Embedded\Rover\Rover_slave.ASM
000037   0097     MOVWF     0x17           			MOVWF	CCP1CON				;analogue chan 1                                             C:\Embedded\Rover\Rover_slave.ASM
                                           ;			MOVWF	CCP2CON				;analogue chan 0                                            C:\Embedded\Rover\Rover_slave.ASM
000038   019d     CLRF      0x1d           			CLRF	CCP2CON				;analogue chan 2 - RC1 used as normal port for steering       C:\Embedded\Rover\Rover_slave.ASM
000039   3007     MOVLW     0x7            			MOVLW	b'00000111'			;PRESCALE 1:16                                            C:\Embedded\Rover\Rover_slave.ASM
00003a   0092     MOVWF     0x12           			MOVWF	T2CON				;                                                              C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00003b   1683     BSF       0x3,0x5        			BANKSEL	TRISA				;BANK 1                                                      C:\Embedded\Rover\Rover_slave.ASM
00003c   1303     BCF       0x3,0x6                                                                                         
00003d   3010     MOVLW     0x10           			MOVLW	d'16'				;8 bit resolution clock at 4MZ                                 C:\Embedded\Rover\Rover_slave.ASM
00003e   0092     MOVWF     0x12           			MOVWF	PR2					;                                                               C:\Embedded\Rover\Rover_slave.ASM
                                           ;===									;                                                                   C:\Embedded\Rover\Rover_slave.ASM
00003f   3007     MOVLW     0x7            			MOVLW	7					;not used                                                         C:\Embedded\Rover\Rover_slave.ASM
000040   009f     MOVWF     0x1f           			MOVWF	ADCON1				;                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000041   3003     MOVLW     0x3            			MOVLW	b'00000011'			;                                                         C:\Embedded\Rover\Rover_slave.ASM
000042   008e     MOVWF     0xe            			MOVWF	PCON				;power-on, brown-out resets                                     C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000043   30f8     MOVLW     0xf8           			MOVLW	b'11111000'			;RA0=OUT MOTOR,,RA1=PALE,RA2=PCLK                         C:\Embedded\Rover\Rover_slave.ASM
000044   0085     MOVWF     0x5            			MOVWF	TRISA				;                                                              C:\Embedded\Rover\Rover_slave.ASM
000045   30c9     MOVLW     0xc9           			MOVLW	b'11001001'			;RB0=DCLK,+outputs                                        C:\Embedded\Rover\Rover_slave.ASM
000046   0086     MOVWF     0x6            			MOVWF	TRISB				;                                                              C:\Embedded\Rover\Rover_slave.ASM
000047   3028     MOVLW     0x28           			MOVLW	b'00101000'			;RC<0,3>=PDATA,DIO, RC<1,2>=CCP1,2, +outputs              C:\Embedded\Rover\Rover_slave.ASM
000048   0087     MOVWF     0x7            			MOVWF	TRISC				;                                                              C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000049   3025     MOVLW     0x25           			MOVLW	25					;4Mhz,9.6Kb                                                      C:\Embedded\Rover\Rover_slave.ASM
00004a   0099     MOVWF     0x19           			MOVWF	SPBRG				;not necessary when running synchronous slave                  C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00004b   3000     MOVLW     0x0            			MOVLW	b'00000000'			;MCU is slave,8bit,TxEN,Async,high speed,                 C:\Embedded\Rover\Rover_slave.ASM
00004c   0098     MOVWF     0x18           			MOVWF	TXSTA				;                                                              C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00004d   3000     MOVLW     0x0            			MOVLW	b'00000000'			;                                                         C:\Embedded\Rover\Rover_slave.ASM
00004e   008c     MOVWF     0xc            			MOVWF	PIE1				;TMR1 int disabled (xxxxxxx1)                                   C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00004f   30ce     MOVLW     0xce           			MOVLW	b'11001110'			;PortB pullups disabled,                                  C:\Embedded\Rover\Rover_slave.ASM
000050   0081     MOVWF     0x1            			MOVWF	OPTION_REG			;xxxx111xb prescaler to WDT,1:128                          C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000051   1283     BCF       0x3,0x5        			BANKSEL	L_Temp1				;MORE BANK 0                                               C:\Embedded\Rover\Rover_slave.ASM
000052   1303     BCF       0x3,0x6                                                                                         
                                           										;start of CC1000 initialization                                        C:\Embedded\Rover\Rover_slave.ASM
000053   220e     CALL      0x20e          			CALL	Setup_CC1000PD		;Setup after Power down CC1000                           C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000054   2218     CALL      0x218          			CALL	Reset_CC1000		;Reset it  [(A) and (B) fig 16]                            C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000055   3006     MOVLW     0x6            			MOVLW	CC1Kregs 			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000056   2226     CALL      0x226          			CALL	Setup_CC1000All		;Setup all other 28 registers [(C) fig 16]              C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000057   3081     MOVLW     0x81           			MOVLW	TX_CURRENT			;                                                          C:\Embedded\Rover\Rover_slave.ASM
000058   2258     CALL      0x258          			CALL	WakeUpCC1000toTx	;                                                       C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000059   3081     MOVLW     0x81           			MOVLW	TX_CURRENT			;                                                          C:\Embedded\Rover\Rover_slave.ASM
00005a   22a6     CALL      0x2a6          			CALL	SetupCC1000Tx		;Switch to Tx                                             C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00005b   22d8     CALL      0x2d8          			CALL	CalibrateCC1000		;Single calibration  [(D) and (E) FIG 16]               C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00005c   3044     MOVLW     0x44           			MOVLW	RX_CURRENT			;                                                          C:\Embedded\Rover\Rover_slave.ASM
00005d   2235     CALL      0x235          			CALL	WakeUpCC1000toRx	;Start calibration (A....G) fig 17)                     C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00005e   3044     MOVLW     0x44           			MOVLW	RX_CURRENT			;                                                          C:\Embedded\Rover\Rover_slave.ASM
00005f   227c     CALL      0x27c          			CALL	SetupCC1000Rx		;Slave stays as reeiver                                   C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000060   22d8     CALL      0x2d8          			CALL	CalibrateCC1000		;Single calibration as RX                               C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000061   1f4b     BTFSS     0x4b,0x6       _CAL_ENDED	BTFSS	CALIBRATION_OK		;                                               C:\Embedded\Rover\Rover_slave.ASM
000062   20e8     CALL      0xe8           			CALL	TREAT_ERROR			;                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000063   3080     MOVLW     0x80           			MOVLW	0x80				;enable GIE<7> although they are not expected                   C:\Embedded\Rover\Rover_slave.ASM
000064   008b     MOVWF     0xb            			MOVWF	INTCON				;clear TMR0IF<2>,INTF<1>,RBIF<0>,PEIE<6>,                     C:\Embedded\Rover\Rover_slave.ASM
000065   16cb     BSF       0x4b,0x5       			BSF		RESET_CNTRS			;                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           										;setup TIMER1 to produce a freq of 300Hz (1656ms)                      C:\Embedded\Rover\Rover_slave.ASM
000066   3006     MOVLW     0x6            			MOVLW	0X06				;                                                               C:\Embedded\Rover\Rover_slave.ASM
000067   00d3     MOVWF     0x53           			MOVWF	L_FREQ_H			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000068   0953     COMF      0x53,0x0       			COMF	L_FREQ_H,W			;TIMER1 is a count-up timer                                 C:\Embedded\Rover\Rover_slave.ASM
000069   008f     MOVWF     0xf            			MOVWF	TMR1H				;                                                              C:\Embedded\Rover\Rover_slave.ASM
00006a   3078     MOVLW     0x78           			MOVLW	0X78				;                                                               C:\Embedded\Rover\Rover_slave.ASM
00006b   00d2     MOVWF     0x52           			MOVWF	L_FREQ_L			;                                                            C:\Embedded\Rover\Rover_slave.ASM
00006c   0952     COMF      0x52,0x0       			COMF	L_FREQ_L,W			;                                                           C:\Embedded\Rover\Rover_slave.ASM
00006d   008e     MOVWF     0xe            			MOVWF	TMR1L				;                                                              C:\Embedded\Rover\Rover_slave.ASM
00006e   100c     BCF       0xc,0x0        			BCF		PIR1,TMR1IF			;clear TMR1 interrupt flag                                 C:\Embedded\Rover\Rover_slave.ASM
00006f   3001     MOVLW     0x1            			MOVLW	b'00000001'			;prescale 1:1, internal clk,TMR1ON                        C:\Embedded\Rover\Rover_slave.ASM
000070   0090     MOVWF     0x10           			MOVWF	T1CON				;                                                              C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000071   0195     CLRF      0x15           			CLRF	CCPR1L				;Start with traction wheels at rest                            C:\Embedded\Rover\Rover_slave.ASM
000072   1387     BCF       0x7,0x7        			BCF		SPIN_DIR			;                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000073   1c0c     BTFSS     0xc,0x0        _IDLE_LOOP	BTFSS	PIR1,TMR1IF			;TIMR1 expired?                                   C:\Embedded\Rover\Rover_slave.ASM
000074   2876     GOTO      0x76           			GOTO	_READ_MSG			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000075   208c     CALL      0x8c           			CALL	STEER_FREQ			;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                                                                                                            C:\Embedded\Rover\Rover_slave.ASM
000076   1ecb     BTFSS     0x4b,0x5       _READ_MSG	BTFSS	RESET_CNTRS			;                                                  C:\Embedded\Rover\Rover_slave.ASM
000077   2881     GOTO      0x81           			GOTO	_SLAVE_ACTIONS		;                                                        C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000078   01a4     CLRF      0x24           _RESET		CLRF	L_BYTES				;Start all over                                          C:\Embedded\Rover\Rover_slave.ASM
000079   3008     MOVLW     0x8            			MOVLW	8					;                                                                 C:\Embedded\Rover\Rover_slave.ASM
00007a   00a3     MOVWF     0x23           			MOVWF	L_BITS				;Initialize bit counter                                       C:\Embedded\Rover\Rover_slave.ASM
00007b   30ff     MOVLW     0xff           			MOVLW	-1					;  so index goes to 0 on BOF                                     C:\Embedded\Rover\Rover_slave.ASM
00007c   00a7     MOVWF     0x27           			MOVWF	L_INDEX				;                                                            C:\Embedded\Rover\Rover_slave.ASM
00007d   124b     BCF       0x4b,0x4       			BCF		BYTE_FULL			;                                                            C:\Embedded\Rover\Rover_slave.ASM
00007e   12cb     BCF       0x4b,0x5       			BCF		RESET_CNTRS			;                                                          C:\Embedded\Rover\Rover_slave.ASM
00007f   104c     BCF       0x4c,0x0       			BCF		BOF_FOUND			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000080   01cc     CLRF      0x4c           			CLRF	G_Pr_status			;                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
                                           _SLAVE_ACTIONS							;                                                           C:\Embedded\Rover\Rover_slave.ASM
000081   0064     CLRWDT                   			CLRWDT						;Clear watch dog                                                  C:\Embedded\Rover\Rover_slave.ASM
000082   1c06     BTFSS     0x6,0x0        			BTFSS	DCLK				;IF DCLCLK PULSE (CC1000 rdy to receive?)                       C:\Embedded\Rover\Rover_slave.ASM
000083   288b     GOTO      0x8b           			GOTO	_COMMS_END			;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000084   2097     CALL      0x97           			CALL	RECEIVE_BIT			;                                                          C:\Embedded\Rover\Rover_slave.ASM
000085   1e4b     BTFSS     0x4b,0x4       			BTFSS	BYTE_FULL			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000086   288b     GOTO      0x8b           			GOTO	_COMMS_END			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000087   1c4c     BTFSS     0x4c,0x0       			BTFSS	BOF_FOUND			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000088   288b     GOTO      0x8b           			GOTO	_COMMS_END			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000089   20ce     CALL      0xce           			CALL	RECEIVE_BYTE		;                                                          C:\Embedded\Rover\Rover_slave.ASM
00008a   124b     BCF       0x4b,0x4       			BCF		BYTE_FULL			;                                                            C:\Embedded\Rover\Rover_slave.ASM
00008b   2873     GOTO      0x73           _COMMS_END	GOTO	_IDLE_LOOP			;                                                   C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;On expiration of TIMER1, builds a square wave on the port used for driving the  C:\Embedded\Rover\Rover_slave.ASM
                                           ;steering motor.  (See CALCULATE_PERIOD for L_FREQ_x calculations)               C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           STEER_FREQ								;                                                              C:\Embedded\Rover\Rover_slave.ASM
00008c   1c87     BTFSS     0x7,0x1        			BTFSS	STEERING			;SWAP THE STATE OF THE IO PORT                               C:\Embedded\Rover\Rover_slave.ASM
00008d   2890     GOTO      0x90           			GOTO	$+3					;                                                                C:\Embedded\Rover\Rover_slave.ASM
00008e   1087     BCF       0x7,0x1        			BCF		STEERING			;                                                             C:\Embedded\Rover\Rover_slave.ASM
00008f   2891     GOTO      0x91           			GOTO	$+2					;                                                                C:\Embedded\Rover\Rover_slave.ASM
000090   1487     BSF       0x7,0x1        			BSF		STEERING			;                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000091   0953     COMF      0x53,0x0       			COMF	L_FREQ_H,W			;reset timer 1 with new period                              C:\Embedded\Rover\Rover_slave.ASM
000092   008f     MOVWF     0xf            			MOVWF	TMR1H				;                                                              C:\Embedded\Rover\Rover_slave.ASM
000093   0952     COMF      0x52,0x0       			COMF	L_FREQ_L,W			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000094   008e     MOVWF     0xe            			MOVWF	TMR1L				;                                                              C:\Embedded\Rover\Rover_slave.ASM
000095   100c     BCF       0xc,0x0        			BCF		PIR1,TMR1IF			;clear TMR1 interrupt flag                                 C:\Embedded\Rover\Rover_slave.ASM
000096   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;Receive the next bit,count full bytes, find the beginning of a frame.           C:\Embedded\Rover\Rover_slave.ASM
                                           ;CALLED FROM: Idle loop                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           RECEIVE_BIT								;                                                             C:\Embedded\Rover\Rover_slave.ASM
000097   3005     MOVLW     0x5            			MOVLW	d'5'				;persistancy check on DCLK                                      C:\Embedded\Rover\Rover_slave.ASM
000098   00ca     MOVWF     0x4a           			MOVWF	L_PERSIST			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000099   1c06     BTFSS     0x6,0x0        _DCLK_TST	BTFSS	DCLK				;                                                        C:\Embedded\Rover\Rover_slave.ASM
00009a   28aa     GOTO      0xaa           			GOTO	_RX_ERROR			;ignore spikes                                               C:\Embedded\Rover\Rover_slave.ASM
00009b   0bca     DECFSZ    0x4a,0x1       			DECFSZ	L_PERSIST,F			;                                                        C:\Embedded\Rover\Rover_slave.ASM
00009c   2899     GOTO      0x99           			GOTO	_DCLK_TST			;                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00009d   0807     MOVF      0x7,0x0        			MOVF	PORTC,W				;Persistancy check on DIO (data)                              C:\Embedded\Rover\Rover_slave.ASM
00009e   3908     ANDLW     0x8            			ANDLW	8					;PORTC<3>                                                         C:\Embedded\Rover\Rover_slave.ASM
00009f   00a8     MOVWF     0x28           			MOVWF	L_PORTC				;                                                            C:\Embedded\Rover\Rover_slave.ASM
0000a0   3004     MOVLW     0x4            			MOVLW	d'4'				;                                                               C:\Embedded\Rover\Rover_slave.ASM
0000a1   00ca     MOVWF     0x4a           			MOVWF	L_PERSIST			;                                                           C:\Embedded\Rover\Rover_slave.ASM
0000a2   0807     MOVF      0x7,0x0        _DIO_IN_P	MOVF	PORTC,W				;read again                                            C:\Embedded\Rover\Rover_slave.ASM
0000a3   3908     ANDLW     0x8            			ANDLW	8					;                                                                 C:\Embedded\Rover\Rover_slave.ASM
0000a4   0628     XORWF     0x28,0x0       			XORWF	L_PORTC,W			;                                                           C:\Embedded\Rover\Rover_slave.ASM
0000a5   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;still the same?                                             C:\Embedded\Rover\Rover_slave.ASM
0000a6   28aa     GOTO      0xaa           			GOTO	_RX_ERROR			;                                                            C:\Embedded\Rover\Rover_slave.ASM
0000a7   0bca     DECFSZ    0x4a,0x1       			DECFSZ	L_PERSIST,F			;                                                        C:\Embedded\Rover\Rover_slave.ASM
0000a8   28a2     GOTO      0xa2           			GOTO	_DIO_IN_P			;                                                            C:\Embedded\Rover\Rover_slave.ASM
0000a9   28ac     GOTO      0xac           			GOTO	_RX_CONT			;                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000aa   0ad5     INCF      0x55,0x1       _RX_ERROR	INCF	D_BUG1,F			;                                                      C:\Embedded\Rover\Rover_slave.ASM
0000ab   28cd     GOTO      0xcd           			GOTO	_RX_END				;ignore spikes                                                C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000ac   0ad6     INCF      0x56,0x1       _RX_CONT	INCF	D_BUG2,F			;                                                       C:\Embedded\Rover\Rover_slave.ASM
0000ad   1c06     BTFSS     0x6,0x0        			BTFSS	DCLK				;                                                               C:\Embedded\Rover\Rover_slave.ASM
0000ae   28ad     GOTO      0xad           			GOTO	$-1					;stay here till DCLK is low                                      C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000af   1003     BCF       0x3,0x0        			CLRC						;Accept bit                                                         C:\Embedded\Rover\Rover_slave.ASM
0000b0   0da9     RLF       0x29,0x1       			RLF		L_DATA_RX,F			;                                                          C:\Embedded\Rover\Rover_slave.ASM
0000b1   0103     CLRW                     			CLRW						;                                                                   C:\Embedded\Rover\Rover_slave.ASM
0000b2   19a8     BTFSC     0x28,0x3       			BTFSC	L_PORTC,3			;                                                           C:\Embedded\Rover\Rover_slave.ASM
0000b3   3001     MOVLW     0x1            			MOVLW	1					;                                                                 C:\Embedded\Rover\Rover_slave.ASM
0000b4   04a9     IORWF     0x29,0x1       			IORWF	L_DATA_RX,F			;                                                         C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000b5   184c     BTFSC     0x4c,0x0       			BTFSC	BOF_FOUND			; If BOF has been found we are now collecting data          C:\Embedded\Rover\Rover_slave.ASM
0000b6   28c0     GOTO      0xc0           			GOTO	_BOF_CONT2			;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           										;Look for BOF                                                          C:\Embedded\Rover\Rover_slave.ASM
0000b7   0829     MOVF      0x29,0x0       			MOVF	L_DATA_RX,W			;This check is done bit by bit through the 1st             C:\Embedded\Rover\Rover_slave.ASM
0000b8   3caa     SUBLW     0xaa           			SUBLW	0xAA				; byte of the preamble                                          C:\Embedded\Rover\Rover_slave.ASM
0000b9   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;zero flag set when 0 (EQ)                                   C:\Embedded\Rover\Rover_slave.ASM
0000ba   28bd     GOTO      0xbd           			GOTO	_BOF_FOUND			;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000bb   104c     BCF       0x4c,0x0       _NO_BOF		BCF		BOF_FOUND			;                                                      C:\Embedded\Rover\Rover_slave.ASM
0000bc   28cd     GOTO      0xcd           			GOTO	_RX_END				;                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000bd   144c     BSF       0x4c,0x0       _BOF_FOUND	BSF		BOF_FOUND			;Begining of Frame found                             C:\Embedded\Rover\Rover_slave.ASM
0000be   3001     MOVLW     0x1            			MOVLW	1					;Force recognition of 1st byte of data                            C:\Embedded\Rover\Rover_slave.ASM
0000bf   00a3     MOVWF     0x23           			MOVWF	L_BITS				;                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000c0   0ba3     DECFSZ    0x23,0x1       _BOF_CONT2	DECFSZ	L_BITS,F			;8 bits received?                                   C:\Embedded\Rover\Rover_slave.ASM
0000c1   28cd     GOTO      0xcd           			GOTO	_RX_END				;                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000c2   164b     BSF       0x4b,0x4       			BSF		BYTE_FULL			;                                                            C:\Embedded\Rover\Rover_slave.ASM
0000c3   0aa4     INCF      0x24,0x1       			INCF	L_BYTES,F			;L_BYTES are modified by each procedure                      C:\Embedded\Rover\Rover_slave.ASM
0000c4   0aa7     INCF      0x27,0x1       			INCF	L_INDEX,F			;  (on detection of BOF, L_BYTES is 1)                       C:\Embedded\Rover\Rover_slave.ASM
0000c5   3008     MOVLW     0x8            			MOVLW	8					;                                                                 C:\Embedded\Rover\Rover_slave.ASM
0000c6   00a3     MOVWF     0x23           			MOVWF	L_BITS				;reset bit count                                              C:\Embedded\Rover\Rover_slave.ASM
0000c7   0827     MOVF      0x27,0x0       			MOVF	L_INDEX,W			;                                                            C:\Embedded\Rover\Rover_slave.ASM
0000c8   3e2a     ADDLW     0x2a           			ADDLW	L_RX_BUFF			;                                                           C:\Embedded\Rover\Rover_slave.ASM
0000c9   0084     MOVWF     0x4            			MOVWF	FSR					;Complete byte put in the RX_BUFFER                             C:\Embedded\Rover\Rover_slave.ASM
0000ca   0829     MOVF      0x29,0x0       			MOVF	L_DATA_RX,W			;                                                          C:\Embedded\Rover\Rover_slave.ASM
0000cb   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\Rover\Rover_slave.ASM
0000cc   108b     BCF       0xb,0x1        			BCF		INTCON,INTF			;                                                          C:\Embedded\Rover\Rover_slave.ASM
0000cd   0008     RETURN                   _RX_END		RETURN						;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;Treat reception of a packet - the first byte of the pre-amble has already been  C:\Embedded\Rover\Rover_slave.ASM
                                           ;detected                                                                        C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           RECEIVE_BYTE							;                                                             C:\Embedded\Rover\Rover_slave.ASM
0000ce   18cc     BTFSC     0x4c,0x1       			BTFSC	PREAM_FINISHED		;                                                       C:\Embedded\Rover\Rover_slave.ASM
0000cf   28d2     GOTO      0xd2           			GOTO	_UNIQUE_ID			;                                                           C:\Embedded\Rover\Rover_slave.ASM
0000d0   20f6     CALL      0xf6           			CALL	CHECK_PREAMBLE		;Continue checking the preamble                          C:\Embedded\Rover\Rover_slave.ASM
0000d1   28e6     GOTO      0xe6           			GOTO	_RCV_FINISH			;                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000d2   194c     BTFSC     0x4c,0x2       _UNIQUE_ID	BTFSC	UI_FINISHED			;                                                 C:\Embedded\Rover\Rover_slave.ASM
0000d3   28d6     GOTO      0xd6           			GOTO	_ADDRESS			;                                                             C:\Embedded\Rover\Rover_slave.ASM
0000d4   2108     CALL      0x108          			CALL	CHECK_UI			;Frame valid, checks the Unique Identifier                    C:\Embedded\Rover\Rover_slave.ASM
0000d5   28e6     GOTO      0xe6           			GOTO	_RCV_FINISH			;                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000d6   19cc     BTFSC     0x4c,0x3       _ADDRESS	BTFSC	ADDR_CMPLT			;                                                    C:\Embedded\Rover\Rover_slave.ASM
0000d7   28da     GOTO      0xda           			GOTO	_NBR_BYTES			;                                                           C:\Embedded\Rover\Rover_slave.ASM
0000d8   211f     CALL      0x11f          			CALL	CHECK_ADDR			;                                                           C:\Embedded\Rover\Rover_slave.ASM
0000d9   28e6     GOTO      0xe6           			GOTO	_RCV_FINISH			;                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000da   1a4c     BTFSC     0x4c,0x4       _NBR_BYTES	BTFSC	NBR_BYTES_RCVD		;Number of bytes field has been received        C:\Embedded\Rover\Rover_slave.ASM
0000db   28de     GOTO      0xde           			GOTO	_RECV_DATA			;                                                           C:\Embedded\Rover\Rover_slave.ASM
0000dc   2130     CALL      0x130          			CALL	NBR_BYTES_DATA		;                                                        C:\Embedded\Rover\Rover_slave.ASM
0000dd   28e6     GOTO      0xe6           			GOTO	_RCV_FINISH			;                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000de   1acc     BTFSC     0x4c,0x5       _RECV_DATA	BTFSC	DATA_RECEIVED		;                                                C:\Embedded\Rover\Rover_slave.ASM
0000df   28e2     GOTO      0xe2           			GOTO	_SUMCHECK			;                                                            C:\Embedded\Rover\Rover_slave.ASM
0000e0   213d     CALL      0x13d          			CALL	ACCEPT_DATA			;data is made available                                    C:\Embedded\Rover\Rover_slave.ASM
0000e1   28e6     GOTO      0xe6           			GOTO	_RCV_FINISH			;                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000e2   1b4c     BTFSC     0x4c,0x6       _SUMCHECK	BTFSC	SUMCHECK_DONE		;                                                 C:\Embedded\Rover\Rover_slave.ASM
0000e3   28e5     GOTO      0xe5           			GOTO	_ACCEPT_COMMAND		;                                                       C:\Embedded\Rover\Rover_slave.ASM
0000e4   214a     CALL      0x14a          			CALL	CHECK_SUM			;                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
                                           _ACCEPT_COMMAND							;                                                          C:\Embedded\Rover\Rover_slave.ASM
0000e5   215d     CALL      0x15d          			CALL	PROCESS_DATA		;Finished - sets RESET_CNTRS to force start over           C:\Embedded\Rover\Rover_slave.ASM
                                           _RCV_FINISH								;                                                             C:\Embedded\Rover\Rover_slave.ASM
0000e6   01a9     CLRF      0x29           			CLRF	L_DATA_RX			;                                                            C:\Embedded\Rover\Rover_slave.ASM
0000e7   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;This is a good place to set a break in case of error.  This procedure is made   C:\Embedded\Rover\Rover_slave.ASM
                                           ;available to the library modules.                                               C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           TREAT_ERROR                                                                      C:\Embedded\Rover\Rover_slave.ASM
                                           			Global	TREAT_ERROR                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           #IFDEF	DEBUG_MODE                                                                C:\Embedded\Rover\Rover_slave.ASM
0000e8   01d0     CLRF      0x50           			clrf	D_BUGGGER			;                                                            C:\Embedded\Rover\Rover_slave.ASM
0000e9   0850     MOVF      0x50,0x0       _read_all	movf	D_BUGGGER,w			;                                                   C:\Embedded\Rover\Rover_slave.ASM
0000ea   00d7     MOVWF     0x57           			movwf	G_CC_Reg			;read all regs 1 by 1                                        C:\Embedded\Rover\Rover_slave.ASM
0000eb   3c1c     SUBLW     0x1c           			sublw	d'28'				;                                                              C:\Embedded\Rover\Rover_slave.ASM
0000ec   1c03     BTFSS     0x3,0x0        			btfss	STATUS,C			;                                                            C:\Embedded\Rover\Rover_slave.ASM
0000ed   28f3     GOTO      0xf3           			goto	_SKIP_REGS			;                                                           C:\Embedded\Rover\Rover_slave.ASM
0000ee   21d8     CALL      0x1d8          			call	ReadFromCC1000register                                                   C:\Embedded\Rover\Rover_slave.ASM
0000ef   0858     MOVF      0x58,0x0       			movf	G_CC_Data,w			;                                                          C:\Embedded\Rover\Rover_slave.ASM
0000f0   0000     NOP                      BREAKPOINT	nop							;READ THE REGISTER                                          C:\Embedded\Rover\Rover_slave.ASM
0000f1   0ad0     INCF      0x50,0x1       			incf	D_BUGGGER,f			;                                                          C:\Embedded\Rover\Rover_slave.ASM
0000f2   28e9     GOTO      0xe9           			goto	_read_all			;                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           #ENDIF									;                                                                 C:\Embedded\Rover\Rover_slave.ASM
0000f3   0ace     INCF      0x4e,0x1       _SKIP_REGS	incf	D_ERROR_CNT,F		;count transmission errors										;             C:\Embedded\Rover\Rover_slave.ASM
0000f4   16cb     BSF       0x4b,0x5       			BSF		RESET_CNTRS			;                                                          C:\Embedded\Rover\Rover_slave.ASM
0000f5   0008     RETURN                   			RETURN                                                                        C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;This is the first procedure to be called after a RX. Detects and validates the preamble. C:\Embedded\Rover\Rover_slave.ASM
                                           ;The first byte of the preamble, in L_RX_BUFF(0), has already been detected and counted by C:\Embedded\Rover\Rover_slave.ASM
                                           ;RECEIVE_BIT                                                                     C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           CHECK_PREAMBLE							;                                                           C:\Embedded\Rover\Rover_slave.ASM
0000f6   0827     MOVF      0x27,0x0       			MOVF	L_INDEX,W			;Point to the RX_buffer                                      C:\Embedded\Rover\Rover_slave.ASM
0000f7   3e2a     ADDLW     0x2a           			ADDLW	L_RX_BUFF			;                                                           C:\Embedded\Rover\Rover_slave.ASM
0000f8   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\Rover\Rover_slave.ASM
0000f9   30aa     MOVLW     0xaa           			MOVLW	0xAA				;                                                               C:\Embedded\Rover\Rover_slave.ASM
0000fa   0200     SUBWF     0x0,0x0        			SUBWF	INDF,W				;			                                                          C:\Embedded\Rover\Rover_slave.ASM
0000fb   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;zero flag set when 0 (EQ)                                   C:\Embedded\Rover\Rover_slave.ASM
0000fc   2904     GOTO      0x104          			GOTO	_PREA_FAIL			;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0000fd   0824     MOVF      0x24,0x0       _PREA_CONT	MOVF	L_BYTES,W			;The minimun matches must be 3                       C:\Embedded\Rover\Rover_slave.ASM
0000fe   3c02     SUBLW     0x2            			SUBLW	2					;                                                                 C:\Embedded\Rover\Rover_slave.ASM
0000ff   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000100   2907     GOTO      0x107          			GOTO	_PREA_FIN			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000101   14cc     BSF       0x4c,0x1       			BSF		PREAM_FINISHED		;Preamble found - this is where AverageLock would be managed C:\Embedded\Rover\Rover_slave.ASM
000102   01a4     CLRF      0x24           			CLRF	L_BYTES				;  if we were not using Manchester coding                     C:\Embedded\Rover\Rover_slave.ASM
000103   2907     GOTO      0x107          			GOTO	_PREA_FIN			;			                                                         C:\Embedded\Rover\Rover_slave.ASM
000104   16cb     BSF       0x4b,0x5       _PREA_FAIL	BSF		RESET_CNTRS			;                                                  C:\Embedded\Rover\Rover_slave.ASM
000105   104c     BCF       0x4c,0x0       			BCF		BOF_FOUND			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000106   01a4     CLRF      0x24           			CLRF	L_BYTES				;                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000107   0008     RETURN                   _PREA_FIN	RETURN						;                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;Checks for an exact match of the Unique Identifiers (2 bytes)                   C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
000108   302a     MOVLW     0x2a           CHECK_UI	MOVLW	L_RX_BUFF			;Point to the unique code of the receive buffer       C:\Embedded\Rover\Rover_slave.ASM
000109   3e02     ADDLW     0x2            			ADDLW	(UI-1)				;adjust for L_BYTES (1,2,3,...)                               C:\Embedded\Rover\Rover_slave.ASM
00010a   0724     ADDWF     0x24,0x0       			ADDWF	L_BYTES,W			;                                                           C:\Embedded\Rover\Rover_slave.ASM
00010b   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\Rover\Rover_slave.ASM
00010c   3001     MOVLW     0x1            			MOVLW	1					;                                                                 C:\Embedded\Rover\Rover_slave.ASM
00010d   0224     SUBWF     0x24,0x0       			SUBWF	L_BYTES,W			;Decide if we're looking for UI1 or UI2                     C:\Embedded\Rover\Rover_slave.ASM
00010e   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\Rover\Rover_slave.ASM
00010f   2912     GOTO      0x112          			GOTO	_CODE2				;                                                              C:\Embedded\Rover\Rover_slave.ASM
000110   30cd     MOVLW     0xcd           			MOVLW	UI_CODE1			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000111   2913     GOTO      0x113          			GOTO	_UI_CONT			;                                                             C:\Embedded\Rover\Rover_slave.ASM
000112   304d     MOVLW     0x4d           _CODE2		MOVLW	UI_CODE2			;                                                       C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000113   0200     SUBWF     0x0,0x0        _UI_CONT	SUBWF	INDF,W				;			                                                    C:\Embedded\Rover\Rover_slave.ASM
000114   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;zero flag set when 0 (EQ)                                   C:\Embedded\Rover\Rover_slave.ASM
000115   291d     GOTO      0x11d          			GOTO	_UI_FAIL			;                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000116   0824     MOVF      0x24,0x0       			MOVF	L_BYTES,W			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000117   3c02     SUBLW     0x2            			SUBLW	UI_SIZE				;done checking IU?                                           C:\Embedded\Rover\Rover_slave.ASM
000118   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000119   291e     GOTO      0x11e          			GOTO	_UI_BACK			;                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00011a   154c     BSF       0x4c,0x2       			BSF		UI_FINISHED			;UI complete and successful                                C:\Embedded\Rover\Rover_slave.ASM
00011b   01a4     CLRF      0x24           			CLRF	L_BYTES				;                                                             C:\Embedded\Rover\Rover_slave.ASM
00011c   291e     GOTO      0x11e          			GOTO	_UI_BACK			;                                                             C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00011d   20e8     CALL      0xe8           _UI_FAIL	CALL	TREAT_ERROR			;IF ERROR                                            C:\Embedded\Rover\Rover_slave.ASM
00011e   0008     RETURN                   _UI_BACK	RETURN						;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;Address is not implemented, check for 0,0 now                                   C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
00011f   302a     MOVLW     0x2a           CHECK_ADDR	MOVLW	L_RX_BUFF			;                                                   C:\Embedded\Rover\Rover_slave.ASM
000120   3e04     ADDLW     0x4            			ADDLW	(ADDRESS-1)			;                                                         C:\Embedded\Rover\Rover_slave.ASM
000121   0724     ADDWF     0x24,0x0       			ADDWF	L_BYTES,W			;Point to address part in the receive buffer                C:\Embedded\Rover\Rover_slave.ASM
000122   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\Rover\Rover_slave.ASM
000123   3000     MOVLW     0x0            			MOVLW	0					;fake address                                                     C:\Embedded\Rover\Rover_slave.ASM
000124   0200     SUBWF     0x0,0x0        			SUBWF	INDF,W				;			                                                          C:\Embedded\Rover\Rover_slave.ASM
000125   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;zero flag set when 0 (EQ)                                   C:\Embedded\Rover\Rover_slave.ASM
000126   292e     GOTO      0x12e          			GOTO	_ADDR_FAIL			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000127   0824     MOVF      0x24,0x0       			MOVF	L_BYTES,W			;Check the Addr and set the ADDR_CMPLT flag                  C:\Embedded\Rover\Rover_slave.ASM
000128   3c02     SUBLW     0x2            			SUBLW	ADD_SIZE			; if this is the last byte (of 2)                            C:\Embedded\Rover\Rover_slave.ASM
000129   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\Rover\Rover_slave.ASM
00012a   292f     GOTO      0x12f          			GOTO	_ADDR_BACK			;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00012b   15cc     BSF       0x4c,0x3       			BSF		ADDR_CMPLT			;Address complete and correct                               C:\Embedded\Rover\Rover_slave.ASM
00012c   01a4     CLRF      0x24           			CLRF	L_BYTES				;                                                             C:\Embedded\Rover\Rover_slave.ASM
00012d   292f     GOTO      0x12f          			GOTO	_ADDR_BACK			;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00012e   20e8     CALL      0xe8           _ADDR_FAIL	CALL	TREAT_ERROR			;IF ERROR                                          C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00012f   0008     RETURN                   _ADDR_BACK	RETURN						;                                                         C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;We receive exactly 7 bytes of data.  If we are going to implement a             C:\Embedded\Rover\Rover_slave.ASM
                                           ;variable size frame, Timer1 must be loaded according to the following:          C:\Embedded\Rover\Rover_slave.ASM
                                           ;((numer of bytes in the frame* (10**6/baudrate)) / timer1 prescaler)            C:\Embedded\Rover\Rover_slave.ASM
                                           ;where: 10**6/baudrate at 9600 = 104 uS per bit                                  C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           NBR_BYTES_DATA							;                                                           C:\Embedded\Rover\Rover_slave.ASM
000130   302a     MOVLW     0x2a           			MOVLW	L_RX_BUFF			;Point to number of bytes in the receive buffer             C:\Embedded\Rover\Rover_slave.ASM
000131   3e06     ADDLW     0x6            			ADDLW	(NO_BYTES-1)		;                                                         C:\Embedded\Rover\Rover_slave.ASM
000132   0724     ADDWF     0x24,0x0       			ADDWF	L_BYTES,W			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000133   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\Rover\Rover_slave.ASM
000134   3007     MOVLW     0x7            			MOVLW	7					;make sure number of bytes is seven                               C:\Embedded\Rover\Rover_slave.ASM
000135   0200     SUBWF     0x0,0x0        			SUBWF	INDF,W				;                                                             C:\Embedded\Rover\Rover_slave.ASM
000136   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;zero flag set when 0 (EQ)                                   C:\Embedded\Rover\Rover_slave.ASM
000137   293b     GOTO      0x13b          			GOTO	_BYTES_FAIL			;                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000138   164c     BSF       0x4c,0x4       			BSF		NBR_BYTES_RCVD		;                                                        C:\Embedded\Rover\Rover_slave.ASM
000139   01a4     CLRF      0x24           			CLRF	L_BYTES				;                                                             C:\Embedded\Rover\Rover_slave.ASM
00013a   293c     GOTO      0x13c          			GOTO	_BYTES_DONE			;                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00013b   20e8     CALL      0xe8           _BYTES_FAIL	CALL	TREAT_ERROR			;If too big or too small                          C:\Embedded\Rover\Rover_slave.ASM
00013c   0008     RETURN                   _BYTES_DONE	RETURN						;                                                        C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;Here the only thing to be done is wait for the number of bytes we are supposed to receive C:\Embedded\Rover\Rover_slave.ASM
                                           ;(currently fixed to 7 bytes) and set the DATA_RECEIVED flag. The real check for data  C:\Embedded\Rover\Rover_slave.ASM
                                           ;validity is in the checksum and in the processing of that data.                 C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ACCEPT_DATA	                                                                     C:\Embedded\Rover\Rover_slave.ASM
00013d   302a     MOVLW     0x2a           			MOVLW	L_RX_BUFF			;                                                           C:\Embedded\Rover\Rover_slave.ASM
00013e   3e07     ADDLW     0x7            			ADDLW	(DATA_OFFS-1)		;                                                        C:\Embedded\Rover\Rover_slave.ASM
00013f   0724     ADDWF     0x24,0x0       			ADDWF	L_BYTES,W			;Point to data part of the receive buffer                   C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000140   302a     MOVLW     0x2a           			MOVLW	L_RX_BUFF			;Point to number of bytes                                   C:\Embedded\Rover\Rover_slave.ASM
000141   3e07     ADDLW     0x7            			ADDLW	NO_BYTES			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000142   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\Rover\Rover_slave.ASM
000143   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\Rover\Rover_slave.ASM
000144   0224     SUBWF     0x24,0x0       			SUBWF	L_BYTES,W			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000145   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000146   2949     GOTO      0x149          			GOTO	_ACCEPT_END			;                                                          C:\Embedded\Rover\Rover_slave.ASM
000147   16cc     BSF       0x4c,0x5       			BSF		DATA_RECEIVED		;all data received                                        C:\Embedded\Rover\Rover_slave.ASM
000148   01a4     CLRF      0x24           			CLRF	L_BYTES				;                                                             C:\Embedded\Rover\Rover_slave.ASM
000149   0008     RETURN                   _ACCEPT_END	RETURN						;                                                        C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;Sum check is only one byte so no use checking length.  This procedure called during C:\Embedded\Rover\Rover_slave.ASM
                                           ;reception of a frame                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           ;CALLED FROM: RECEIVE                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
00014a   302a     MOVLW     0x2a           CHECK_SUM	MOVLW	L_RX_BUFF			;                                                    C:\Embedded\Rover\Rover_slave.ASM
00014b   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\Rover\Rover_slave.ASM
00014c   300f     MOVLW     0xf            			MOVLW	(TOT_FRAME_SIZ-1)	;                                                     C:\Embedded\Rover\Rover_slave.ASM
00014d   00a0     MOVWF     0x20           			MOVWF	L_Temp1				;                                                            C:\Embedded\Rover\Rover_slave.ASM
00014e   0103     CLRW                     			CLRW						;                                                                   C:\Embedded\Rover\Rover_slave.ASM
00014f   0700     ADDWF     0x0,0x0        _CS_LOOP	ADDWF	INDF,W				;calculate the CS for the frame                         C:\Embedded\Rover\Rover_slave.ASM
000150   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\Rover\Rover_slave.ASM
000151   0ba0     DECFSZ    0x20,0x1       			DECFSZ	L_Temp1,F			;                                                          C:\Embedded\Rover\Rover_slave.ASM
000152   294f     GOTO      0x14f          			GOTO	_CS_LOOP			;                                                             C:\Embedded\Rover\Rover_slave.ASM
000153   00a2     MOVWF     0x22           			MOVWF	L_Temp_CS			;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000154   302a     MOVLW     0x2a           			MOVLW	L_RX_BUFF			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000155   0727     ADDWF     0x27,0x0       			ADDWF	L_INDEX,W			;L_INDEX points to CS                                       C:\Embedded\Rover\Rover_slave.ASM
000156   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\Rover\Rover_slave.ASM
000157   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\Rover\Rover_slave.ASM
000158   0222     SUBWF     0x22,0x0       			SUBWF	L_Temp_CS,W			;                                                         C:\Embedded\Rover\Rover_slave.ASM
000159   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;SCs must be identical                                       C:\Embedded\Rover\Rover_slave.ASM
00015a   20e8     CALL      0xe8           			CALL	TREAT_ERROR			;                                                          C:\Embedded\Rover\Rover_slave.ASM
00015b   174c     BSF       0x4c,0x6       _SC_OK		BSF		SUMCHECK_DONE		;                                                    C:\Embedded\Rover\Rover_slave.ASM
00015c   0008     RETURN                   _SC_FIN		RETURN						;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;Output the received data to the corresonding ports                              C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           PROCESS_DATA							;                                                             C:\Embedded\Rover\Rover_slave.ASM
00015d   3038     MOVLW     0x38           			MOVLW	L_RX_BUFF+0xE		;Read the L_RX_BUFFER get received data for channel 1    C:\Embedded\Rover\Rover_slave.ASM
00015e   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\Rover\Rover_slave.ASM
00015f   2195     CALL      0x195          			CALL	OUTPUT_PWM			;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000160   3037     MOVLW     0x37           			MOVLW	L_RX_BUFF+0xD		;Read the L_RX_BUFFER get received data for channel 2    C:\Embedded\Rover\Rover_slave.ASM
000161   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\Rover\Rover_slave.ASM
000162   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\Rover\Rover_slave.ASM
000163   00d2     MOVWF     0x52           			MOVWF	L_FREQ_L			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000164   2184     CALL      0x184          			CALL	CALCULATE_PERIOD	;set the period value for next timer 1 expiration       C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000165   3036     MOVLW     0x36           			MOVLW	L_RX_BUFF+0xC		;                                                        C:\Embedded\Rover\Rover_slave.ASM
000166   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\Rover\Rover_slave.ASM
000167   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\Rover\Rover_slave.ASM
000168   00a1     MOVWF     0x21           			MOVWF	L_TEMP_2			;                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000169   1003     BCF       0x3,0x0        			CLRC						;Read the L_RX_BUFFER get received data from the Switches           C:\Embedded\Rover\Rover_slave.ASM
00016a   0ca1     RRF       0x21,0x1       			RRF		L_TEMP_2,F			;                                                           C:\Embedded\Rover\Rover_slave.ASM
00016b   1c03     BTFSS     0x3,0x0        			BTFSS	STATUS,C			;output to LED1                                              C:\Embedded\Rover\Rover_slave.ASM
00016c   1207     BCF       0x7,0x4        			BCF		LED1				;                                                                C:\Embedded\Rover\Rover_slave.ASM
00016d   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\Rover\Rover_slave.ASM
00016e   1607     BSF       0x7,0x4        			BSF		LED1				;                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
00016f   0ca1     RRF       0x21,0x1       			RRF		L_TEMP_2,F			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000170   1c03     BTFSS     0x3,0x0        			BTFSS	STATUS,C			;output to LED2                                              C:\Embedded\Rover\Rover_slave.ASM
000171   1106     BCF       0x6,0x2        			BCF		LED2				;                                                                C:\Embedded\Rover\Rover_slave.ASM
000172   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000173   1506     BSF       0x6,0x2        			BSF		LED2				;                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000174   0ca1     RRF       0x21,0x1       			RRF		L_TEMP_2,F			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000175   1c03     BTFSS     0x3,0x0        			BTFSS	STATUS,C			;output to LED3                                              C:\Embedded\Rover\Rover_slave.ASM
000176   1086     BCF       0x6,0x1        			BCF		LED3				;                                                                C:\Embedded\Rover\Rover_slave.ASM
000177   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000178   1486     BSF       0x6,0x1        			BSF		LED3				;                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000179   3036     MOVLW     0x36           			MOVLW	L_RX_BUFF+0xC		;clean up                                                C:\Embedded\Rover\Rover_slave.ASM
00017a   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\Rover\Rover_slave.ASM
00017b   0180     CLRF      0x0            			CLRF	INDF				;                                                                C:\Embedded\Rover\Rover_slave.ASM
00017c   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\Rover\Rover_slave.ASM
00017d   0180     CLRF      0x0            			CLRF	INDF				;                                                                C:\Embedded\Rover\Rover_slave.ASM
00017e   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\Rover\Rover_slave.ASM
00017f   0180     CLRF      0x0            			CLRF	INDF				;                                                                C:\Embedded\Rover\Rover_slave.ASM
                                                                                                                            C:\Embedded\Rover\Rover_slave.ASM
000180   16cb     BSF       0x4b,0x5       			BSF		RESET_CNTRS			;                                                          C:\Embedded\Rover\Rover_slave.ASM
000181   302a     MOVLW     0x2a           			MOVLW	L_RX_BUFF			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000182   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
000183   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;Based on the value received from the master, calculate the period of the        C:\Embedded\Rover\Rover_slave.ASM
                                           ;steering motor:	1/2 PERIOD = (2780+(255-L_FREQ_L)*4)/2                          C:\Embedded\Rover\Rover_slave.ASM
                                           ;i.e. the value 0xFF correspond to the maximun freq of 360Hz or 2.78ms period    C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           CALCULATE_PERIOD						;                                                          C:\Embedded\Rover\Rover_slave.ASM
000184   01d3     CLRF      0x53           			CLRF	L_FREQ_H			;                                                             C:\Embedded\Rover\Rover_slave.ASM
000185   09d2     COMF      0x52,0x1       			COMF	L_FREQ_L,F			;X=(255-L_FREQ_L)                                           C:\Embedded\Rover\Rover_slave.ASM
000186   0dd2     RLF       0x52,0x1       			RLF		L_FREQ_L,F			;X=X*2                                                      C:\Embedded\Rover\Rover_slave.ASM
000187   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000188   0ad3     INCF      0x53,0x1       			INCF	L_FREQ_H,F			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000189   0dd2     RLF       0x52,0x1       			RLF		L_FREQ_L,F			;X=X*4                                                      C:\Embedded\Rover\Rover_slave.ASM
00018a   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\Rover\Rover_slave.ASM
00018b   0ad3     INCF      0x53,0x1       			INCF	L_FREQ_H,F			;                                                           C:\Embedded\Rover\Rover_slave.ASM
00018c   30dc     MOVLW     0xdc           			MOVLW	0XDC				;X=X+2780                                                       C:\Embedded\Rover\Rover_slave.ASM
00018d   07d2     ADDWF     0x52,0x1       			ADDWF	L_FREQ_L,F			;                                                          C:\Embedded\Rover\Rover_slave.ASM
00018e   0cd2     RRF       0x52,0x1       			RRF		L_FREQ_L,F			;                                                           C:\Embedded\Rover\Rover_slave.ASM
00018f   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\Rover\Rover_slave.ASM
000190   0ad3     INCF      0x53,0x1       			INCF	L_FREQ_H,F			;                                                           C:\Embedded\Rover\Rover_slave.ASM
000191   300a     MOVLW     0xa            			MOVLW	0X0A				;			                                                            C:\Embedded\Rover\Rover_slave.ASM
000192   07d3     ADDWF     0x53,0x1       			ADDWF	L_FREQ_H,F			;                                                          C:\Embedded\Rover\Rover_slave.ASM
000193   0cd3     RRF       0x53,0x1       			RRF		L_FREQ_H,F			;X=X/2                                                      C:\Embedded\Rover\Rover_slave.ASM
000194   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           ;Output received value to the traction wheels                                    C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           OUTPUT_PWM								;                                                              C:\Embedded\Rover\Rover_slave.ASM
000195   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\Rover\Rover_slave.ASM
000196   00a1     MOVWF     0x21           			MOVWF	L_TEMP_2			;                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           		M_CMPL_JG	L_TEMP_2,0x84,_FORWARD                                               C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
                                           		M_CMPL_JL	L_TEMP_2,0x7C,_BACKWARD                                              C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0001a2   1387     BCF       0x7,0x7        _STOP		BCF		SPIN_DIR			;SINK 0, SOURCE ZERO                                      C:\Embedded\Rover\Rover_slave.ASM
0001a3   0195     CLRF      0x15           			CLRF	CCPR1L				;                                                              C:\Embedded\Rover\Rover_slave.ASM
0001a4   29b7     GOTO      0x1b7          			GOTO	_OUTPUT_FIN			;                                                          C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0001a5   1787     BSF       0x7,0x7        _FORWARD	BSF		SPIN_DIR			;SINK 1, SOURCE NEGATIVE                                C:\Embedded\Rover\Rover_slave.ASM
0001a6   09a1     COMF      0x21,0x1       			COMF	L_TEMP_2,F			;                                                           C:\Embedded\Rover\Rover_slave.ASM
0001a7   29ac     GOTO      0x1ac          			GOTO	_WRITE_PWM			;                                                           C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0001a8   1387     BCF       0x7,0x7        _BACKWARD	BCF		SPIN_DIR			;SINK 0, SOURCE POSITIVE                               C:\Embedded\Rover\Rover_slave.ASM
0001a9   09a1     COMF      0x21,0x1       			COMF	L_TEMP_2,F			;                                                           C:\Embedded\Rover\Rover_slave.ASM
0001aa   307f     MOVLW     0x7f           			MOVLW	0X7F				;                                                               C:\Embedded\Rover\Rover_slave.ASM
0001ab   05a1     ANDWF     0x21,0x1       			ANDWF	L_TEMP_2,F			;                                                          C:\Embedded\Rover\Rover_slave.ASM
0001ac   0ca1     RRF       0x21,0x1       _WRITE_PWM	RRF		L_TEMP_2,F			;LSB - > CCP1CON<5,4>                               C:\Embedded\Rover\Rover_slave.ASM
0001ad   1217     BCF       0x17,0x4       			BCF		CCP1CON,4			;                                                            C:\Embedded\Rover\Rover_slave.ASM
0001ae   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\Rover\Rover_slave.ASM
0001af   1617     BSF       0x17,0x4       			BSF		CCP1CON,4			;                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0001b0   0ca1     RRF       0x21,0x1       			RRF		L_TEMP_2,F			;                                                           C:\Embedded\Rover\Rover_slave.ASM
0001b1   1297     BCF       0x17,0x5       			BCF		CCP1CON,5			;                                                            C:\Embedded\Rover\Rover_slave.ASM
0001b2   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\Rover\Rover_slave.ASM
0001b3   1697     BSF       0x17,0x5       			BSF		CCP1CON,5			;                                                            C:\Embedded\Rover\Rover_slave.ASM
0001b4   303f     MOVLW     0x3f           			MOVLW	0x3F				;MSB - > CCPR1L                                                 C:\Embedded\Rover\Rover_slave.ASM
0001b5   0521     ANDWF     0x21,0x0       			ANDWF	L_TEMP_2,W			;                                                          C:\Embedded\Rover\Rover_slave.ASM
0001b6   0095     MOVWF     0x15           			MOVWF	CCPR1L				;                                                             C:\Embedded\Rover\Rover_slave.ASM
                                                                                                                            C:\Embedded\Rover\Rover_slave.ASM
                                                                                                                            C:\Embedded\Rover\Rover_slave.ASM
                                                                                                                            C:\Embedded\Rover\Rover_slave.ASM
                                                                                                                            C:\Embedded\Rover\Rover_slave.ASM
                                           										;                                                                      C:\Embedded\Rover\Rover_slave.ASM
0001b7   0008     RETURN                   _OUTPUT_FIN	RETURN						;                                                        C:\Embedded\Rover\Rover_slave.ASM
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Rover_slave.ASM
                                           			END		; of code                                                                C:\Embedded\Rover\Rover_slave.ASM
                                           ;************************************************************                    C:\Embedded\Rover\CC1000_routines.asm
                                           ;	TITLE:	CC1000 assembler routines                                               C:\Embedded\Rover\CC1000_routines.asm
                                           ;	FILENAME:  CC1000_routines.asm                                                 C:\Embedded\Rover\CC1000_routines.asm
                                           ;	REVISION HISTORY:  31-03-03 First try                                          C:\Embedded\Rover\CC1000_routines.asm
                                           ;	HARDWARE: BIT SRL. transciever                                                 C:\Embedded\Rover\CC1000_routines.asm
                                           ;	FREQUENCY: 4MHz                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;	Function: Unlinked Object with Interfaces to CC1000                            C:\Embedded\Rover\CC1000_routines.asm
                                           ;************************************************************                    C:\Embedded\Rover\CC1000_routines.asm
                                           			list	p=16f876A	; "A" for test with ICE2000                                    C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
                                           #include	<p16f876.inc>                                                           C:\Embedded\Rover\CC1000_routines.asm
                                                   LIST                                                                     C:\PROGRA~1\MPLABI~1\MCHIP_Tools\p16f876.inc
                                           ; P16F876.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.  C:\PROGRA~1\MPLABI~1\MCHIP_Tools\p16f876.inc
                                                   LIST                                                                     C:\PROGRA~1\MPLABI~1\MCHIP_Tools\p16f876.inc
                                           #include 	<CC1000.h>                                                             C:\Embedded\Rover\CC1000_routines.asm
                                           ;/* Constants defined for CC1000 */                                              C:\EMBEDDED\ROVER\CC1000.h
                                                                                                                            C:\EMBEDDED\ROVER\CC1000.h
                                           ;/* Register addresses */                                                        C:\EMBEDDED\ROVER\CC1000.h
                                                                                                                            C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_MAIN            0x00                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FREQ_2A         0x01                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FREQ_1A         0x02                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FREQ_0A         0x03                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FREQ_2B         0x04                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FREQ_1B         0x05                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FREQ_0B         0x06                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FSEP1           0x07                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FSEP0           0x08                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_CURRENT         0x09                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FRONT_END       0x0A                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_PA_POW          0x0B                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_PLL             0x0C                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_LOCK            0x0D                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_CAL             0x0E                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_MODEM2          0x0F                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_MODEM1          0x10                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_MODEM0          0x11                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_MATCH           0x12                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FSCTRL          0x13                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FSHAPE7         0x14                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FSHAPE6         0x15                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FSHAPE5         0x16                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FSHAPE4         0x17                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FSHAPE3         0x18                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FSHAPE2         0x19                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FSHAPE1         0x1A                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_FSDELAY         0x1B                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_PRESCALER       0x1C                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_TEST6           0x40                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_TEST5           0x41                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_TEST4           0x42                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_TEST3           0x43                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_TEST2           0x44                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_TEST1           0x45                                              C:\EMBEDDED\ROVER\CC1000.h
                                           #define CC1000_TEST0           0x46                                              C:\EMBEDDED\ROVER\CC1000.h
                                                                                                                            C:\EMBEDDED\ROVER\CC1000.h
                                           #include 	<rover.h>                                                              C:\Embedded\Rover\CC1000_routines.asm
                                           ;Pin usage definitions for the rover Master/Tranmitter                           C:\EMBEDDED\ROVER\rover.h
                                           ;CC1000 and PIC16f76                                                             C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           ;===========================================================                     C:\EMBEDDED\ROVER\rover.h
                                           ;CHANGE THESE DEFINITIONS WHEN COMPILING THE ASM CODE OR THE                     C:\EMBEDDED\ROVER\rover.h
                                           ;LIBRARY FOR MASTER OR FOR SLAVE                                                 C:\EMBEDDED\ROVER\rover.h
                                           ;#define		TX_MASTER                                                              C:\EMBEDDED\ROVER\rover.h
                                           #define		RX_SLAVE                                                                C:\EMBEDDED\ROVER\rover.h
                                           ;===========================================================                     C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                           	ifdef	TX_MASTER                                                                 C:\EMBEDDED\ROVER\rover.h
                                           #define PCLK			PORTC,1	;                                                         C:\EMBEDDED\ROVER\rover.h
                                           #define PALE			PORTC,2	;                                                         C:\EMBEDDED\ROVER\rover.h
                                           	else                                                                            C:\EMBEDDED\ROVER\rover.h
                                           #define PCLK			PORTA,2	;                                                         C:\EMBEDDED\ROVER\rover.h
                                           #define PALE			PORTA,1	;                                                         C:\EMBEDDED\ROVER\rover.h
                                           	endif                                                                           C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                           #define PDATA			PORTC,0	; Register interfaces                                    C:\EMBEDDED\ROVER\rover.h
                                           #define DIO 			PORTC,3	; Data interfaces                                         C:\EMBEDDED\ROVER\rover.h
                                           #define DCLK			PORTB,0 ;                                                         C:\EMBEDDED\ROVER\rover.h
                                           #define CHP_OUT			PORTC,5 ;not used                                              C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           #define PDATA_DIR		TRISC,0                                                       C:\EMBEDDED\ROVER\rover.h
                                           #define DIO_DIR			TRISC,3                                                        C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           #define SW1				PORTB,1	;Switches on Trasnmitter side                             C:\EMBEDDED\ROVER\rover.h
                                           #define SW2				PORTB,2	;                                                         C:\EMBEDDED\ROVER\rover.h
                                           #define SW3				PORTB,3	;                                                         C:\EMBEDDED\ROVER\rover.h
                                           #define	STEERING		PORTC,1	;                                                      C:\EMBEDDED\ROVER\rover.h
                                           #define	SPIN_DIR		PORTC,7	;                                                      C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           #define LED1			PORTC,4	;(IN5)LEDs on Receiver side corresponding to the          C:\EMBEDDED\ROVER\rover.h
                                           #define LED2			PORTB,2	;(IN6) swithces above                                     C:\EMBEDDED\ROVER\rover.h
                                           #define LED3			PORTB,1	;(IN7)                                                    C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           ;ERRORS AND OTHER EVENTS                                                         C:\EMBEDDED\ROVER\rover.h
                                           #define BUTTON_PRESSED	G_Events,0                                                C:\EMBEDDED\ROVER\rover.h
                                           #define REPLY_SENT		G_Events,1                                                   C:\EMBEDDED\ROVER\rover.h
                                           #define	NEW_COUNT		G_Events,2                                                    C:\EMBEDDED\ROVER\rover.h
                                           #define TIME_0_OUT		G_Events,3                                                   C:\EMBEDDED\ROVER\rover.h
                                           #define BYTE_FULL		G_Events,4                                                    C:\EMBEDDED\ROVER\rover.h
                                           #define RESET_CNTRS		G_Events,5                                                  C:\EMBEDDED\ROVER\rover.h
                                           #define CALIBRATION_OK	G_Events,6                                                C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           ;STATES                                                                          C:\EMBEDDED\ROVER\rover.h
                                           #define IDLE_MODE		G_State,0                                                     C:\EMBEDDED\ROVER\rover.h
                                           #define MASTER			G_State,1                                                       C:\EMBEDDED\ROVER\rover.h
                                           #define SLAVE			G_State,2                                                        C:\EMBEDDED\ROVER\rover.h
                                           #define RXCVER			G_State,3                                                       C:\EMBEDDED\ROVER\rover.h
                                           #define TXMTER			G_State,4                                                       C:\EMBEDDED\ROVER\rover.h
                                           #define	QUIET			G_State,5                                                        C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           ;PROTOCOL                                                                        C:\EMBEDDED\ROVER\rover.h
                                           ;PROTOCOL PARTS                                                                  C:\EMBEDDED\ROVER\rover.h
                                           #define BOF_FOUND		G_Pr_status,0                                                 C:\EMBEDDED\ROVER\rover.h
                                           #define PREAM_FINISHED	G_Pr_status,1                                             C:\EMBEDDED\ROVER\rover.h
                                           #define UI_FINISHED		G_Pr_status,2                                               C:\EMBEDDED\ROVER\rover.h
                                           #define	ADDR_CMPLT		G_Pr_status,3                                                C:\EMBEDDED\ROVER\rover.h
                                           #define NBR_BYTES_RCVD	G_Pr_status,4                                             C:\EMBEDDED\ROVER\rover.h
                                           #define DATA_RECEIVED	G_Pr_status,5                                              C:\EMBEDDED\ROVER\rover.h
                                           #define SUMCHECK_DONE	G_Pr_status,6                                              C:\EMBEDDED\ROVER\rover.h
                                           #define CMMND_COMPLETE	G_Pr_status,7                                             C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           ;OFFSETS:                                                                        C:\EMBEDDED\ROVER\rover.h
                                           #define PREAMBLE		0x00                                                           C:\EMBEDDED\ROVER\rover.h
                                           #define UI				0x03                                                               C:\EMBEDDED\ROVER\rover.h
                                           #define ADDRESS			0x05                                                           C:\EMBEDDED\ROVER\rover.h
                                           #define NO_BYTES		0x07                                                           C:\EMBEDDED\ROVER\rover.h
                                           #define DATA_OFFS		0x08                                                          C:\EMBEDDED\ROVER\rover.h
                                           #define SUM_CHECK		0x0F                                                          C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           #define	UI_CODE1		0xCD	;unique ramdom number                                     C:\EMBEDDED\ROVER\rover.h
                                           #define	UI_CODE2		0x4D	;                                                         C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           ;NUMBER OF BYTES                                                                 C:\EMBEDDED\ROVER\rover.h
                                           #define PREA_SIZE		3                                                             C:\EMBEDDED\ROVER\rover.h
                                           #define UI_SIZE			2                                                              C:\EMBEDDED\ROVER\rover.h
                                           #define ADD_SIZE		2                                                              C:\EMBEDDED\ROVER\rover.h
                                           #define NBR_SIZE		1                                                              C:\EMBEDDED\ROVER\rover.h
                                           #define DATA_SIZE		7                                                             C:\EMBEDDED\ROVER\rover.h
                                           #define CS_SIZE			1                                                              C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                           TOT_FRAME_SIZ			equ	PREA_SIZE+UI_SIZE+ADD_SIZE+NBR_SIZE+DATA_SIZE+CS_SIZE        C:\EMBEDDED\ROVER\rover.h
                                           FIXED_PART				equ	PREA_SIZE+UI_SIZE+ADD_SIZE+NBR_SIZE                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                           #define	RX_CURRENT		0x44 ;0100xxxx=950uA, XXXX=?????                             C:\EMBEDDED\ROVER\rover.h
                                           #define RXPLL			0x60                                                             C:\EMBEDDED\ROVER\rover.h
                                           #define	TX_CURRENT		0x81 ;1000xxxx=1450uA                                        C:\EMBEDDED\ROVER\rover.h
                                           #define TXPLL			0x48                                                             C:\EMBEDDED\ROVER\rover.h
                                           #define PA_VALUE		0xFF                                                           C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                           ;TIMER 1 TIMERS                                                                  C:\EMBEDDED\ROVER\rover.h
                                           ;;;#define	RXMIT_TIM1L		0x90	;at 9600bps: h'3590 = 13,712uS=14ms                 C:\EMBEDDED\ROVER\rover.h
                                           ;;;#define	RXMIT_TIM1H		0x35	; (104uS/b*8bit/byt*16byt/frame+250uS+xx+ switch RX-TX) C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                           #define	RXMIT_TIM1L		0xf0	;20ms includes delays for the master switch RX -> TX   C:\EMBEDDED\ROVER\rover.h
                                           #define	RXMIT_TIM1H		0x55	;                                                      C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                           ;LOCK TIMEOUTS (this is a 16 bit integer e.g. 01FF)                              C:\EMBEDDED\ROVER\rover.h
                                           #define	LOCK1			0xFF                                                             C:\EMBEDDED\ROVER\rover.h
                                           #define	LOCK2			0x01                                                             C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                           ;TOGGLES AND CONTROLS FOR LEDS                                                   C:\EMBEDDED\ROVER\rover.h
                                           ;#define TOGGLE_G		L_GREEN_CTL,7                                                 C:\EMBEDDED\ROVER\rover.h
                                           ;#define	GREEN_FLAG		L_GREEN_CTL,6                                               C:\EMBEDDED\ROVER\rover.h
                                           ;#define	SPEED_G			L_GREEN_CTL,5                                                 C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           ;#define TOGGLE_R		L_RED_CTL,7                                                   C:\EMBEDDED\ROVER\rover.h
                                           ;#define	RED_FLAG		L_RED_CTL,6                                                   C:\EMBEDDED\ROVER\rover.h
                                           ;#define	SPEED_R			L_RED_CTL,5                                                   C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           ;#define	SLOW_ON			b'11000110'		;1xx..=start on, x1x..=on, xx000110=6 beats      C:\EMBEDDED\ROVER\rover.h
                                           ;#define	SLOW_OFF		b'01000110'		;0xx..=start off, x1x..=on, xx000110=6 beats     C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           ;#define	FAST_ON			b'11000010'                                                   C:\EMBEDDED\ROVER\rover.h
                                           ;#define	FAST_OFF		b'01000010'                                                   C:\EMBEDDED\ROVER\rover.h
                                           ;                                                                                C:\EMBEDDED\ROVER\rover.h
                                           ;#define VERYSLOW		b'11010000'                                                   C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\EMBEDDED\ROVER\rover.h
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
                                           ;MISCELLANEOUS DEFINITIONS	                                                      C:\Embedded\Rover\CC1000_routines.asm
                                           #define F_Carry	STATUS,0	;Most Significant Bit gets rotated through carry flag   C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
                                           ;Library support:                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;================                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           	extern	DelaymS,Delay100uS,DelayuS,GET_NEXT_REGISTER,TREAT_ERROR                 C:\Embedded\Rover\CC1000_routines.asm
                                           	extern	CC1Kregs                                                                 C:\Embedded\Rover\CC1000_routines.asm
                                           	                                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           	                                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;MACROS                                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           ;======                                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           @PDATAOUT	MACRO                                                                  C:\Embedded\Rover\CC1000_routines.asm
0001f4   1683     BSF       0x3,0x5        			BSF		STATUS,RP0			;bank 1                                                     C:\Embedded\Rover\CC1000_routines.asm
0001f5   1007     BCF       0x7,0x0        			BCF		PDATA_DIR			;output                                                      C:\Embedded\Rover\CC1000_routines.asm
0001f6   1283     BCF       0x3,0x5        			BCF		STATUS,RP0			;return to bank0                                            C:\Embedded\Rover\CC1000_routines.asm
                                           			ENDM                                                                          C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
                                           @PDATAIN	MACRO                                                                   C:\Embedded\Rover\CC1000_routines.asm
0001e5   1683     BSF       0x3,0x5        			BSF		STATUS,RP0			;bank 1                                                     C:\Embedded\Rover\CC1000_routines.asm
0001e6   1407     BSF       0x7,0x0        			BSF		PDATA_DIR			;input                                                       C:\Embedded\Rover\CC1000_routines.asm
0001e7   1283     BCF       0x3,0x5        			BCF		STATUS,RP0			;return to bank0                                            C:\Embedded\Rover\CC1000_routines.asm
                                           			ENDM                                                                          C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
                                           @DIOOUT		MACRO	                                                                  C:\Embedded\Rover\CC1000_routines.asm
0002d3   1683     BSF       0x3,0x5        			BSF		STATUS,RP0			;bank 1                                                     C:\Embedded\Rover\CC1000_routines.asm
0002d4   1301     BCF       0x1,0x6        			BCF		OPTION_REG,6		;Interrupt on RB0 falling edge                             C:\Embedded\Rover\CC1000_routines.asm
0002d5   1187     BCF       0x7,0x3        			BCF		DIO_DIR				;output                                                       C:\Embedded\Rover\CC1000_routines.asm
0002d6   1283     BCF       0x3,0x5        			BCF		STATUS,RP0			;return to bank0                                            C:\Embedded\Rover\CC1000_routines.asm
                                           			ENDM                                                                          C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
                                           @DIOIN		MACRO                                                                    C:\Embedded\Rover\CC1000_routines.asm
000253   1683     BSF       0x3,0x5        			BSF		STATUS,RP0			;bank 1                                                     C:\Embedded\Rover\CC1000_routines.asm
0002a1   1683     BSF       0x3,0x5                                                                                         
000254   1701     BSF       0x1,0x6        			BSF		OPTION_REG,6		;Interrupt on RB0 rising edge                              C:\Embedded\Rover\CC1000_routines.asm
0002a2   1701     BSF       0x1,0x6                                                                                         
000255   1587     BSF       0x7,0x3        			BSF		DIO_DIR				;input                                                        C:\Embedded\Rover\CC1000_routines.asm
0002a3   1587     BSF       0x7,0x3                                                                                         
000256   1283     BCF       0x3,0x5        			BCF		STATUS,RP0			;return to bank0                                            C:\Embedded\Rover\CC1000_routines.asm
0002a4   1283     BCF       0x3,0x5                                                                                         
                                           			ENDM                                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           	                                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           	UDATA                                                                           C:\Embedded\Rover\CC1000_routines.asm
                                           ;GLOBAL DATA                                                                     C:\Embedded\Rover\CC1000_routines.asm
                                           G_CC_Reg	res	1                                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           G_CC_Data	res	1                                                                  C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
                                           ;LOCAL DATA	                                                                     C:\Embedded\Rover\CC1000_routines.asm
                                           L_BITCOU_W	res	1	;bit counter for writing to CC100 regs                          C:\Embedded\Rover\CC1000_routines.asm
                                           L_BITCOU_R	res	1	;bit counter for reading from CC1000 regs                       C:\Embedded\Rover\CC1000_routines.asm
                                           L_BITCOU_S	res	1	;bit counter for sending addr to CC1000 regs                    C:\Embedded\Rover\CC1000_routines.asm
                                           L_TEMPADD	res	1	;                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           L_TEMPDATA	res	1	;                                                               C:\Embedded\Rover\CC1000_routines.asm
                                           L_SUP_REG	res	1	;register counter in setupall                                    C:\Embedded\Rover\CC1000_routines.asm
                                           L_RX_CUR	res	1	;RX current                                                       C:\Embedded\Rover\CC1000_routines.asm
                                           L_TX_CUR	res	1	;TX current                                                       C:\Embedded\Rover\CC1000_routines.asm
                                           ;                                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           L_TIMEOUT1	res	1	;                                                               C:\Embedded\Rover\CC1000_routines.asm
                                           L_TIMEOUT2	res	1	;                                                               C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
                                           ;EXTERNAL OR GLOBAL SYMBOLS                                                      C:\Embedded\Rover\CC1000_routines.asm
                                           ;============================                                                    C:\Embedded\Rover\CC1000_routines.asm
                                           	global G_CC_Reg,G_CC_Data                                                       C:\Embedded\Rover\CC1000_routines.asm
                                           	extern	G_Events,G_Pr_status                                                     C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
                                           		CODE	                                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           ;Procedure:	WriteToCC1000register                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;Function:	Write data to CC1000                                                  C:\Embedded\Rover\CC1000_routines.asm
                                           ;Inputs:	Address to write to loaded in Addr                                      C:\Embedded\Rover\CC1000_routines.asm
                                           ;			Value loaded in Data_Unit (does not destroy it)                              C:\Embedded\Rover\CC1000_routines.asm
                                           ;Returns:	Nothing?                                                               C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           WriteToCC1000register                                                            C:\Embedded\Rover\CC1000_routines.asm
                                           			global WriteToCC1000register                                                  C:\Embedded\Rover\CC1000_routines.asm
0001b8   0858     MOVF      0x58,0x0       			MOVF	G_CC_Data,W		;                                                           C:\Embedded\Rover\CC1000_routines.asm
0001b9   00dd     MOVWF     0x5d           			MOVWF	L_TEMPDATA		;                                                           C:\Embedded\Rover\CC1000_routines.asm
0001ba   21fb     CALL      0x1fb          			CALL	Send_address_to_CC1000                                                   C:\Embedded\Rover\CC1000_routines.asm
0001bb   1505     BSF       0x5,0x2        			BSF		PCLK			;                                                                 C:\Embedded\Rover\CC1000_routines.asm
0001bc   0000     NOP                      			NOP						;                                                                    C:\Embedded\Rover\CC1000_routines.asm
0001bd   1407     BSF       0x7,0x0        			BSF		PDATA			;WRITE command is bit(0) HIGH                                    C:\Embedded\Rover\CC1000_routines.asm
0001be   0000     NOP                      			NOP                                                                           C:\Embedded\Rover\CC1000_routines.asm
0001bf   1105     BCF       0x5,0x2        			BCF		PCLK			;(A)                                                              C:\Embedded\Rover\CC1000_routines.asm
0001c0   0000     NOP                      			NOP						;                                                                    C:\Embedded\Rover\CC1000_routines.asm
0001c1   1505     BSF       0x5,0x2        			BSF		PCLK			;(B)                                                              C:\Embedded\Rover\CC1000_routines.asm
0001c2   0000     NOP                      			NOP						;Allow for Tha                                                       C:\Embedded\Rover\CC1000_routines.asm
0001c3   0000     NOP                      			NOP						;Allow for Tha                                                       C:\Embedded\Rover\CC1000_routines.asm
0001c4   1485     BSF       0x5,0x1        			BSF		PALE			;                                                                 C:\Embedded\Rover\CC1000_routines.asm
0001c5   0000     NOP                      			NOP						;Allow for Tsa(2)??                                                  C:\Embedded\Rover\CC1000_routines.asm
0001c6   0000     NOP                      			NOP						;Allow for Tsa(2)??                                                  C:\Embedded\Rover\CC1000_routines.asm
0001c7   0000     NOP                      			NOP						;Allow for Tsa(2)??                                                  C:\Embedded\Rover\CC1000_routines.asm
                                           									;                                                                       C:\Embedded\Rover\CC1000_routines.asm
0001c8   3008     MOVLW     0x8            			MOVLW	0x08			;Send databyte                                                   C:\Embedded\Rover\CC1000_routines.asm
0001c9   00d9     MOVWF     0x59           			MOVWF	L_BITCOU_W		;BIT COUNTER                                                C:\Embedded\Rover\CC1000_routines.asm
0001ca   1505     BSF       0x5,0x2        _WDATA_1	BSF		PCLK			;                                                           C:\Embedded\Rover\CC1000_routines.asm
0001cb   0ddd     RLF       0x5d,0x1       			RLF		L_TEMPDATA,F	;                                                           C:\Embedded\Rover\CC1000_routines.asm
0001cc   1c03     BTFSS     0x3,0x0        			BTFSS	F_Carry			;Carry flag?                                                  C:\Embedded\Rover\CC1000_routines.asm
0001cd   29d0     GOTO      0x1d0          			GOTO	_WDATA_2		;                                                              C:\Embedded\Rover\CC1000_routines.asm
0001ce   1407     BSF       0x7,0x0        			BSF		PDATA			;                                                                C:\Embedded\Rover\CC1000_routines.asm
0001cf   29d1     GOTO      0x1d1          			GOTO	$+2				;                                                                 C:\Embedded\Rover\CC1000_routines.asm
0001d0   1007     BCF       0x7,0x0        _WDATA_2	BCF		PDATA			;                                                          C:\Embedded\Rover\CC1000_routines.asm
0001d1   1105     BCF       0x5,0x2        			BCF		PCLK			;SEND DATA                                                        C:\Embedded\Rover\CC1000_routines.asm
0001d2   0bd9     DECFSZ    0x59,0x1       			DECFSZ	L_BITCOU_W,F	;                                                         C:\Embedded\Rover\CC1000_routines.asm
0001d3   29ca     GOTO      0x1ca          			GOTO	_WDATA_1		;Loop 8 bits                                                   C:\Embedded\Rover\CC1000_routines.asm
0001d4   1505     BSF       0x5,0x2        			BSF		PCLK			;                                                                 C:\Embedded\Rover\CC1000_routines.asm
0001d5   1407     BSF       0x7,0x0        			BSF		PDATA			;                                                                C:\Embedded\Rover\CC1000_routines.asm
0001d6   1485     BSF       0x5,0x1        			BSF		PALE			;                                                                 C:\Embedded\Rover\CC1000_routines.asm
0001d7   0008     RETURN                   			RETURN					;                                                                  C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           ;Procedure:	ReadFromCC1000register                                               C:\Embedded\Rover\CC1000_routines.asm
                                           ;Function:	Reads data from CC1000                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;Inputs:	Address to read from loaded in G_CC_Reg                                 C:\Embedded\Rover\CC1000_routines.asm
                                           ;Returns:	Read byte in G_CC_Data                                                 C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           ReadFromCC1000register                                                           C:\Embedded\Rover\CC1000_routines.asm
                                           			global	ReadFromCC1000register                                                 C:\Embedded\Rover\CC1000_routines.asm
0001d8   21fb     CALL      0x1fb          			CALL	Send_address_to_CC1000                                                   C:\Embedded\Rover\CC1000_routines.asm
0001d9   1505     BSF       0x5,0x2        			BSF		PCLK			;(-A)                                                             C:\Embedded\Rover\CC1000_routines.asm
0001da   0000     NOP                      			NOP						;                                                                    C:\Embedded\Rover\CC1000_routines.asm
0001db   1007     BCF       0x7,0x0        			BCF		PDATA			;READ command is bit(0) LOW                                      C:\Embedded\Rover\CC1000_routines.asm
0001dc   0000     NOP                      			NOP						;                                                                    C:\Embedded\Rover\CC1000_routines.asm
0001dd   1105     BCF       0x5,0x2        			BCF		PCLK			;(A)                                                              C:\Embedded\Rover\CC1000_routines.asm
0001de   0000     NOP                      			NOP						;                                                                    C:\Embedded\Rover\CC1000_routines.asm
0001df   0000     NOP                      			NOP						;                                                                    C:\Embedded\Rover\CC1000_routines.asm
0001e0   0000     NOP                      			NOP						;                                                                    C:\Embedded\Rover\CC1000_routines.asm
0001e1   1505     BSF       0x5,0x2        			BSF		PCLK			;(B)                                                              C:\Embedded\Rover\CC1000_routines.asm
0001e2   0000     NOP                      			NOP						;                                                                    C:\Embedded\Rover\CC1000_routines.asm
0001e3   1407     BSF       0x7,0x0        			BSF		PDATA			;(C)                                                             C:\Embedded\Rover\CC1000_routines.asm
0001e4   1485     BSF       0x5,0x1        			BSF		PALE			;(D)                                                              C:\Embedded\Rover\CC1000_routines.asm
                                           									;                                                                       C:\Embedded\Rover\CC1000_routines.asm
                                           			@PDATAIN				;Data In                                                          C:\Embedded\Rover\CC1000_routines.asm
0001e8   3008     MOVLW     0x8            			MOVLW	0x08			;                                                                C:\Embedded\Rover\CC1000_routines.asm
0001e9   00da     MOVWF     0x5a           			MOVWF	L_BITCOU_R		;BIT COUNTER                                                C:\Embedded\Rover\CC1000_routines.asm
0001ea   01d8     CLRF      0x58           			CLRF	G_CC_Data		;                                                             C:\Embedded\Rover\CC1000_routines.asm
                                           									;                                                                       C:\Embedded\Rover\CC1000_routines.asm
0001eb   1003     BCF       0x3,0x0        _RDATA_1	CLRC					;CLEAR CARRY FLAG                                              C:\Embedded\Rover\CC1000_routines.asm
0001ec   0dd8     RLF       0x58,0x1       			RLF		G_CC_Data,F		;READ CYCLE                                                 C:\Embedded\Rover\CC1000_routines.asm
0001ed   1105     BCF       0x5,0x2        			BCF		PCLK			;                                                                 C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
0001ee   1458     BSF       0x58,0x0       			BSF		G_CC_Data,0		;Transfer PDATA                                             C:\Embedded\Rover\CC1000_routines.asm
0001ef   1c07     BTFSS     0x7,0x0        			BTFSS	PDATA			;                                                               C:\Embedded\Rover\CC1000_routines.asm
0001f0   1058     BCF       0x58,0x0       			BCF		G_CC_Data,0		;                                                           C:\Embedded\Rover\CC1000_routines.asm
                                           									;                                                                       C:\Embedded\Rover\CC1000_routines.asm
0001f1   1505     BSF       0x5,0x2        			BSF		PCLK			;                                                                 C:\Embedded\Rover\CC1000_routines.asm
0001f2   0bda     DECFSZ    0x5a,0x1       			DECFSZ	L_BITCOU_R,F	;                                                         C:\Embedded\Rover\CC1000_routines.asm
0001f3   29eb     GOTO      0x1eb          			GOTO	_RDATA_1		;Loop 8 bits                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           									;read finished                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           			@PDATAOUT				;leave it as Output, high impedance                              C:\Embedded\Rover\CC1000_routines.asm
0001f7   1505     BSF       0x5,0x2        			BSF		PCLK			;                                                                 C:\Embedded\Rover\CC1000_routines.asm
0001f8   1407     BSF       0x7,0x0        			BSF		PDATA			;                                                                C:\Embedded\Rover\CC1000_routines.asm
0001f9   1485     BSF       0x5,0x1        			BSF		PALE			;                                                                 C:\Embedded\Rover\CC1000_routines.asm
0001fa   0008     RETURN                   			RETURN					;                                                                  C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           ;Procedure:	Send_address_to_CC1000                                               C:\Embedded\Rover\CC1000_routines.asm
                                           ;Function:	Sends the address to CC1000 for either read or write operation        C:\Embedded\Rover\CC1000_routines.asm
                                           ;Inputs:	Address  loaded in G_CC_Reg                                             C:\Embedded\Rover\CC1000_routines.asm
                                           ;Returns:	Nothing - does not destroy contents of G_CC_Reg                        C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           Send_address_to_CC1000                                                           C:\Embedded\Rover\CC1000_routines.asm
0001fb   1485     BSF       0x5,0x1        			BSF		PALE			;                                                                 C:\Embedded\Rover\CC1000_routines.asm
0001fc   0857     MOVF      0x57,0x0       			MOVF	G_CC_Reg,W		;                                                            C:\Embedded\Rover\CC1000_routines.asm
0001fd   00dc     MOVWF     0x5c           			MOVWF	L_TEMPADD		;                                                            C:\Embedded\Rover\CC1000_routines.asm
0001fe   1085     BCF       0x5,0x1        			BCF		PALE			;                                                                 C:\Embedded\Rover\CC1000_routines.asm
0001ff   0ddc     RLF       0x5c,0x1       			RLF		L_TEMPADD,F		;Allows for Tsa(1)                                          C:\Embedded\Rover\CC1000_routines.asm
000200   3007     MOVLW     0x7            			MOVLW	7				;7 MSBs                                                            C:\Embedded\Rover\CC1000_routines.asm
000201   00db     MOVWF     0x5b           			MOVWF	L_BITCOU_S		;BIT COUNTER                                                C:\Embedded\Rover\CC1000_routines.asm
000202   1505     BSF       0x5,0x2        _ADDR_0		BSF		PCLK			;SEND ADDRESS                                               C:\Embedded\Rover\CC1000_routines.asm
000203   0ddc     RLF       0x5c,0x1       			RLF		L_TEMPADD,F		;                                                           C:\Embedded\Rover\CC1000_routines.asm
000204   1c03     BTFSS     0x3,0x0        			BTFSS	F_Carry			;Carry flag?                                                  C:\Embedded\Rover\CC1000_routines.asm
000205   2a08     GOTO      0x208          			GOTO	_ADDR_1			;                                                              C:\Embedded\Rover\CC1000_routines.asm
000206   1407     BSF       0x7,0x0        			BSF		PDATA			;                                                                C:\Embedded\Rover\CC1000_routines.asm
000207   2a09     GOTO      0x209          			GOTO	$+2				;                                                                 C:\Embedded\Rover\CC1000_routines.asm
000208   1007     BCF       0x7,0x0        _ADDR_1		BCF		PDATA			;                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           									;                                                                       C:\Embedded\Rover\CC1000_routines.asm
000209   0000     NOP                      			NOP						;                                                                    C:\Embedded\Rover\CC1000_routines.asm
00020a   1105     BCF       0x5,0x2        			BCF		PCLK			;trigger pdata on negative edge of PCLK                           C:\Embedded\Rover\CC1000_routines.asm
00020b   0bdb     DECFSZ    0x5b,0x1       			DECFSZ	L_BITCOU_S,F	;                                                         C:\Embedded\Rover\CC1000_routines.asm
00020c   2a02     GOTO      0x202          			GOTO	_ADDR_0			;Loop 7 bits                                                   C:\Embedded\Rover\CC1000_routines.asm
00020d   0008     RETURN                   			RETURN					;                                                                  C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           ;Procedure:	Setup_CC1000PD                                                       C:\Embedded\Rover\CC1000_routines.asm
                                           ;Function:	Power down CC1000                                                     C:\Embedded\Rover\CC1000_routines.asm
                                           ;		Use WakeUpCC1000RX/TX followed by SetupCC1000RX/TX to wake from power down    C:\Embedded\Rover\CC1000_routines.asm
                                           ;Inputs:	None                                                                    C:\Embedded\Rover\CC1000_routines.asm
                                           ;Returns:	Nothing                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           Setup_CC1000PD                                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           			global	Setup_CC1000PD;                                                        C:\Embedded\Rover\CC1000_routines.asm
00020e   3000     MOVLW     0x0            			MOVLW	CC1000_MAIN		;                                                          C:\Embedded\Rover\CC1000_routines.asm
00020f   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg		;                                                             C:\Embedded\Rover\CC1000_routines.asm
000210   303f     MOVLW     0x3f           			MOVLW	0x3F			;                                                                C:\Embedded\Rover\CC1000_routines.asm
000211   00d8     MOVWF     0x58           			MOVWF	G_CC_Data		;                                                            C:\Embedded\Rover\CC1000_routines.asm
000212   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;Setup CC1000                                       C:\Embedded\Rover\CC1000_routines.asm
                                           									;                                                                       C:\Embedded\Rover\CC1000_routines.asm
000213   300b     MOVLW     0xb            			MOVLW	CC1000_PA_POW	;Clear PA_POW settings                                    C:\Embedded\Rover\CC1000_routines.asm
000214   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg		;                                                             C:\Embedded\Rover\CC1000_routines.asm
000215   01d8     CLRF      0x58           			CLRF	G_CC_Data		;Turn off PA_POW                                              C:\Embedded\Rover\CC1000_routines.asm
000216   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
000217   0008     RETURN                   			RETURN					;                                                                  C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           ;Procedure:	Reset_CC1000                                                         C:\Embedded\Rover\CC1000_routines.asm
                                           ;Function:	Reset CC1000                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           ;Inputs:	None                                                                    C:\Embedded\Rover\CC1000_routines.asm
                                           ;Returns:	Nothing                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           Reset_CC1000                                                                     C:\Embedded\Rover\CC1000_routines.asm
                                           			global	Reset_CC1000	;                                                         C:\Embedded\Rover\CC1000_routines.asm
000218   3000     MOVLW     0x0            			MOVLW	CC1000_MAIN		;                                                          C:\Embedded\Rover\CC1000_routines.asm
000219   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg		;                                                             C:\Embedded\Rover\CC1000_routines.asm
00021a   21d8     CALL      0x1d8          			CALL	ReadFromCC1000register;Save current settings from MAIN                   C:\Embedded\Rover\CC1000_routines.asm
                                           									;                                                                       C:\Embedded\Rover\CC1000_routines.asm
00021b   3000     MOVLW     0x0            			MOVLW	CC1000_MAIN		;                                                          C:\Embedded\Rover\CC1000_routines.asm
00021c   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg		;                                                             C:\Embedded\Rover\CC1000_routines.asm
00021d   30fe     MOVLW     0xfe           			MOVLW	b'11111110'		;xx111110 - (1s pwr dwn everything,0 resets regs)(A)       C:\Embedded\Rover\CC1000_routines.asm
00021e   05d8     ANDWF     0x58,0x1       			ANDWF	G_CC_Data,F		;Reset CC1000                                              C:\Embedded\Rover\CC1000_routines.asm
00021f   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           									;                                                                       C:\Embedded\Rover\CC1000_routines.asm
000220   3001     MOVLW     0x1            			MOVLW	1				;                                                                  C:\Embedded\Rover\CC1000_routines.asm
000221   04d8     IORWF     0x58,0x1       			IORWF	G_CC_Data,F		;Restore MAIN and bring CC1000 out of Reset                C:\Embedded\Rover\CC1000_routines.asm
000222   21b8     CALL      0x1b8          			CALL	WriteToCC1000register; (Fig 16, pg 26 --> (B))                           C:\Embedded\Rover\CC1000_routines.asm
000223   3002     MOVLW     0x2            			MOVLW	2				;Delay 2 Ms  (C)                                                   C:\Embedded\Rover\CC1000_routines.asm
000224   2304     CALL      0x304          			CALL	DelaymS			;                                                              C:\Embedded\Rover\CC1000_routines.asm
000225   0008     RETURN                   			RETURN					;                                                                  C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           ;Procedure:	Setup_CC1000All                                                      C:\Embedded\Rover\CC1000_routines.asm
                                           ;Function:	Loops through the values of the 28 register of the CC1000, values are C:\Embedded\Rover\CC1000_routines.asm
                                           ;           passed in W                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           ;Inputs:	(W)-> CC1000 registers                                                  C:\Embedded\Rover\CC1000_routines.asm
                                           ;Returns:	Nothing                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           Setup_CC1000All                                                                  C:\Embedded\Rover\CC1000_routines.asm
                                           			global 	Setup_CC1000All                                                       C:\Embedded\Rover\CC1000_routines.asm
000226   01de     CLRF      0x5e           			CLRF	L_SUP_REG		;(Fig 16, pg 26 --> (C))                                      C:\Embedded\Rover\CC1000_routines.asm
000227   0ade     INCF      0x5e,0x1       _SETUP		INCF	L_SUP_REG,F		;                                                      C:\Embedded\Rover\CC1000_routines.asm
000228   3000     MOVLW     0x0            			MOVLW	HIGH GET_NEXT_REGISTER	;                                                C:\Embedded\Rover\CC1000_routines.asm
000229   008a     MOVWF     0xa            			MOVWF	PCLATH			;                                                              C:\Embedded\Rover\CC1000_routines.asm
00022a   085e     MOVF      0x5e,0x0       			MOVF	L_SUP_REG,W		;                                                           C:\Embedded\Rover\CC1000_routines.asm
00022b   2005     CALL      0x5            			CALL	GET_NEXT_REGISTER;                                                       C:\Embedded\Rover\CC1000_routines.asm
                                           									;                                                                       C:\Embedded\Rover\CC1000_routines.asm
00022c   00d8     MOVWF     0x58           			MOVWF	G_CC_Data		;                                                            C:\Embedded\Rover\CC1000_routines.asm
00022d   085e     MOVF      0x5e,0x0       			MOVF	L_SUP_REG,W		;                                                           C:\Embedded\Rover\CC1000_routines.asm
00022e   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg		;                                                             C:\Embedded\Rover\CC1000_routines.asm
00022f   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
000230   301c     MOVLW     0x1c           			MOVLW	d'28'			;                                                               C:\Embedded\Rover\CC1000_routines.asm
000231   025e     SUBWF     0x5e,0x0       			SUBWF	L_SUP_REG,W		;			                                                       C:\Embedded\Rover\CC1000_routines.asm
000232   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z		;zero flag set when 0 (EQ)                                    C:\Embedded\Rover\CC1000_routines.asm
000233   2a27     GOTO      0x227          			GOTO	_SETUP			;                                                               C:\Embedded\Rover\CC1000_routines.asm
000234   0008     RETURN                   			RETURN					;                                                                  C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           ;Procedure: WakeUpCC1000toRx                                                     C:\Embedded\Rover\CC1000_routines.asm
                                           ;Function:	Turn on CC1000 from power down to Rx                                  C:\Embedded\Rover\CC1000_routines.asm
                                           ;Inputs:	W = RX_CURRENT                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           ;Returns:	Nothing                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           WakeUpCC1000toRx                                                                 C:\Embedded\Rover\CC1000_routines.asm
                                           			global 	WakeUpCC1000toRx                                                      C:\Embedded\Rover\CC1000_routines.asm
000235   00df     MOVWF     0x5f           			MOVWF	L_RX_CUR			;save                                                        C:\Embedded\Rover\CC1000_routines.asm
000236   3000     MOVLW     0x0            			MOVLW	CC1000_MAIN			;Start CC1000 as receiver:                                C:\Embedded\Rover\CC1000_routines.asm
000237   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000238   303b     MOVLW     0x3b           			MOVLW	b'00111011'			;<7>:rx,<6>:reg A,<2>:Power up xtal osc core              C:\Embedded\Rover\CC1000_routines.asm
000239   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
00023a   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
00023b   3009     MOVLW     0x9            			MOVLW	CC1000_CURRENT		;                                                       C:\Embedded\Rover\CC1000_routines.asm
00023c   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
00023d   085f     MOVF      0x5f,0x0       			MOVF	L_RX_CUR,W			;                                                           C:\Embedded\Rover\CC1000_routines.asm
00023e   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
00023f   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
000240   300c     MOVLW     0xc            			MOVLW	CC1000_PLL			;                                                          C:\Embedded\Rover\CC1000_routines.asm
000241   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000242   3060     MOVLW     0x60           			MOVLW	RXPLL				;                                                              C:\Embedded\Rover\CC1000_routines.asm
000243   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
000244   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
000245   3005     MOVLW     0x5            			MOVLW	5					;Delay 5 Ms                                                       C:\Embedded\Rover\CC1000_routines.asm
000246   2304     CALL      0x304          			CALL	DelaymS				;                                                             C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
000247   3000     MOVLW     0x0            			MOVLW	CC1000_MAIN			;Start CC1000 as receiver:                                C:\Embedded\Rover\CC1000_routines.asm
000248   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000249   3039     MOVLW     0x39           			MOVLW	b'00111001'			;Power up bias generator                                  C:\Embedded\Rover\CC1000_routines.asm
00024a   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
00024b   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
00024c   30fa     MOVLW     0xfa           			MOVLW	d'250'				;                                                             C:\Embedded\Rover\CC1000_routines.asm
00024d   2310     CALL      0x310          			CALL	DelayuS				;                                                             C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
00024e   3000     MOVLW     0x0            			MOVLW	CC1000_MAIN			;                                                         C:\Embedded\Rover\CC1000_routines.asm
00024f   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000250   3031     MOVLW     0x31           			MOVLW	b'00110001'			;Power up frequency synthesiser                           C:\Embedded\Rover\CC1000_routines.asm
000251   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
000252   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
                                           			@DIOIN						;                                                                 C:\Embedded\Rover\CC1000_routines.asm
000257   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           ;Procedure: WakeUpCC1000toTx                                                     C:\Embedded\Rover\CC1000_routines.asm
                                           ;Function:	Turn on CC1000 from power down to Tx                                  C:\Embedded\Rover\CC1000_routines.asm
                                           ;Inputs:	W = TX_CURRENT                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           ;Returns:	Nothing                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           WakeUpCC1000toTx                                                                 C:\Embedded\Rover\CC1000_routines.asm
                                           			global 	WakeUpCC1000toTx                                                      C:\Embedded\Rover\CC1000_routines.asm
000258   00e0     MOVWF     0x60           			MOVWF	L_TX_CUR			;save                                                        C:\Embedded\Rover\CC1000_routines.asm
000259   3000     MOVLW     0x0            			MOVLW	CC1000_MAIN			;Start CC1000 as receiver:                                C:\Embedded\Rover\CC1000_routines.asm
00025a   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
00025b   30fb     MOVLW     0xfb           			MOVLW	b'11111011'			;<7>:rx,<6>:reg A,<2>:Power up xtal osc core              C:\Embedded\Rover\CC1000_routines.asm
00025c   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
00025d   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
00025e   3009     MOVLW     0x9            			MOVLW	CC1000_CURRENT		;                                                       C:\Embedded\Rover\CC1000_routines.asm
00025f   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000260   0860     MOVF      0x60,0x0       			MOVF	L_TX_CUR,W			;                                                           C:\Embedded\Rover\CC1000_routines.asm
000261   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
000262   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
000263   300c     MOVLW     0xc            			MOVLW	CC1000_PLL			;                                                          C:\Embedded\Rover\CC1000_routines.asm
000264   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000265   3048     MOVLW     0x48           			MOVLW	TXPLL				;                                                              C:\Embedded\Rover\CC1000_routines.asm
000266   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
000267   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
000268   3005     MOVLW     0x5            			MOVLW	d'5'				;                                                               C:\Embedded\Rover\CC1000_routines.asm
000269   2304     CALL      0x304          			CALL	DelaymS				;                                                             C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
00026a   3000     MOVLW     0x0            			MOVLW	CC1000_MAIN			;                                                         C:\Embedded\Rover\CC1000_routines.asm
00026b   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
00026c   30f9     MOVLW     0xf9           			MOVLW	b'11111001'			;Turn on bias generator                                   C:\Embedded\Rover\CC1000_routines.asm
00026d   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
00026e   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
00026f   30fa     MOVLW     0xfa           			MOVLW	d'250'				;                                                             C:\Embedded\Rover\CC1000_routines.asm
000270   2310     CALL      0x310          			CALL	DelayuS				;                                                             C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
000271   300b     MOVLW     0xb            			MOVLW	CC1000_PA_POW		;Restore PA_POW settings                                 C:\Embedded\Rover\CC1000_routines.asm
000272   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000273   30ff     MOVLW     0xff           			MOVLW	PA_VALUE			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000274   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
000275   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
000276   3000     MOVLW     0x0            			MOVLW	CC1000_MAIN			;                                                         C:\Embedded\Rover\CC1000_routines.asm
000277   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000278   30f1     MOVLW     0xf1           			MOVLW	b'11110001'			;Turn on freq synthesiser                                 C:\Embedded\Rover\CC1000_routines.asm
000279   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
00027a   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
00027b   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           ;Procedure: SetupCC1000Rx                                                        C:\Embedded\Rover\CC1000_routines.asm
                                           ;Function:	Go to Rx mode Freq A                                                  C:\Embedded\Rover\CC1000_routines.asm
                                           ;Inputs:	W = RX_CURRENT                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           ;Returns:	Nothing                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           SetupCC1000Rx                                                                    C:\Embedded\Rover\CC1000_routines.asm
                                           			global 	SetupCC1000Rx                                                         C:\Embedded\Rover\CC1000_routines.asm
00027c   00df     MOVWF     0x5f           			MOVWF	L_RX_CUR			;save                                                        C:\Embedded\Rover\CC1000_routines.asm
00027d   3000     MOVLW     0x0            			MOVLW	CC1000_MAIN			;Power up RX part                                         C:\Embedded\Rover\CC1000_routines.asm
00027e   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
00027f   3011     MOVLW     0x11           			MOVLW	b'00010001'			;<7>:rx,<6>:reg A,                                        C:\Embedded\Rover\CC1000_routines.asm
000280   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;  <5,4>:Power down TX                                      C:\Embedded\Rover\CC1000_routines.asm
000281   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
000282   300c     MOVLW     0xc            			MOVLW	CC1000_PLL			;                                                          C:\Embedded\Rover\CC1000_routines.asm
000283   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000284   3060     MOVLW     0x60           			MOVLW	RXPLL				;                                                              C:\Embedded\Rover\CC1000_routines.asm
000285   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
000286   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
000287   3009     MOVLW     0x9            			MOVLW	CC1000_CURRENT		;                                                       C:\Embedded\Rover\CC1000_routines.asm
000288   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000289   085f     MOVF      0x5f,0x0       			MOVF	L_RX_CUR,W			;                                                           C:\Embedded\Rover\CC1000_routines.asm
00028a   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
00028b   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
00028c   3002     MOVLW     0x2            			MOVLW	d'2'				;                                                               C:\Embedded\Rover\CC1000_routines.asm
00028d   230a     CALL      0x30a          			CALL	Delay100uS			;                                                           C:\Embedded\Rover\CC1000_routines.asm
00028e   3032     MOVLW     0x32           			MOVLW	d'50'				;                                                              C:\Embedded\Rover\CC1000_routines.asm
00028f   2310     CALL      0x310          			CALL	DelayuS				;                                                             C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
000290   30ff     MOVLW     0xff           			MOVLW	LOCK1				;                                                              C:\Embedded\Rover\CC1000_routines.asm
000291   00e1     MOVWF     0x61           			MOVWF	L_TIMEOUT1			;                                                          C:\Embedded\Rover\CC1000_routines.asm
000292   3001     MOVLW     0x1            			MOVLW	LOCK2				;                                                              C:\Embedded\Rover\CC1000_routines.asm
000293   00e2     MOVWF     0x62           			MOVWF	L_TIMEOUT2			;                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
000294   300d     MOVLW     0xd            _WAIT_RX_LK	MOVLW	CC1000_LOCK			;                                                C:\Embedded\Rover\CC1000_routines.asm
000295   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000296   21d8     CALL      0x1d8          			CALL	ReadFromCC1000register;                                                  C:\Embedded\Rover\CC1000_routines.asm
000297   1858     BTFSC     0x58,0x0       			BTFSC	G_CC_Data,0			; Wait till PLL lock complete                             C:\Embedded\Rover\CC1000_routines.asm
000298   2aa0     GOTO      0x2a0          			GOTO	_CONT_1R			;                                                             C:\Embedded\Rover\CC1000_routines.asm
000299   0be1     DECFSZ    0x61,0x1       			DECFSZ	L_TIMEOUT1,F		;                                                        C:\Embedded\Rover\CC1000_routines.asm
00029a   2a94     GOTO      0x294          			GOTO	_WAIT_RX_LK			;                                                          C:\Embedded\Rover\CC1000_routines.asm
00029b   0be2     DECFSZ    0x62,0x1       			DECFSZ	L_TIMEOUT2,F		;                                                        C:\Embedded\Rover\CC1000_routines.asm
00029c   2a94     GOTO      0x294          			GOTO	_WAIT_RX_LK			;                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
00029d   22d8     CALL      0x2d8          			CALL	CalibrateCC1000		;                                                       C:\Embedded\Rover\CC1000_routines.asm
00029e   1f4b     BTFSS     0x4b,0x6       			BTFSS	CALIBRATION_OK		;PLL not in lock, re-calibrate                          C:\Embedded\Rover\CC1000_routines.asm
00029f   20e8     CALL      0xe8           			CALL	TREAT_ERROR			;                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
0002a0   0000     NOP                      _CONT_1R	NOP							;                                                             C:\Embedded\Rover\CC1000_routines.asm
                                           			@DIOIN						;                                                                 C:\Embedded\Rover\CC1000_routines.asm
0002a5   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           ;Procedure: SetupCC1000Tx                                                        C:\Embedded\Rover\CC1000_routines.asm
                                           ;Function:	Go to Tx mode Freq B                                                  C:\Embedded\Rover\CC1000_routines.asm
                                           ;Inputs:	(W)-> TX_CURRENT                                                        C:\Embedded\Rover\CC1000_routines.asm
                                           ;Returns:	Nothing                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           SetupCC1000Tx                                                                    C:\Embedded\Rover\CC1000_routines.asm
                                           			global 	SetupCC1000Tx                                                         C:\Embedded\Rover\CC1000_routines.asm
0002a6   00e0     MOVWF     0x60           			MOVWF	L_TX_CUR			;save                                                        C:\Embedded\Rover\CC1000_routines.asm
0002a7   300b     MOVLW     0xb            			MOVLW	CC1000_PA_POW		;Turn off PA_POW settings                                C:\Embedded\Rover\CC1000_routines.asm
0002a8   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
0002a9   01d8     CLRF      0x58           			CLRF	G_CC_Data			;Turn off PA_POW to avoid spurs                              C:\Embedded\Rover\CC1000_routines.asm
0002aa   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
0002ab   3000     MOVLW     0x0            			MOVLW	CC1000_MAIN			;Power up TX part                                         C:\Embedded\Rover\CC1000_routines.asm
0002ac   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
0002ad   30e1     MOVLW     0xe1           			MOVLW	b'11100001'			;<7>:tx,<6>:reg B,<5>:Power down RX                       C:\Embedded\Rover\CC1000_routines.asm
0002ae   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
0002af   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                                                                                                            C:\Embedded\Rover\CC1000_routines.asm
0002b0   300c     MOVLW     0xc            			MOVLW	CC1000_PLL			;                                                          C:\Embedded\Rover\CC1000_routines.asm
0002b1   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
0002b2   3048     MOVLW     0x48           			MOVLW	TXPLL				;(0X48)                                                        C:\Embedded\Rover\CC1000_routines.asm
0002b3   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
0002b4   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
0002b5   3009     MOVLW     0x9            			MOVLW	CC1000_CURRENT		;                                                       C:\Embedded\Rover\CC1000_routines.asm
0002b6   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
0002b7   0860     MOVF      0x60,0x0       			MOVF	L_TX_CUR,W			;                                                           C:\Embedded\Rover\CC1000_routines.asm
0002b8   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
0002b9   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
0002ba   3002     MOVLW     0x2            			MOVLW	d'2'				;                                                               C:\Embedded\Rover\CC1000_routines.asm
0002bb   230a     CALL      0x30a          			CALL	Delay100uS			;                                                           C:\Embedded\Rover\CC1000_routines.asm
0002bc   3032     MOVLW     0x32           			MOVLW	d'50'				;                                                              C:\Embedded\Rover\CC1000_routines.asm
0002bd   2310     CALL      0x310          			CALL	DelayuS				;                                                             C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
0002be   30ff     MOVLW     0xff           			MOVLW	LOCK1				;                                                              C:\Embedded\Rover\CC1000_routines.asm
0002bf   00e1     MOVWF     0x61           			MOVWF	L_TIMEOUT1			;                                                          C:\Embedded\Rover\CC1000_routines.asm
0002c0   3001     MOVLW     0x1            			MOVLW	LOCK2				;                                                              C:\Embedded\Rover\CC1000_routines.asm
0002c1   00e2     MOVWF     0x62           			MOVWF	L_TIMEOUT2			;                                                          C:\Embedded\Rover\CC1000_routines.asm
0002c2   300d     MOVLW     0xd            _WAIT_TX_LK	MOVLW	CC1000_LOCK			;                                                C:\Embedded\Rover\CC1000_routines.asm
0002c3   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
0002c4   21d8     CALL      0x1d8          			CALL	ReadFromCC1000register;                                                  C:\Embedded\Rover\CC1000_routines.asm
0002c5   1858     BTFSC     0x58,0x0       			BTFSC	G_CC_Data,0			; Wait till PLL lock complete                             C:\Embedded\Rover\CC1000_routines.asm
0002c6   2ace     GOTO      0x2ce          			GOTO	_CONT_1T			;                                                             C:\Embedded\Rover\CC1000_routines.asm
0002c7   0be1     DECFSZ    0x61,0x1       			DECFSZ	L_TIMEOUT1,F		;                                                        C:\Embedded\Rover\CC1000_routines.asm
0002c8   2ac2     GOTO      0x2c2          			GOTO	_WAIT_TX_LK			;                                                          C:\Embedded\Rover\CC1000_routines.asm
0002c9   0be2     DECFSZ    0x62,0x1       			DECFSZ	L_TIMEOUT2,F		;                                                        C:\Embedded\Rover\CC1000_routines.asm
0002ca   2ac2     GOTO      0x2c2          			GOTO	_WAIT_TX_LK			;                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
0002cb   22d8     CALL      0x2d8          			CALL	CalibrateCC1000		;                                                       C:\Embedded\Rover\CC1000_routines.asm
0002cc   1f4b     BTFSS     0x4b,0x6       			BTFSS	CALIBRATION_OK		; PLL not in lock, recalibrate                          C:\Embedded\Rover\CC1000_routines.asm
0002cd   20e8     CALL      0xe8           			CALL	TREAT_ERROR			;                                                          C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
0002ce   300b     MOVLW     0xb            _CONT_1T	MOVLW	CC1000_PA_POW		;Restore PA_POW settings                           C:\Embedded\Rover\CC1000_routines.asm
0002cf   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
0002d0   30ff     MOVLW     0xff           			MOVLW	PA_VALUE			;                                                            C:\Embedded\Rover\CC1000_routines.asm
0002d1   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
0002d2   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
                                           			@DIOOUT						;                                                                C:\Embedded\Rover\CC1000_routines.asm
0002d7   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           ;Procedure: CalibrateCC1000                                                      C:\Embedded\Rover\CC1000_routines.asm
                                           ;  *** This is different than the single OR dual calibrations (Fig.14,15 page 23,24) C:\Embedded\Rover\CC1000_routines.asm
                                           ;  *** Should it be different for RX and TX - we are doing 2 calibrations...     C:\Embedded\Rover\CC1000_routines.asm
                                           ;Function:	                                                                      C:\Embedded\Rover\CC1000_routines.asm
                                           ;Inputs:	None                                                                    C:\Embedded\Rover\CC1000_routines.asm
                                           ;Returns:	Nothing                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           CalibrateCC1000                                                                  C:\Embedded\Rover\CC1000_routines.asm
                                           			global 	CalibrateCC1000                                                       C:\Embedded\Rover\CC1000_routines.asm
0002d8   300b     MOVLW     0xb            			MOVLW	CC1000_PA_POW		;Clear PA_POW settings                                   C:\Embedded\Rover\CC1000_routines.asm
0002d9   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
0002da   01d8     CLRF      0x58           			CLRF	G_CC_Data			;Turn off PA_POW to avoid spurs                              C:\Embedded\Rover\CC1000_routines.asm
0002db   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
0002dc   300e     MOVLW     0xe            			MOVLW	CC1000_CAL			;Start calibration                                         C:\Embedded\Rover\CC1000_routines.asm
0002dd   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
0002de   30a6     MOVLW     0xa6           			MOVLW	b'10100110'			;&& WAS A5!!	                                             C:\Embedded\Rover\CC1000_routines.asm
0002df   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
0002e0   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
0002e1   300e     MOVLW     0xe            			MOVLW	CC1000_CAL			;                                                          C:\Embedded\Rover\CC1000_routines.asm
0002e2   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
0002e3   21d8     CALL      0x1d8          _WAIT_CAL	CALL	ReadFromCC1000register;                                           C:\Embedded\Rover\CC1000_routines.asm
0002e4   1dd8     BTFSS     0x58,0x3       			BTFSS	G_CC_Data,3			; Wait till calibration complete                          C:\Embedded\Rover\CC1000_routines.asm
0002e5   2ae3     GOTO      0x2e3          			GOTO	_WAIT_CAL			;                                                            C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
0002e6   30ff     MOVLW     0xff           			MOVLW	LOCK1				;                                                              C:\Embedded\Rover\CC1000_routines.asm
0002e7   00e1     MOVWF     0x61           			MOVWF	L_TIMEOUT1			;                                                          C:\Embedded\Rover\CC1000_routines.asm
0002e8   3001     MOVLW     0x1            			MOVLW	LOCK2				;                                                              C:\Embedded\Rover\CC1000_routines.asm
0002e9   00e2     MOVWF     0x62           			MOVWF	L_TIMEOUT2			;                                                          C:\Embedded\Rover\CC1000_routines.asm
0002ea   300d     MOVLW     0xd            _WAI_CAL_LK	MOVLW	CC1000_LOCK			;                                                C:\Embedded\Rover\CC1000_routines.asm
0002eb   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
0002ec   21d8     CALL      0x1d8          			CALL	ReadFromCC1000register;                                                  C:\Embedded\Rover\CC1000_routines.asm
0002ed   1858     BTFSC     0x58,0x0       			BTFSC	G_CC_Data,0			; Wait till PLL lock complete                             C:\Embedded\Rover\CC1000_routines.asm
0002ee   2af8     GOTO      0x2f8          			GOTO	_CONT_CAL			;                                                            C:\Embedded\Rover\CC1000_routines.asm
0002ef   0be1     DECFSZ    0x61,0x1       			DECFSZ	L_TIMEOUT1,F		;                                                        C:\Embedded\Rover\CC1000_routines.asm
0002f0   2aea     GOTO      0x2ea          			GOTO	_WAI_CAL_LK			;                                                          C:\Embedded\Rover\CC1000_routines.asm
0002f1   0be2     DECFSZ    0x62,0x1       			DECFSZ	L_TIMEOUT2,F		;                                                        C:\Embedded\Rover\CC1000_routines.asm
0002f2   2aea     GOTO      0x2ea          			GOTO	_WAI_CAL_LK			;                                                          C:\Embedded\Rover\CC1000_routines.asm
0002f3   1858     BTFSC     0x58,0x0       			BTFSC	G_CC_Data,0			; Wait till PLL lock complete                             C:\Embedded\Rover\CC1000_routines.asm
0002f4   2af8     GOTO      0x2f8          			GOTO	_CONT_CAL			;                                                            C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
0002f5   20e8     CALL      0xe8           			CALL	TREAT_ERROR			;Calibartion failed                                        C:\Embedded\Rover\CC1000_routines.asm
0002f6   134b     BCF       0x4b,0x6       			BCF		CALIBRATION_OK		;                                                        C:\Embedded\Rover\CC1000_routines.asm
0002f7   2af9     GOTO      0x2f9          			GOTO	_CONT_CALE			;                                                           C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
0002f8   174b     BSF       0x4b,0x6       _CONT_CAL	BSF		CALIBRATION_OK		;Indicate calibration successful                  C:\Embedded\Rover\CC1000_routines.asm
0002f9   300e     MOVLW     0xe            _CONT_CALE	MOVLW	CC1000_CAL			;                                                  C:\Embedded\Rover\CC1000_routines.asm
0002fa   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
0002fb   3026     MOVLW     0x26           			MOVLW	b'00100110'			;End calibration                                          C:\Embedded\Rover\CC1000_routines.asm
0002fc   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
0002fd   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
                                           										;                                                                      C:\Embedded\Rover\CC1000_routines.asm
0002fe   300b     MOVLW     0xb            			MOVLW	CC1000_PA_POW		;Restore PA_POW settings                                 C:\Embedded\Rover\CC1000_routines.asm
0002ff   00d7     MOVWF     0x57           			MOVWF	G_CC_Reg			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000300   30ff     MOVLW     0xff           			MOVLW	PA_VALUE			;                                                            C:\Embedded\Rover\CC1000_routines.asm
000301   00d8     MOVWF     0x58           			MOVWF	G_CC_Data			;                                                           C:\Embedded\Rover\CC1000_routines.asm
000302   21b8     CALL      0x1b8          			CALL	WriteToCC1000register;                                                   C:\Embedded\Rover\CC1000_routines.asm
000303   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\Rover\CC1000_routines.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\CC1000_routines.asm
                                           			END							; end of code                                                       C:\Embedded\Rover\CC1000_routines.asm
                                           	                                                                                C:\Embedded\Rover\CC1000_routines.asm
                                           ;************************************************************                    C:\Embedded\Rover\Timeserv.asm
                                           ;	TITLE:	Timing services for PIC17F876A                                          C:\Embedded\Rover\Timeserv.asm
                                           ;	FILENAME:  Timeserv.asm                                                        C:\Embedded\Rover\Timeserv.asm
                                           ;	REVISION HISTORY:  31-03-03 First try                                          C:\Embedded\Rover\Timeserv.asm
                                           ;	HARDWARE: BIT SRL. transciever                                                 C:\Embedded\Rover\Timeserv.asm
                                           ;	FREQUENCY: 4MHz                                                                C:\Embedded\Rover\Timeserv.asm
                                           ;	Function: Provides timing services to other modules                            C:\Embedded\Rover\Timeserv.asm
                                           ;************************************************************                    C:\Embedded\Rover\Timeserv.asm
                                           			list	p=16f876A	; "A" for tests with ICE2000                                   C:\Embedded\Rover\Timeserv.asm
                                                                                                                            C:\Embedded\Rover\Timeserv.asm
                                           #include	<p16f876.inc>                                                           C:\Embedded\Rover\Timeserv.asm
                                                   LIST                                                                     C:\Program Files\MPLAB IDE\MCHIP_Tools\p16f876.inc
                                           ; P16F876.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.  C:\Program Files\MPLAB IDE\MCHIP_Tools\p16f876.inc
                                                   LIST                                                                     C:\Program Files\MPLAB IDE\MCHIP_Tools\p16f876.inc
                                           #include 	<CC1000.h>                                                             C:\Embedded\Rover\Timeserv.asm
                                           ;/* Constants defined for CC1000 */                                              C:\Embedded\Rover\CC1000.h
                                                                                                                            C:\Embedded\Rover\CC1000.h
                                           ;/* Register addresses */                                                        C:\Embedded\Rover\CC1000.h
                                                                                                                            C:\Embedded\Rover\CC1000.h
                                           #define CC1000_MAIN            0x00                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FREQ_2A         0x01                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FREQ_1A         0x02                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FREQ_0A         0x03                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FREQ_2B         0x04                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FREQ_1B         0x05                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FREQ_0B         0x06                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSEP1           0x07                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSEP0           0x08                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_CURRENT         0x09                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FRONT_END       0x0A                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_PA_POW          0x0B                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_PLL             0x0C                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_LOCK            0x0D                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_CAL             0x0E                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_MODEM2          0x0F                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_MODEM1          0x10                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_MODEM0          0x11                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_MATCH           0x12                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSCTRL          0x13                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE7         0x14                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE6         0x15                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE5         0x16                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE4         0x17                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE3         0x18                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE2         0x19                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSHAPE1         0x1A                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_FSDELAY         0x1B                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_PRESCALER       0x1C                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST6           0x40                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST5           0x41                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST4           0x42                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST3           0x43                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST2           0x44                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST1           0x45                                              C:\Embedded\Rover\CC1000.h
                                           #define CC1000_TEST0           0x46                                              C:\Embedded\Rover\CC1000.h
                                                                                                                            C:\Embedded\Rover\CC1000.h
                                           #include 	<rover.h>                                                              C:\Embedded\Rover\Timeserv.asm
                                           ;Pin usage definitions for the rover Master/Tranmitter                           C:\Embedded\Rover\rover.h
                                           ;CC1000 and PIC16f76                                                             C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;===========================================================                     C:\Embedded\Rover\rover.h
                                           ;CHANGE THESE DEFINITIONS WHEN COMPILING THE ASM CODE OR THE                     C:\Embedded\Rover\rover.h
                                           ;LIBRARY FOR MASTER OR FOR SLAVE                                                 C:\Embedded\Rover\rover.h
                                           ;#define		TX_MASTER                                                              C:\Embedded\Rover\rover.h
                                           #define		RX_SLAVE                                                                C:\Embedded\Rover\rover.h
                                           ;===========================================================                     C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           	ifdef	TX_MASTER                                                                 C:\Embedded\Rover\rover.h
                                           #define PCLK			PORTC,1	;                                                         C:\Embedded\Rover\rover.h
                                           #define PALE			PORTC,2	;                                                         C:\Embedded\Rover\rover.h
                                           	else                                                                            C:\Embedded\Rover\rover.h
                                           #define PCLK			PORTA,2	;                                                         C:\Embedded\Rover\rover.h
                                           #define PALE			PORTA,1	;                                                         C:\Embedded\Rover\rover.h
                                           	endif                                                                           C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           #define PDATA			PORTC,0	; Register interfaces                                    C:\Embedded\Rover\rover.h
                                           #define DIO 			PORTC,3	; Data interfaces                                         C:\Embedded\Rover\rover.h
                                           #define DCLK			PORTB,0 ;                                                         C:\Embedded\Rover\rover.h
                                           #define CHP_OUT			PORTC,5 ;not used                                              C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           #define PDATA_DIR		TRISC,0                                                       C:\Embedded\Rover\rover.h
                                           #define DIO_DIR			TRISC,3                                                        C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           #define SW1				PORTB,1	;Switches on Trasnmitter side                             C:\Embedded\Rover\rover.h
                                           #define SW2				PORTB,2	;                                                         C:\Embedded\Rover\rover.h
                                           #define SW3				PORTB,3	;                                                         C:\Embedded\Rover\rover.h
                                           #define	STEERING		PORTC,1	;                                                      C:\Embedded\Rover\rover.h
                                           #define	SPIN_DIR		PORTC,7	;                                                      C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           #define LED1			PORTC,4	;(IN5)LEDs on Receiver side corresponding to the          C:\Embedded\Rover\rover.h
                                           #define LED2			PORTB,2	;(IN6) swithces above                                     C:\Embedded\Rover\rover.h
                                           #define LED3			PORTB,1	;(IN7)                                                    C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;ERRORS AND OTHER EVENTS                                                         C:\Embedded\Rover\rover.h
                                           #define BUTTON_PRESSED	G_Events,0                                                C:\Embedded\Rover\rover.h
                                           #define REPLY_SENT		G_Events,1                                                   C:\Embedded\Rover\rover.h
                                           #define	NEW_COUNT		G_Events,2                                                    C:\Embedded\Rover\rover.h
                                           #define TIME_0_OUT		G_Events,3                                                   C:\Embedded\Rover\rover.h
                                           #define BYTE_FULL		G_Events,4                                                    C:\Embedded\Rover\rover.h
                                           #define RESET_CNTRS		G_Events,5                                                  C:\Embedded\Rover\rover.h
                                           #define CALIBRATION_OK	G_Events,6                                                C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;STATES                                                                          C:\Embedded\Rover\rover.h
                                           #define IDLE_MODE		G_State,0                                                     C:\Embedded\Rover\rover.h
                                           #define MASTER			G_State,1                                                       C:\Embedded\Rover\rover.h
                                           #define SLAVE			G_State,2                                                        C:\Embedded\Rover\rover.h
                                           #define RXCVER			G_State,3                                                       C:\Embedded\Rover\rover.h
                                           #define TXMTER			G_State,4                                                       C:\Embedded\Rover\rover.h
                                           #define	QUIET			G_State,5                                                        C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;PROTOCOL                                                                        C:\Embedded\Rover\rover.h
                                           ;PROTOCOL PARTS                                                                  C:\Embedded\Rover\rover.h
                                           #define BOF_FOUND		G_Pr_status,0                                                 C:\Embedded\Rover\rover.h
                                           #define PREAM_FINISHED	G_Pr_status,1                                             C:\Embedded\Rover\rover.h
                                           #define UI_FINISHED		G_Pr_status,2                                               C:\Embedded\Rover\rover.h
                                           #define	ADDR_CMPLT		G_Pr_status,3                                                C:\Embedded\Rover\rover.h
                                           #define NBR_BYTES_RCVD	G_Pr_status,4                                             C:\Embedded\Rover\rover.h
                                           #define DATA_RECEIVED	G_Pr_status,5                                              C:\Embedded\Rover\rover.h
                                           #define SUMCHECK_DONE	G_Pr_status,6                                              C:\Embedded\Rover\rover.h
                                           #define CMMND_COMPLETE	G_Pr_status,7                                             C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;OFFSETS:                                                                        C:\Embedded\Rover\rover.h
                                           #define PREAMBLE		0x00                                                           C:\Embedded\Rover\rover.h
                                           #define UI				0x03                                                               C:\Embedded\Rover\rover.h
                                           #define ADDRESS			0x05                                                           C:\Embedded\Rover\rover.h
                                           #define NO_BYTES		0x07                                                           C:\Embedded\Rover\rover.h
                                           #define DATA_OFFS		0x08                                                          C:\Embedded\Rover\rover.h
                                           #define SUM_CHECK		0x0F                                                          C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           #define	UI_CODE1		0xCD	;unique ramdom number                                     C:\Embedded\Rover\rover.h
                                           #define	UI_CODE2		0x4D	;                                                         C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;NUMBER OF BYTES                                                                 C:\Embedded\Rover\rover.h
                                           #define PREA_SIZE		3                                                             C:\Embedded\Rover\rover.h
                                           #define UI_SIZE			2                                                              C:\Embedded\Rover\rover.h
                                           #define ADD_SIZE		2                                                              C:\Embedded\Rover\rover.h
                                           #define NBR_SIZE		1                                                              C:\Embedded\Rover\rover.h
                                           #define DATA_SIZE		7                                                             C:\Embedded\Rover\rover.h
                                           #define CS_SIZE			1                                                              C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           TOT_FRAME_SIZ			equ	PREA_SIZE+UI_SIZE+ADD_SIZE+NBR_SIZE+DATA_SIZE+CS_SIZE        C:\Embedded\Rover\rover.h
                                           FIXED_PART				equ	PREA_SIZE+UI_SIZE+ADD_SIZE+NBR_SIZE                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           #define	RX_CURRENT		0x44 ;0100xxxx=950uA, XXXX=?????                             C:\Embedded\Rover\rover.h
                                           #define RXPLL			0x60                                                             C:\Embedded\Rover\rover.h
                                           #define	TX_CURRENT		0x81 ;1000xxxx=1450uA                                        C:\Embedded\Rover\rover.h
                                           #define TXPLL			0x48                                                             C:\Embedded\Rover\rover.h
                                           #define PA_VALUE		0xFF                                                           C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           ;TIMER 1 TIMERS                                                                  C:\Embedded\Rover\rover.h
                                           ;;;#define	RXMIT_TIM1L		0x90	;at 9600bps: h'3590 = 13,712uS=14ms                 C:\Embedded\Rover\rover.h
                                           ;;;#define	RXMIT_TIM1H		0x35	; (104uS/b*8bit/byt*16byt/frame+250uS+xx+ switch RX-TX) C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           #define	RXMIT_TIM1L		0xf0	;20ms includes delays for the master switch RX -> TX   C:\Embedded\Rover\rover.h
                                           #define	RXMIT_TIM1H		0x55	;                                                      C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           ;LOCK TIMEOUTS (this is a 16 bit integer e.g. 01FF)                              C:\Embedded\Rover\rover.h
                                           #define	LOCK1			0xFF                                                             C:\Embedded\Rover\rover.h
                                           #define	LOCK2			0x01                                                             C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                           ;TOGGLES AND CONTROLS FOR LEDS                                                   C:\Embedded\Rover\rover.h
                                           ;#define TOGGLE_G		L_GREEN_CTL,7                                                 C:\Embedded\Rover\rover.h
                                           ;#define	GREEN_FLAG		L_GREEN_CTL,6                                               C:\Embedded\Rover\rover.h
                                           ;#define	SPEED_G			L_GREEN_CTL,5                                                 C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;#define TOGGLE_R		L_RED_CTL,7                                                   C:\Embedded\Rover\rover.h
                                           ;#define	RED_FLAG		L_RED_CTL,6                                                   C:\Embedded\Rover\rover.h
                                           ;#define	SPEED_R			L_RED_CTL,5                                                   C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;#define	SLOW_ON			b'11000110'		;1xx..=start on, x1x..=on, xx000110=6 beats      C:\Embedded\Rover\rover.h
                                           ;#define	SLOW_OFF		b'01000110'		;0xx..=start off, x1x..=on, xx000110=6 beats     C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;#define	FAST_ON			b'11000010'                                                   C:\Embedded\Rover\rover.h
                                           ;#define	FAST_OFF		b'01000010'                                                   C:\Embedded\Rover\rover.h
                                           ;                                                                                C:\Embedded\Rover\rover.h
                                           ;#define VERYSLOW		b'11010000'                                                   C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\rover.h
                                                                                                                            C:\Embedded\Rover\Timeserv.asm
                                           ;Local variables                                                                 C:\Embedded\Rover\Timeserv.asm
                                           	UDATA                                                                           C:\Embedded\Rover\Timeserv.asm
                                           L_Tim1		res		1                                                                   C:\Embedded\Rover\Timeserv.asm
                                           L_Tim2		res		1                                                                   C:\Embedded\Rover\Timeserv.asm
                                           L_Tim3		res		1                                                                   C:\Embedded\Rover\Timeserv.asm
                                                                                                                            C:\Embedded\Rover\Timeserv.asm
                                           	Extern	G_Events	;(see hw_interf.h for flags in G_Events)                        C:\Embedded\Rover\Timeserv.asm
                                                                                                                            C:\Embedded\Rover\Timeserv.asm
                                           		CODE	                                                                          C:\Embedded\Rover\Timeserv.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Timeserv.asm
                                           ;Procedure: 	These are actually 3 procedures that offer a combination of delays  C:\Embedded\Rover\Timeserv.asm
                                           ;Function:	Cause a delay by a specified number of miliseconds,100uS or uS        C:\Embedded\Rover\Timeserv.asm
                                           ;			In these procedures, the flag XMIT_RCVD will be set only by the ISR          C:\Embedded\Rover\Timeserv.asm
                                           ;			if a data is received.  Otherwise, if its used for just delaying,            C:\Embedded\Rover\Timeserv.asm
                                           ;			it is assumed that no delays are expected (corresponding interrupt enables   C:\Embedded\Rover\Timeserv.asm
                                           ;			are reset).                                                                  C:\Embedded\Rover\Timeserv.asm
                                           ;Inputs:	W number of 100 Ms,100Us or uS                                          C:\Embedded\Rover\Timeserv.asm
                                           ;Returns:	Nothing                                                                C:\Embedded\Rover\Timeserv.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\Rover\Timeserv.asm
                                           DelaymS                                                                          C:\Embedded\Rover\Timeserv.asm
                                           			global DelaymS                                                                C:\Embedded\Rover\Timeserv.asm
000304   00e5     MOVWF     0x65           			MOVWF	L_Tim3		;W has the number of miliseconds                                C:\Embedded\Rover\Timeserv.asm
000305   300a     MOVLW     0xa            _MILISEC	MOVLW	d'10'		;                                                          C:\Embedded\Rover\Timeserv.asm
000306   230a     CALL      0x30a          			CALL	Delay100uS	;                                                             C:\Embedded\Rover\Timeserv.asm
000307   0be5     DECFSZ    0x65,0x1       			DECFSZ	L_Tim3,F	;                                                             C:\Embedded\Rover\Timeserv.asm
000308   2b05     GOTO      0x305          			GOTO	_MILISEC	;                                                               C:\Embedded\Rover\Timeserv.asm
000309   0008     RETURN                   TIMEREXMs	RETURN				;                                                            C:\Embedded\Rover\Timeserv.asm
                                           ;........................................................                        C:\Embedded\Rover\Timeserv.asm
                                           Delay100uS                                                                       C:\Embedded\Rover\Timeserv.asm
                                           			global Delay100uS                                                             C:\Embedded\Rover\Timeserv.asm
00030a   00e4     MOVWF     0x64           			MOVWF	L_Tim2		;W has number of 100uS to wait                                  C:\Embedded\Rover\Timeserv.asm
00030b   3064     MOVLW     0x64           _MIC100S	MOVLW	d'100'		;				                                                     C:\Embedded\Rover\Timeserv.asm
00030c   2310     CALL      0x310          			CALL	DelayuS		;                                                               C:\Embedded\Rover\Timeserv.asm
00030d   0be4     DECFSZ    0x64,0x1       			DECFSZ	L_Tim2,F	;                                                             C:\Embedded\Rover\Timeserv.asm
00030e   2b0b     GOTO      0x30b          			GOTO	_MIC100S	;                                                               C:\Embedded\Rover\Timeserv.asm
00030f   0008     RETURN                   TIMEREX100	RETURN				;                                                           C:\Embedded\Rover\Timeserv.asm
                                           ;........................................................                        C:\Embedded\Rover\Timeserv.asm
                                           DelayuS                                                                          C:\Embedded\Rover\Timeserv.asm
                                           			global DelayuS                                                                C:\Embedded\Rover\Timeserv.asm
000310   110b     BCF       0xb,0x2        			BCF		INTCON,T0IF	;                                                            C:\Embedded\Rover\Timeserv.asm
000311   00e3     MOVWF     0x63           			MOVWF	L_Tim1		;W has the number of uS (1:1 prescaler)                         C:\Embedded\Rover\Timeserv.asm
000312   09e3     COMF      0x63,0x1       			COMF	L_Tim1,F	;TMR0=(256 - number of clocks)                                  C:\Embedded\Rover\Timeserv.asm
000313   0ae3     INCF      0x63,0x1       			INCF	L_Tim1,F	;2 increments for lost instruct clocks                          C:\Embedded\Rover\Timeserv.asm
000314   0a63     INCF      0x63,0x0       			INCF	L_Tim1,W	;		                                                             C:\Embedded\Rover\Timeserv.asm
000315   0081     MOVWF     0x1            			MOVWF	TMR0		;                                                                 C:\Embedded\Rover\Timeserv.asm
000316   1d0b     BTFSS     0xb,0x2        _LOOP_TIM0	BTFSS	INTCON,T0IF	;Timer0 overflow?                                   C:\Embedded\Rover\Timeserv.asm
000317   2b16     GOTO      0x316          			GOTO	_LOOP_TIM0	;                                                             C:\Embedded\Rover\Timeserv.asm
000318   0008     RETURN                   TIMERXuS	RETURN				;                                                             C:\Embedded\Rover\Timeserv.asm
                                           ;........................................................                        C:\Embedded\Rover\Timeserv.asm
                                           			END						; end timeserve code                                                 C:\Embedded\Rover\Timeserv.asm
