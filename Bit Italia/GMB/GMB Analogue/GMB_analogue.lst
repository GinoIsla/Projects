MP2COD 3.80.03, COFF to COD File Converter
Copyright (c) 2004 Microchip Technology Inc.
Listing File Generated: Tue Dec 07 15:34:32 2004


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           ;************************************************************                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;	TITLE:	ECHO BUS multinodal control ----- Analogue Version (2 ports IN, 2 OUT)  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;	Programmer: GINO ISLA for of BIT Srl.                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;	REVISION HISTORY:	07-April-2004                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;	LAST UPDATE:		GI:	13-05-2004:	Add dimmer function                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;						GI:	6-12-2004 change microprocessor type (request by Vladimir)            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;	FREQUENCY: 8MHz                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;************************************************************                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			list	p=16f876                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			list	p=16f877A                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;#include	<p16f876.inc>                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #include	<p16f877A.inc>                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                                   LIST                                                                     C:\Program Files\MPLAB IDE\MCHIP_Tools\p16f877A.inc
                                           ; P16F877A.INC  Standard Header File, Version 1.00    Microchip Technology, Inc. C:\Program Files\MPLAB IDE\MCHIP_Tools\p16f877A.inc
                                                   LIST                                                                     C:\Program Files\MPLAB IDE\MCHIP_Tools\p16f877A.inc
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #include 	<GMB_analogue.h>                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;Pin usage definitions for the GMB ECHO BUS and other ports                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	OFF						0                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	ON						1                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	FALSE					0                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TRUE					1                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;Heartbeat                                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_TIMER1_H				0x100-0x04	;1200 TICKS for 1ms                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_TIMER1_L				0x100-0xB0	;1200 TICKS                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;Delays                                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_TEN_MS				10		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_TWENTYFIVE_MS			25		;not used                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_FIFTY_MS				50		;not used                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_HUNDRED_MS			100		;basic THRESHOLD resduced timers                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_ONESECOND				10		;based on 100ms tmr                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_ONEMINUTE				60		;not used                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;Periodic jobs                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_RX_TIMER				 5		;RX queus emptied every 5ms                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_RXTIME				0xF0	;message RE-tranmission counter (15 in high nibble)     C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_TX_TIMER				15		;TX queus emptied every 15ms                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_SAMPLE_SCAN			10		;4 samples of analogue data each second (based on 1ms) C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;										;(has 2 multipliers!)                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;Dimmer timers                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_DIM_STP_TIM			20		;20ms granules                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_DIMMER_ACTION			1		;based on C_DIM_STP_TIM, one dimmer step = 20ms     C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define C_ON_OFF_WAIT			24		;based on C_DIM_STP_TIM, wait 240ms for ON/OFF msg   C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define C_SFTY_DIM_STOP			30		;(*1sec)Turn off dimming autonomously if no OFF    C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;Funzioni Ingresso                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_IN_NOT_USED			0                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_IN_STEP_WATCH			1		;Also referred to as FUNCTION A                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_IN_THRHLD_WATCH		2		;Also referred to as FUNCTION B                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;Funzione Uscita                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_OUT_NOT_USED			0                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_OUT_LISTEN_OWN		1                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_OUT_LISTEN_OTHR		2                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_OUT_DIMMER			3                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;clock 4MHz                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;#defin	C_BIT_0					91		;Duration (in clock ticks) of a '0' byte                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;#defin	C_BIT_1					63		;Duration (in clock ticks) of a '1' byte                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;#defin	C_BIT_SUP				120		;Max limit of of a bit during reception/transmission   C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;clock 8MHz                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_BIT_0					182		;Duration (in clock ticks) of a '0' byte                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_BIT_1					126		;Duration (in clock ticks) of a '1' byte                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_BIT_SUP				240		;Max limit of of a bit during reception/transmission   C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define BUS_IN					PORTB,0                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define BUS_OUT					PORTB,1                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	KEY_IN					PORTB,2                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	MULTIKEY				PORTA,5                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	ERROR_PORT				PORTC,0                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;EEPROM ADDRESSES                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_FUNZIONE_ING					EQU	0	;(X2)DEFAULT 0                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_FUNZIONE_USCITA				EQU	2	;(X2)DEFAULT=0                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_TEMPO_INVIO					EQU	4	;(X2)DEFAULT 0 = not active                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_STEP_FUNZ_A					EQU	6	;(X2)DEFAULT 0 = not active                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_TEMPO_ATTIVAZIONE			EQU	8	;(X2) - NOT USED                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_SOGLIE_FUNZ_B0_UP			EQU	10	;(X8) PORT 0 - UP                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_SOGLIE_FUNZ_B0_DWN			EQU	18	;(X8) PORT 0 - DOWN                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_SOGLIE_FUNZ_B1_UP			EQU	26	;(X8) PORT 1 - UP                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_SOGLIE_FUNZ_B1_DWN			EQU	34	;(X8) PORT 1 - DOWN                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_TIPO_SCHEDA					EQU	42	;*** DONT MOVE DEFAULT = 3 = ANALOGUE                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_SW_VERSION					EQU	43	;*** DONT MOVE DEFAULT = 1                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_SERIAL_ASCOLTO				EQU	44	;DEFAULT 0                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_PORT_ASCOLTO					EQU	46	;(X2)                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_SERIAL_NBR					EQU	48	;*** DONT MOVE DEFAULT = 254 (-2)                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_STEP_BACK					EQU	49	;(X1)                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_SAMPLE_TIMER					EQU	50	;(X2) multipliers (*10ms => *4 for an AVG)            C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_MESSAGE_0_UP					EQU	52	;(X40) 5 byte message (S/N, DISC, ARGOM)              C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_MESSAGE_0_DWN				EQU	92	;(X40) 5 byte message (S/N, DISC, ARGOM)              C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_MESSAGE_1_UP					EQU	132	;(X40) 5 byte message (S/N, DISC, ARGOM)             C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_MESSAGE_1_DWN				EQU	172	;(X40) 5 byte message (S/N, DISC, ARGOM)             C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_SAVED_SAMPLE					EQU	212	;(X2) reserved for saved samples across restarts     C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_SAVED_OUTPUT					EQU	214	;(X2)                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_SAVED_CURSOR					EQU	216	;(X2)                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_DIMM_TOGGLE					EQU	218	;(X2)                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           EE_DIM_DRCTN_STAT				EQU	220	;(X2)                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;Protocol elements                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_NBR_PROTOCOL_BYTES 		6	;TYPE, SUB-TYPE, SERIAL, DISCRIMINATOR, ARGUMENT, SUMCHECK C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;---------------------------------------------------------                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_SIZE_RX_Q_ENTRY			5	;only message data, no CS                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_NBR_ENTRIES_RX			6	;Total size of RX_QUE = 30                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;---------------------------------------------------------                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;	Structure of the RX_QUEU:                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;	byte0 ... byte4 identical to the protocol messages                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;	minus the check sum since we don`t store it                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;---------------------------------------------------------                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_SIZE_TX_Q_ENTRY			8	;includes the expiration, CS and key_to_port       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_NBR_ENTRIES_TX			6	;multicomms have to be process one by one           C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;---------------------------------------------------------                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;	Structure of the TX_QUEU:                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;	byte0 = expiraion counter (0=repeats expired)                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;	byte1...byte5 = protocol bytes                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;	byte6 = checksum                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;	byte7 = key/port (ingresso/uscita) assignment                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TX_EXPIRATION				0                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TX_MSGTYPE					1                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TX_MSGSUBTYPE				2                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TX_SERIAL					3                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TX_DISCRMINATOR				4                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TX_ARGUMENT					5                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TX_SUMCHECK					6                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TX_IN_OUT_KEY				7		;used for visualizzazione                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;---------------------------------------------------------                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;										;size of TX_QUE = 49                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_NO_RETRY					1	;No retries                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_MAX_RETRIES				5	;Retries commands 85,[16|128|34],....                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;digital messages                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TYPE_PROGRAMMAZIONE			170                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TYPE_RISPOSTA				51                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TYPE_INTERROG_PROGR			119                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TYPE_FUNZIONAMENTO			85                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;analogue messages                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TYPE_INVIO_STATO			180                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TYPE_INTERROG_STAT			181                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TYPE_RISPOSTA_STAT			182                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TYPE_IMPOSTAZIONE_USCITA	183                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	SUBT_INVIO_MODULO			 16                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	SUBT_INVIO_ZONA				 17		;nuovo commando verso ZONA                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	SUBT_RISPO_MODULO			  0                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	SUBT_RISP_S_R				  7                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	SUBT_INVIO_CPU				 34                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	SUBT_RISPO_CPU				  2                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	SUBT_ALLARME_C				128                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	SUBT_RISPO_C				 70                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	SUBT_RICH_CPU				 33                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	SUBT_RISTAT_CPU				  1                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;Tipo Programma                                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	INGRESSO_USCITA		 		 15                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	INGRESSO_VISUAL				240                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	ING_USC_RC					 51                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;Fuzione                                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	NON_USATA					 0                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	MONOSTABILE					 3                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	INVERTITORE					12                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	PASSOPASSO					48                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TAPPARELLA					51                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;#define SETRESET		   			192  - NOT USED                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	TEMPORIZZATA	   			204                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	VISUALIZZAZIONE				240                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           ;Tipo messagio                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_NORMALE					0                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_SET						1                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_RESET						2                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #define	C_ALLARME					3                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.h
                                           #include	<macros.inc>                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;General maro definitions                                                        C:\Embedded\GMB\GMB Analogue\macros.inc
                                                                                                                            C:\Embedded\GMB\GMB Analogue\macros.inc
                                           M_CMP_JE	macro	value1,value2,jumpto	;value1 = value2?                            C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		movf	value1,w                                                                  C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		xorwf	value2,w                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		btfsc	STATUS,Z                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		goto	jumpto                                                                    C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		endm                                                                           C:\Embedded\GMB\GMB Analogue\macros.inc
                                           M_CMPL_JE	macro	value1,literal,jumpto	;value1 = k?                               C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		movf	value1,w                                                                  C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		xorlw	literal                                                                  C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		btfsc	STATUS,Z                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		goto	jumpto                                                                    C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		endm                                                                           C:\Embedded\GMB\GMB Analogue\macros.inc
                                           M_CMPL_JNE	macro	value1,literal,jumpto	;value1 <> k?                             C:\Embedded\GMB\GMB Analogue\macros.inc
000372   0860     MOVF      0x60,0x0       		movf	value1,w                                                                  C:\Embedded\GMB\GMB Analogue\macros.inc
00037b   0860     MOVF      0x60,0x0                                                                                        
000373   3a01     XORLW     0x1            		xorlw	literal                                                                  C:\Embedded\GMB\GMB Analogue\macros.inc
00037c   3a02     XORLW     0x2                                                                                             
000374   1d03     BTFSS     0x3,0x2        		btfss	STATUS,Z                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
00037d   1d03     BTFSS     0x3,0x2                                                                                         
000375   2b7b     GOTO      0x37b          		goto	jumpto                                                                    C:\Embedded\GMB\GMB Analogue\macros.inc
00037e   2b84     GOTO      0x384                                                                                           
                                           		endm                                                                           C:\Embedded\GMB\GMB Analogue\macros.inc
                                           M_CMP_JG	macro	value1,value2,jumpto	;value1 > value2?                            C:\Embedded\GMB\GMB Analogue\macros.inc
000188   087b     MOVF      0x7b,0x0       		movf	value2,w                                                                  C:\Embedded\GMB\GMB Analogue\macros.inc
000189   027a     SUBWF     0x7a,0x0       		subwf	value1,w	;v1-v2 > 0                                                      C:\Embedded\GMB\GMB Analogue\macros.inc
00018a   1c03     BTFSS     0x3,0x0        		btfss	STATUS,C                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
00018b   298f     GOTO      0x18f          		goto	$+4                                                                       C:\Embedded\GMB\GMB Analogue\macros.inc
00018c   1903     BTFSC     0x3,0x2        		btfsc	STATUS,Z                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
00018d   298f     GOTO      0x18f          		goto	$+2                                                                       C:\Embedded\GMB\GMB Analogue\macros.inc
00018e   2991     GOTO      0x191          		goto	jumpto                                                                    C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		endm                                                                           C:\Embedded\GMB\GMB Analogue\macros.inc
                                                                                                                            C:\Embedded\GMB\GMB Analogue\macros.inc
                                           M_CMP_JGE	macro	value1,value2,jumpto	;value1 >= value2?                          C:\Embedded\GMB\GMB Analogue\macros.inc
0001b9   0800     MOVF      0x0,0x0        		movf	value2,w                                                                  C:\Embedded\GMB\GMB Analogue\macros.inc
0001db   0800     MOVF      0x0,0x0                                                                                         
00021e   0800     MOVF      0x0,0x0                                                                                         
000240   0800     MOVF      0x0,0x0                                                                                         
0001ba   0274     SUBWF     0x74,0x0       		subwf	value1,w	;v1-v2 >= 0                                                     C:\Embedded\GMB\GMB Analogue\macros.inc
0001dc   0274     SUBWF     0x74,0x0                                                                                        
00021f   0275     SUBWF     0x75,0x0                                                                                        
000241   0275     SUBWF     0x75,0x0                                                                                        
0001bb   1803     BTFSC     0x3,0x0        		btfsc	STATUS,C                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
0001dd   1803     BTFSC     0x3,0x0                                                                                         
000220   1803     BTFSC     0x3,0x0                                                                                         
000242   1803     BTFSC     0x3,0x0                                                                                         
0001bc   29cc     GOTO      0x1cc          		goto	jumpto                                                                    C:\Embedded\GMB\GMB Analogue\macros.inc
0001de   29e0     GOTO      0x1e0                                                                                           
000221   2a31     GOTO      0x231                                                                                           
000243   2a45     GOTO      0x245                                                                                           
                                           		endm                                                                           C:\Embedded\GMB\GMB Analogue\macros.inc
                                                                                                                            C:\Embedded\GMB\GMB Analogue\macros.inc
                                                                                                                            C:\Embedded\GMB\GMB Analogue\macros.inc
                                           M_CMP_JL	macro	value1,value2,jumpto	;value1 < value2?                            C:\Embedded\GMB\GMB Analogue\macros.inc
000197   087b     MOVF      0x7b,0x0       		movf	value2,w                                                                  C:\Embedded\GMB\GMB Analogue\macros.inc
0001c5   0800     MOVF      0x0,0x0                                                                                         
00022a   0800     MOVF      0x0,0x0                                                                                         
000198   027a     SUBWF     0x7a,0x0       		subwf	value1,w	;v1-v2 < 0                                                      C:\Embedded\GMB\GMB Analogue\macros.inc
0001c6   0274     SUBWF     0x74,0x0                                                                                        
00022b   0275     SUBWF     0x75,0x0                                                                                        
000199   1c03     BTFSS     0x3,0x0        		btfss	STATUS,C                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
0001c7   1c03     BTFSS     0x3,0x0                                                                                         
00022c   1c03     BTFSS     0x3,0x0                                                                                         
00019a   29a8     GOTO      0x1a8          		goto	jumpto                                                                    C:\Embedded\GMB\GMB Analogue\macros.inc
0001c8   29f8     GOTO      0x1f8                                                                                           
00022d   2a5d     GOTO      0x25d                                                                                           
                                           		endm                                                                           C:\Embedded\GMB\GMB Analogue\macros.inc
                                                                                                                            C:\Embedded\GMB\GMB Analogue\macros.inc
                                           M_CMP_JLE	macro	value1,value2,jumpto	;value1 <= value2?                          C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		movf	value1,w                                                                  C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		subwf	value2,w	;v2-v1 > 0                                                      C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		btfsc	STATUS,C                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		goto	$+2                                                                       C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		btfsc	STATUS,Z                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		goto	jumpto                                                                    C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		endm                                                                           C:\Embedded\GMB\GMB Analogue\macros.inc
                                                                                                                            C:\Embedded\GMB\GMB Analogue\macros.inc
                                                                                                                            C:\Embedded\GMB\GMB Analogue\macros.inc
                                           M_CMPL_JL	macro	value1,literal,jumpto	;value1 < literal?                         C:\Embedded\GMB\GMB Analogue\macros.inc
0000e6   0835     MOVF      0x35,0x0       		movf	value1,w                                                                  C:\Embedded\GMB\GMB Analogue\macros.inc
000361   0835     MOVF      0x35,0x0                                                                                        
0000e7   3c04     SUBLW     0x4            		sublw	literal ;k-v1 < 0                                                        C:\Embedded\GMB\GMB Analogue\macros.inc
000362   3c04     SUBLW     0x4                                                                                             
0000e8   1c03     BTFSS     0x3,0x0        		btfss	STATUS,C                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
000363   1c03     BTFSS     0x3,0x0                                                                                         
0000e9   28ed     GOTO      0xed           		goto	$+4                                                                       C:\Embedded\GMB\GMB Analogue\macros.inc
000364   2b68     GOTO      0x368                                                                                           
0000ea   1903     BTFSC     0x3,0x2        		btfsc	STATUS,Z                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
000365   1903     BTFSC     0x3,0x2                                                                                         
0000eb   28ed     GOTO      0xed           		goto	$+2                                                                       C:\Embedded\GMB\GMB Analogue\macros.inc
000366   2b68     GOTO      0x368                                                                                           
0000ec   2908     GOTO      0x108          		goto	jumpto                                                                    C:\Embedded\GMB\GMB Analogue\macros.inc
000367   2b5b     GOTO      0x35b                                                                                           
                                           		endm                                                                           C:\Embedded\GMB\GMB Analogue\macros.inc
                                                                                                                            C:\Embedded\GMB\GMB Analogue\macros.inc
                                           M_CMPL_JG	macro	value1,literal,jumpto	;k-val1 < 0                                C:\Embedded\GMB\GMB Analogue\macros.inc
00047d   084f     MOVF      0x4f,0x0       		movf	value1,w                                                                  C:\Embedded\GMB\GMB Analogue\macros.inc
00047e   3c01     SUBLW     0x1            		sublw	literal	                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
00047f   1c03     BTFSS     0x3,0x0        		btfss	STATUS,C                                                                 C:\Embedded\GMB\GMB Analogue\macros.inc
000480   2cea     GOTO      0x4ea          		goto	jumpto	                                                                   C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		endm                                                                           C:\Embedded\GMB\GMB Analogue\macros.inc
                                           		                                                                               C:\Embedded\GMB\GMB Analogue\macros.inc
                                                                                                                            C:\Embedded\GMB\GMB Analogue\macros.inc
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002007   3f76     ADDLW     0x76           	__CONFIG	_CP_OFF&_WDT_ON&_BODEN_ON&_PWRTE_ON&_HS_OSC&_PWRTE_ON&_LVP_OFF&_DEBUG_OFF&_CPD_OFF C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           	ERRORLEVEL -302                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           	                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           	UDATA                                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;BASIC TIMERS                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TIME_SCAN_TX		RES		1	;reduced timer to treat the msg TX QUE                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TIME_SCAN_RX		RES		1	;reduced timer to treat the msg RX QUE                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TIME_SAMPLES		RES		1	;reduced timer for periodic jobs                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SND_STATS			RES		1	;used to derive the ONE second timer                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           DIMMER_TIMER		RES		1	;used as basic dimmer timer                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SFTY_DIM_TIMR		RES		1	;stops the dimming if the OFF msg is lost                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SAMPLE_TIMER_1		RES		1	;sample delay = 50ms*SAMPLE_TIMER_1*SAMPLE_TIMER_2        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SAMPLE_TIMER_2		RES		1	;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           STEPBACK			RES		1	;Number of steps to back off during end of dimming             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           FUNZIONE_ING_0		RES		1	;Programmed function for this port                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           FUNZIONE_ING_1		RES		1	;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;******* keep this block of variables together **************                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           FUNZIONE_USC_0		RES		1	;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ON_OFF_TIMER_0		RES		1	;ON/OFF timers                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           DIM_ACT_TIM_0		RES		1	;dimmer action timer and direction (BOOL,INT(7) PACK)      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           OUT_VAL0			RES		1	;Value to write to output port 1                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           STEPBACK_TIM_0		RES		1	;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;******* keep this block of variables together **************                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;same as above port 1                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           FUNZIONE_USC_1		RES		1	;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ON_OFF_TIMER_1		RES		1	;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           DIM_ACT_TIM_1		RES		1	;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           OUT_VAL1			RES		1	;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           STEPBACK_TIM_1		RES		1	;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;******* keep this block of variables together **************                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SAMPLE_CNTR			RES		1	;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SAMPLES				RES		8	;readings obtained in last second (4 each IN-PORT)             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;******* keep this block of variables together **************                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           REFERENCE_SAMPLE	RES		1	;avg of previous readings (INGRESSO 0)                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           REFERENCE_SAMPLE_1	RES		1	;avg of previous readings (INGRESSO 1)                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           STEP_A				RES		1	;(INGRESSO 0 - STEP WATCH)                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           STEP_A1				RES		1	;(INGRESSO 1 - STEP WATCH)                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;;******* keep this block of variables together **************                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           LISTEN_TO_SRL		RES		1	;Serial number that drives outport                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           LISTEN_TO_SRL_1		RES		1	;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           LISTEN_TO_PORT		RES		1	;port number (+Serial)that drives outport                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           LISTEN_TO_PORT_1	RES		1	;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           BIT_0				RES		1	;length of a '0' bit                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           FLAGS0				RES 	1	;miscellaneous flags (see below)                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           FLAGS1				RES 	1	;miscellaneous flags (see below)                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SEND_FLAGS			RES		1	;flags sent in message                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           OWN_SERIAL			RES		1	;These are the mirror registers of their equivalent in EEPROM C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           OWN_PROGRAM			RES		1	;program type                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           THRSHD_EX_PERIOD	RES		1	;timer to check thresholds                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           MSG_HEAD_EE			RES		1	;beginning of message to be read from EEPROM                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           PORT_IN				RES		1	;in-port general counter                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           PORT_OUT			RES		1	;out-port general counter                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           NBR_ENTRIES			RES		1	;nbr of entries in the qeueus                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           WAIT_BUS_CLEAR		RES		1	;wait period to get hold of the bus                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Variables starting with I_ are used ONLY during interrupts handling             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           I_STATUS_TEMP		RES		1	;save environment                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           I_FSR_TEMP			RES		1	;  "	"                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           I_TEMP_BIT			RES 	1	;general purpose bit hold during interrupt handling          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           I_TEMP_BYT0			RES		1	;general purpose byte hold during interrupt handling        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           I_NBR_BITS			RES		1	;general purpose bit counter during interrupt handling       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           I_NBR_BYTES			RES		1	;general purpose byte counter during interrupt handling     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           I_SUPERVISION		RES		1	;supervision of wait for IN_BUS status change              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           I_FREE_RX_Q			RES		1	;start of the free RX_QUEU entry                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           E2ADDRESS			RES		1	;address for EEPROM                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           E2VALUE				RES		1	;data to write in EEPROM                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TX_MSG_START		RES		1	;Begining of a msg in the RX_QUEU                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           RX_MSG_START		RES		1	;Begining of a msg in the RX_QUEU                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           MSG_EXPIRE			RES		1	;number of mesage sends until expiration                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           MSG_TYPE			RES		1	;COMMAND TYPE                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           MSG_SUBT			RES		1	;COMMAND SUBTYPE                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           MSG_SERL			RES		1	;SERIAL NUMBER                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           MSG_DISC			RES		1	;DISCRIMINATOR                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           MSG_ARGT			RES		1	;ARGUMENT                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TEMP_SC				RES		1	;byte to hold SC                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           KEY_TO_PORT			RES		1	;For VISUALIZZAZIONE, to drive the opposing port to this key C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SAVE_SAMPLE_TIM_1	RES		1	;Copy of EE_SAMPLE_TIMER_1                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SAVE_SAMPLE_TIM_2	RES		1	;Copy of EE_SAMPLE_TIMER_2                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           Bank1Data 			UDATA	                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TX_QUEU				RES		(C_SIZE_TX_Q_ENTRY*C_NBR_ENTRIES_TX)	;reserved space for sending data C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           RX_QUEU				RES		(C_SIZE_RX_Q_ENTRY*C_NBR_ENTRIES_RX)	;reserve space incoming msgs (no SUM_CHK) C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           Bank2Data			UDATA                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TIMER_0_UP			RES		1	;active timer                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TIMER_0_DWN			RES		1	;active timer                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TIMER_1_UP			RES		1	;active timer                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TIMER_1_DWN			RES		1	;active timer                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           CURSOR_0			RES		1	;active threshold port 0 - UP                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           CURSOR_1 			RES		1	;active threshold port 1 - UP                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           THRLD_B0_UP			RES		8	;threshold for FUNCTION B port 0 - UP                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           THRLD_B0_DWN		RES		8	;threshold for FUNCTION B port 0 - DOWN                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           THRLD_B1_UP			RES		8	;threshold for FUNCTION B port 1 - UP                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           THRLD_B1_DWN		RES		8	;threshold for FUNCTION B port 1 - DOWN                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           GARBAGE_CAN			RES		10	;in case no RX messages available, put unwanted message here C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           	UDATA_SHR					;Common bank                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           I_W_TEMP			RES		1	;save environment                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TEMP_BIT			RES 	1	;general purpose bit hold                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           NBR_BITS			RES		1	;general purpose bit counter                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           NBR_BYTES			RES		1	;general purpose byte counter                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           PERIOD_AVG_0		RES		1	;running average of last 4 period samples                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           PERIOD_AVG_1		RES		1	;running average of last 4 period samples                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           DATA_TIMER			RES		1	;programed time to send data (INGRESSO 0)                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           DATA_TIMER_1		RES		1	;programed time to send data (INGRESSO 1)                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TEMPO_INVIO_0		RES		1	;Copy of EE_TEMPO_INVIO                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TEMPO_INVIO_1		RES		1	;Copy of EE_TEMPO_INVIO                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TEMP_BYT0			RES		1	;general purpose byte hold                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TEMP_BYT1			RES		1	;general purpose byte hold                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           TEMP_BYT2			RES		1	;general purpose byte hold                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Miscellaneous flags                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_FA0_TMP_SND	FLAGS0,0	;                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_FA1_TMP_SND	FLAGS0,1	;                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_FA0_STEP_NZ	FLAGS0,2	;                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_FA1_STEP_NZ	FLAGS0,3	;                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_DIM_DIRCT_0	FLAGS0,4	;direction of dimmer (1=up, 0=down)              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_DIM_DIRCT_1	FLAGS0,5	;                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_DIMMR_ON_0	FLAGS0,6	;dimmer ON/OFF state (1=ON,0=OFF)                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_DIMMR_ON_1	FLAGS0,7	;                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_ABORT_RX_FLAG	FLAGS1,0	;                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_BUS_IS_MINE	FLAGS1,1	;                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_SERIAL_MATCH	FLAGS1,2	;                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_MSG_FOUND		FLAGS1,3	;                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_NO_DISCARD	FLAGS1,4	;                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_UPD_EEPROM	FLAGS1,5	;                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_ERROR_FLAG	FLAGS1,6	;                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_TEMPORANEO	SEND_FLAGS,0 ; 0=message is being sent at end of period,1=THRESHOLD ALARM C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           #define		F_SOGLIA		SEND_FLAGS,1 ; 1=SOGLIA IN SALITA, 0=SOGLIA IN DISCESA        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           	CODE                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Reset Vector							;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			org 	0x00				;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000000   018a     CLRF      0xa            			CLRF	PCLATH				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000001   0183     CLRF      0x3            			CLRF	STATUS				;BANK 0 REGISTERS                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000002   2805     GOTO      0x5            			GOTO	Start				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ; Interrupt Vector						;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			org 	0x04				;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000004   2d7f     GOTO      0x57f          			GOTO	Service_Interrupt	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;++++++++++++++++++++++++ START OF THE PROGRAM +++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			org		0x05				;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           Start									;                                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			BSF		STATUS,RP0			;leave out comments when no debug                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			BTFSC	PCON,1				;POWER ON?                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			GOTO	_NO_RESET			;	                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000005   0064     CLRWDT                   			CLRWDT						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000006   138b     BCF       0xb,0x7        			BCF		INTCON,GIE			;Disable interrupts                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000007   0185     CLRF      0x5            			CLRF	PORTA				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000008   0186     CLRF      0x6            _HERE		CLRF	PORTB				;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000009   0187     CLRF      0x7            			CLRF	PORTC				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;A/D CONVERTER							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;=============							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00000a   3081     MOVLW     0x81           			MOVLW	b'10000001'			;(see ADCON1 for bits adcon0<7,6> ; bits 5-3=channel selection; C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00000b   009f     MOVWF     0x1f           			MOVWF	ADCON0				;  A/D powered on                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00000c   1683     BSF       0x3,0x5        			BSF		STATUS,RP0			;bank 1                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00000d   3044     MOVLW     0x44           			MOVLW	b'01000100'			;left justtified,fosc/64,3andl/0 vref...                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00000e   009f     MOVWF     0x1f           			MOVWF	ADCON1				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;PORTS&INTERRUPTS						;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;================						;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00000f   30ff     MOVLW     0xff           			MOVLW	0XFF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000010   0085     MOVWF     0x5            			MOVWF	TRISA				;RA0=AN0,RA1=AN1                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000011   0086     MOVWF     0x6            			MOVWF	TRISB				;RB0=ECHOBUS OUT, RB1=ECHOBUS IN                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000012   30f9     MOVLW     0xf9           			MOVLW	b'11111001'			;RC2=OUT1,RC1=OUT2,RC0=ERROR LED (when error)             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000013   0087     MOVWF     0x7            			MOVWF	TRISC				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000014   018c     CLRF      0xc            			CLRF	PIE1				;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000015   308b     MOVLW     0x8b           			MOVLW	b'10001011'			;OPTION<6>=0=int on falling edge RB0, ...SELECT TMR0 AND WDT OPTION C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000016   0081     MOVWF     0x1            			MOVWF	OPTION_REG			;PortB pullups disabled                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;PWD D/A								;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;=======								;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000017   1283     BCF       0x3,0x5        			BCF		STATUS,RP0			;back to bank 0                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000018   300c     MOVLW     0xc            			MOVLW	b'00001100' 		;bits 3-0=PWM mode (pg. 62)                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000019   0097     MOVWF     0x17           			MOVWF	CCP1CON				;analogue chan 0                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00001a   009d     MOVWF     0x1d           			MOVWF	CCP2CON				;analogue chan 1                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00001b   0192     CLRF      0x12           			CLRF	T2CON				;PRESCALE 1:1                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00001c   1683     BSF       0x3,0x5        			BSF		STATUS,RP0			;bank 1 GP regs                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00001d   3041     MOVLW     0x41           			MOVLW	d'65'				;8 bit resolution clock at 8MZ                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00001e   0092     MOVWF     0x12           			MOVWF	PR2					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00001f   3020     MOVLW     0x20           			MOVLW	TX_QUEU				;Clear the tx queu with zeroes                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000020   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000021   3030     MOVLW     0x30           			MOVLW	C_SIZE_TX_Q_ENTRY*C_NBR_ENTRIES_TX	;                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000022   00f3     MOVWF     0x73           			MOVWF	NBR_BYTES			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000023   0103     CLRW                     			CLRW						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000024   0080     MOVWF     0x0            _CLR_TX		MOVWF	INDF				;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000025   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000026   0bf3     DECFSZ    0x73,0x1       			DECFSZ	NBR_BYTES,F			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000027   2824     GOTO      0x24           			GOTO	_CLR_TX				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000028   3050     MOVLW     0x50           			MOVLW	RX_QUEU				;Clear the RX_QUEU queu with -1s                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000029   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00002a   301e     MOVLW     0x1e           			MOVLW	C_SIZE_RX_Q_ENTRY*C_NBR_ENTRIES_RX	;                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00002b   00f3     MOVWF     0x73           			MOVWF	NBR_BYTES			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00002c   30ff     MOVLW     0xff           			MOVLW	0xFF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00002d   0080     MOVWF     0x0            _CLR_RX		MOVWF	INDF				;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00002e   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00002f   0bf3     DECFSZ    0x73,0x1       			DECFSZ	NBR_BYTES,F			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000030   282d     GOTO      0x2d           			GOTO	_CLR_RX				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000031   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000032   1303     BCF       0x3,0x6                                                                                         
000033   01b5     CLRF      0x35           			CLRF	SAMPLE_CNTR			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000034   01c7     CLRF      0x47           			CLRF	FLAGS0				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000035   01c8     CLRF      0x48           			CLRF	FLAGS1				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000036   01ac     CLRF      0x2c           			CLRF	ON_OFF_TIMER_0		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000037   01ad     CLRF      0x2d           			CLRF	DIM_ACT_TIM_0		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000038   01af     CLRF      0x2f           			CLRF	STEPBACK_TIM_0		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000039   01b1     CLRF      0x31           			CLRF	ON_OFF_TIMER_1		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00003a   01b2     CLRF      0x32           			CLRF	DIM_ACT_TIM_1		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00003b   01b4     CLRF      0x34           			CLRF	STEPBACK_TIM_1		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;							                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00003c   30ff     MOVLW     0xff           			MOVLW	255					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00003d   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;delay allow EEPROM to come up                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00003e   00fb     MOVWF     0x7b           			MOVWF	TEMP_BYT1			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00003f   0000     NOP                      _DELAY_INI	NOP							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000040   0000     NOP                      			NOP							;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000041   0064     CLRWDT                   			CLRWDT						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000042   0bfa     DECFSZ    0x7a,0x1       			DECFSZ	TEMP_BYT0,F			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000043   283f     GOTO      0x3f           			GOTO	_DELAY_INI			;			                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000044   30ff     MOVLW     0xff           			MOVLW	255					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000045   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000046   0bfb     DECFSZ    0x7b,0x1       			DECFSZ	TEMP_BYT1,F			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000047   283f     GOTO      0x3f           			GOTO	_DELAY_INI			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000048   3001     MOVLW     0x1            			MOVLW	1					;to force re-read of EEPROM                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000049   00e2     MOVWF     0x62           			MOVWF	MSG_DISC			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00004a   2685     CALL      0x685          			CALL	READ_STABLE_DATA	;Read operating parameters from EEPROM                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;Reset ALL reduced timers and counters                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00004b   30d4     MOVLW     0xd4           			MOVLW	EE_SAVED_SAMPLE		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00004c   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00004d   00be     MOVWF     0x3e           			MOVWF	REFERENCE_SAMPLE	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00004e   30d5     MOVLW     0xd5           			MOVLW	EE_SAVED_SAMPLE+1	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00004f   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000050   00bf     MOVWF     0x3f           			MOVWF	REFERENCE_SAMPLE_1	;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000051   30d8     MOVLW     0xd8           			MOVLW	EE_SAVED_CURSOR		;retrieve FUCTION B thresholds                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000052   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000053   1283     BCF       0x3,0x5        			BANKSEL	CURSOR_0			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000054   1703     BSF       0x3,0x6                                                                                         
000055   0094     MOVWF     0x14           			MOVWF	CURSOR_0			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000056   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000057   1303     BCF       0x3,0x6                                                                                         
000058   30d9     MOVLW     0xd9           			MOVLW	EE_SAVED_CURSOR+1	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000059   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00005a   1283     BCF       0x3,0x5        			BANKSEL	CURSOR_1			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00005b   1703     BSF       0x3,0x6                                                                                         
00005c   0095     MOVWF     0x15           			MOVWF	CURSOR_1			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00005d   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00005e   1303     BCF       0x3,0x6                                                                                         
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00005f   30d6     MOVLW     0xd6           			MOVLW	EE_SAVED_OUTPUT		;Restore output values before restart                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000060   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000061   00ae     MOVWF     0x2e           			MOVWF	OUT_VAL0			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000062   01cf     CLRF      0x4f           			CLRF	PORT_OUT			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000063   23b2     CALL      0x3b2          			CALL	WRITE_OUT_PORT		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000064   08ae     MOVF      0x2e,0x1       			MOVF	OUT_VAL0,F			;At initialization, if OUTVAL is <>0 then force EE_TOGGLE to C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000065   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			; be zero                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000066   286b     GOTO      0x6b           			GOTO	_INIT_PORT1			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000067   30da     MOVLW     0xda           			MOVLW	EE_DIMM_TOGGLE		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000068   00da     MOVWF     0x5a           			MOVWF	E2ADDRESS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000069   01db     CLRF      0x5b           			CLRF	E2VALUE				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00006a   2772     CALL      0x772          			CALL	COPY_TO_EEPROM		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00006b   30d7     MOVLW     0xd7           _INIT_PORT1	MOVLW	EE_SAVED_OUTPUT+1	;                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00006c   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00006d   00b3     MOVWF     0x33           			MOVWF	OUT_VAL1			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00006e   3001     MOVLW     0x1            			MOVLW	1					;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00006f   00cf     MOVWF     0x4f           			MOVWF	PORT_OUT			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000070   23b2     CALL      0x3b2          			CALL	WRITE_OUT_PORT		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000071   08b3     MOVF      0x33,0x1       			MOVF	OUT_VAL1,F			;At initialization, if OUTVAL is <>0 then force EE_TOGGLE to C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000072   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			; be zero                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000073   2878     GOTO      0x78           			GOTO	_NO_RESET			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000074   30db     MOVLW     0xdb           			MOVLW	EE_DIMM_TOGGLE+1	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000075   00da     MOVWF     0x5a           			MOVWF	E2ADDRESS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000076   01db     CLRF      0x5b           			CLRF	E2VALUE				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000077   2772     CALL      0x772          			CALL	COPY_TO_EEPROM		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _NO_RESET								;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000078   1683     BSF       0x3,0x5        			BANKSEL	PCON				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000079   1303     BCF       0x3,0x6                                                                                         
00007a   148e     BSF       0xe,0x1        			BSF		PCON,1				;set POR bit (1=no POR)                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00007b   1283     BCF       0x3,0x5        			BANKSEL	TIMER_0_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00007c   1703     BSF       0x3,0x6                                                                                         
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00007d   1283     BCF       0x3,0x5        			BANKSEL	TIMER_0_UP			;Reset all basic timers                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00007e   1703     BSF       0x3,0x6                                                                                         
00007f   0190     CLRF      0x10           			CLRF	TIMER_0_UP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000080   0191     CLRF      0x11           			CLRF	TIMER_0_DWN			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000081   0192     CLRF      0x12           			CLRF	TIMER_1_UP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000082   0193     CLRF      0x13           			CLRF	TIMER_1_DWN			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000083   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000084   1303     BCF       0x3,0x6                                                                                         
000085   3005     MOVLW     0x5            			MOVLW	C_RX_TIMER			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000086   00a1     MOVWF     0x21           			MOVWF	TIME_SCAN_RX		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000087   3014     MOVLW     0x14           			MOVLW	C_DIM_STP_TIM		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000088   00a4     MOVWF     0x24           			MOVWF	DIMMER_TIMER		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000089   300f     MOVLW     0xf            			MOVLW	C_TX_TIMER			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00008a   00a0     MOVWF     0x20           			MOVWF	TIME_SCAN_TX		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00008b   300a     MOVLW     0xa            			MOVLW	C_SAMPLE_SCAN		;250MS                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00008c   00a2     MOVWF     0x22           			MOVWF	TIME_SAMPLES		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00008d   3064     MOVLW     0x64           			MOVLW	C_HUNDRED_MS		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00008e   00a3     MOVWF     0x23           			MOVWF	SND_STATS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00008f   300a     MOVLW     0xa            			MOVLW	C_ONESECOND			;seconds timer is based on 10*100ms timer                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000090   00cc     MOVWF     0x4c           			MOVWF	THRSHD_EX_PERIOD	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000091   30fc     MOVLW     0xfc           			MOVLW	C_TIMER1_H			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000092   008f     MOVWF     0xf            			MOVWF	TMR1H				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000093   3050     MOVLW     0x50           			MOVLW	C_TIMER1_L			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000094   008e     MOVWF     0xe            			MOVWF	TMR1L				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000095   100c     BCF       0xc,0x0        			BCF		PIR1,TMR1IF			;clear TMR1 interrupt flag                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000096   3011     MOVLW     0x11           			MOVLW	b'00010001'			;prescale 1:2(CLOCK 8Mz), internal clk,TMR1ON             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000097   0090     MOVWF     0x10           			MOVWF	T1CON				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000098   3090     MOVLW     0x90           			MOVLW	b'10010000'			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000099   008b     MOVWF     0xb            			MOVWF	INTCON				;INTCON<4>=enbable RB0 ints                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00009a   0064     CLRWDT                   _MAIN_LOOP	CLRWDT						;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00009b   1c0c     BTFSS     0xc,0x0        			BTFSS	PIR1,TMR1IF			;TIMR1 expired?                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00009c   28d1     GOTO      0xd1           			GOTO	_IDLE				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00009d   100c     BCF       0xc,0x0        			BCF		PIR1,TMR1IF			;clear TMR1 interrupt flag                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00009e   30fc     MOVLW     0xfc           			MOVLW	C_TIMER1_H			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00009f   008f     MOVWF     0xf            			MOVWF	TMR1H				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000a0   3050     MOVLW     0x50           			MOVLW	C_TIMER1_L			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000a1   0ba1     DECFSZ    0x21,0x1       			DECFSZ	TIME_SCAN_RX,F		;SCAN RX QUEU every 5ms                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000a2   28a6     GOTO      0xa6           			GOTO	_DIMM_JOB			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000a3   2bd9     GOTO      0x3d9          			GOTO	SCAN_RX_QUEU		;GOTO ISO CALLs for STACK REDUCTION                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000a4   3005     MOVLW     0x5            _RET1		MOVLW	C_RX_TIMER			;reset RX timer                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000a5   00a1     MOVWF     0x21           			MOVWF	TIME_SCAN_RX		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000a6   0ba4     DECFSZ    0x24,0x1       _DIMM_JOB	DECFSZ	DIMMER_TIMER,F		;24ms based on 1ms                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000a7   28ab     GOTO      0xab           			GOTO	_SCAN_TX			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000a8   2909     GOTO      0x109          			GOTO	SCAN_DIMMERS		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000a9   3014     MOVLW     0x14           _RET_7		MOVLW	C_DIM_STP_TIM		;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000aa   00a4     MOVWF     0x24           			MOVWF	DIMMER_TIMER		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000ab   0ba0     DECFSZ    0x20,0x1       _SCAN_TX	DECFSZ	TIME_SCAN_TX,F		;SCAN TX QUEU every 15ms                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000ac   28b0     GOTO      0xb0           			GOTO	_SCAN_JOBS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000ad   2d22     GOTO      0x522          			GOTO	SCAN_TX_QUEU		;GOTO ISO CALLs for STACK REDUCTION                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000ae   300f     MOVLW     0xf            _RET2		MOVLW	C_TX_TIMER			;reset TX timer                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000af   00a0     MOVWF     0x20           			MOVWF	TIME_SCAN_TX		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000b0   0ba2     DECFSZ    0x22,0x1       _SCAN_JOBS	DECFSZ	TIME_SAMPLES,F		;every 250ms                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000b1   28b5     GOTO      0xb5           			GOTO	_SEND_STAT			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000b2   28d9     GOTO      0xd9           			GOTO	FUNZ_INGRESSO		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000b3   300a     MOVLW     0xa            _RET3		MOVLW	C_SAMPLE_SCAN		;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000b4   00a2     MOVWF     0x22           			MOVWF	TIME_SAMPLES		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000b5   0ba3     DECFSZ    0x23,0x1       _SEND_STAT	DECFSZ	SND_STATS,F			;100ms                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000b6   28d1     GOTO      0xd1           			GOTO	_IDLE				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000b7   3064     MOVLW     0x64           			MOVLW	C_HUNDRED_MS		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000b8   00a3     MOVWF     0x23           			MOVWF	SND_STATS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000b9   0bcc     DECFSZ    0x4c,0x1       			DECFSZ	THRSHD_EX_PERIOD,F	;10*100ms=1sec                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000ba   28d1     GOTO      0xd1           			GOTO	_IDLE				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000bb   300a     MOVLW     0xa            			MOVLW	C_ONESECOND			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000bc   00cc     MOVWF     0x4c           			MOVWF	THRSHD_EX_PERIOD	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000bd   03a5     DECF      0x25,0x1       			DECF	SFTY_DIM_TIMR,F		;1 sec decrements meaningful only for dimming (see SCAN_DIMMERS) C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000be   1f48     BTFSS     0x48,0x6       			BTFSS	F_ERROR_FLAG		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000bf   28c7     GOTO      0xc7           			GOTO	_NO_IDL_ERR			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000c0   1683     BSF       0x3,0x5        			BANKSEL	TRISC				;toggle ERROR LED every 1 sec                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000c1   1303     BCF       0x3,0x6                                                                                         
0000c2   1007     BCF       0x7,0x0        			BCF		TRISC,0				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000c3   1283     BCF       0x3,0x5        			BANKSEL	PORTC				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000c4   1303     BCF       0x3,0x6                                                                                         
0000c5   1407     BSF       0x7,0x0        			BSF		ERROR_PORT			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000c6   28cd     GOTO      0xcd           			GOTO	_THR_CHK			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _NO_IDL_ERR								;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000c7   1683     BSF       0x3,0x5        			BANKSEL	TRISC				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000c8   1303     BCF       0x3,0x6                                                                                         
0000c9   1407     BSF       0x7,0x0        			BSF		TRISC,0				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000ca   1283     BCF       0x3,0x5        			BANKSEL	PORTC				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000cb   1303     BCF       0x3,0x6                                                                                         
0000cc   1007     BCF       0x7,0x0        			BCF		ERROR_PORT			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000cd   1348     BCF       0x48,0x6       _THR_CHK	BCF		F_ERROR_FLAG		;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000ce   2a92     GOTO      0x292          			GOTO	THRESHOLD_A_PERIOD	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000cf   2abc     GOTO      0x2bc          _RET_5		GOTO	THRESHOLD_B_PERIOD	;                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000d0   0000     NOP                      _RET_6		NOP							;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000d1   1c10     BTFSS     0x10,0x0       _IDLE		BTFSS	T1CON,TMR1ON		;if either flag is not set it means we got kick       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000d2   28d6     GOTO      0xd6           			GOTO	_IDLE_ERR			;  out of the interrupt                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000d3   1f8b     BTFSS     0xb,0x7        			BTFSS	INTCON,GIE			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000d4   28d6     GOTO      0xd6           			GOTO	_IDLE_ERR			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000d5   28d8     GOTO      0xd8           			GOTO	_IDLE_CONT			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000d6   2682     CALL      0x682          _IDLE_ERR	CALL	ERROR_HANDLER		;                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000d7   1748     BSF       0x48,0x6       			BSF		F_ERROR_FLAG		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _IDLE_CONT	;BSF		T1CON,TMR1ON	;commented for testing.... to be sure ....         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000d8   289a     GOTO      0x9a           			GOTO	_MAIN_LOOP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Aquire data from the A/D converter for both ports and do the4 necessary actions C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;when enough data has been obtained.                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	value aquired from A/D in SAMPLE                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           FUNZ_INGRESSO							;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000d9   0ba6     DECFSZ    0x26,0x1       			DECFSZ	SAMPLE_TIMER_1,F	;number of 10ms seconds per sample                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000da   2908     GOTO      0x108          			GOTO	_END_SMPL			;not yet                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000db   0866     MOVF      0x66,0x0       			MOVF	SAVE_SAMPLE_TIM_1,W	;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000dc   00a6     MOVWF     0x26           			MOVWF	SAMPLE_TIMER_1		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000dd   0ba7     DECFSZ    0x27,0x1       			DECFSZ	SAMPLE_TIMER_2,F	;number of 10th seconds per sample                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000de   2908     GOTO      0x108          			GOTO	_END_SMPL			;not yet                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000df   0867     MOVF      0x67,0x0       			MOVF	SAVE_SAMPLE_TIM_2,W	;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000e0   00a7     MOVWF     0x27           			MOVWF	SAMPLE_TIMER_2		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000e1   01ce     CLRF      0x4e           			CLRF	PORT_IN				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000e2   2335     CALL      0x335          			CALL	GET_SAMPLES			;get sample port 0                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000e3   0ace     INCF      0x4e,0x1       			INCF	PORT_IN,F			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000e4   2335     CALL      0x335          			CALL	GET_SAMPLES			;get sample port 1                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000e5   0ab5     INCF      0x35,0x1       			INCF	SAMPLE_CNTR,F		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           	   M_CMPL_JL	SAMPLE_CNTR,4,_END_SMPL                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;4 samples have been collected                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000ed   01ce     CLRF      0x4e           			CLRF	PORT_IN				;Calculate average port 0                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000ee   2350     CALL      0x350          			CALL	CALC_AVG			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000ef   0ace     INCF      0x4e,0x1       			INCF	PORT_IN,F			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000f0   2350     CALL      0x350          			CALL	CALC_AVG			;Calculate average port 1                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000f1   01b5     CLRF      0x35           			CLRF	SAMPLE_CNTR			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000f2   01ce     CLRF      0x4e           			CLRF	PORT_IN				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000f3   0829     MOVF      0x29,0x0       			MOVF	FUNZIONE_ING_0,W	;Decide next action depending on function and port      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000f4   3a01     XORLW     0x1            			XORLW	C_IN_STEP_WATCH		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000f5   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000f6   28f9     GOTO      0xf9           			GOTO	_FUNC_B0_THR		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000f7   2170     CALL      0x170          			CALL	FUNC_A_THR_XING		;A0 threshold                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000f8   28fd     GOTO      0xfd           			GOTO	_PORT_1_THRS		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _FUNC_B0_THR							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000f9   0829     MOVF      0x29,0x0       			MOVF	FUNZIONE_ING_0,W	;Decide next action depending on function and port      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000fa   3a02     XORLW     0x2            			XORLW	C_IN_THRHLD_WATCH	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000fb   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000fc   21a9     CALL      0x1a9          			CALL	FUNC_B_THR_XING		;B0 threshold                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _PORT_1_THRS							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000fd   0ace     INCF      0x4e,0x1       			INCF	PORT_IN,F			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000fe   082a     MOVF      0x2a,0x0       			MOVF	FUNZIONE_ING_1,W	;Decide next action depending on function and port      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0000ff   3a01     XORLW     0x1            			XORLW	C_IN_STEP_WATCH		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000100   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000101   2904     GOTO      0x104          			GOTO	_FUNC_B1_THR		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000102   2170     CALL      0x170          			CALL	FUNC_A_THR_XING		;A1 threshold                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000103   2908     GOTO      0x108          			GOTO	_END_SMPL			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _FUNC_B1_THR							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000104   082a     MOVF      0x2a,0x0       			MOVF	FUNZIONE_ING_1,W	;Decide next action depending on function and port      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000105   3a02     XORLW     0x2            			XORLW	C_IN_THRHLD_WATCH	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000106   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000107   21a9     CALL      0x1a9          			CALL	FUNC_B_THR_XING		;B1 threshold                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000108   28b3     GOTO      0xb3           _END_SMPL	GOTO	_RET3				;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Both dimmer timers are treated here: the ON/OFF and the step-up(down) of the out  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;ports.  Dimmer directions are saved when necessary in EEPROM.                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;NOTE:	The STEPBACK_TIM allows to compesate for delays in the propagation of the C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;		OFF message and in the electrical circuits.                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		ON_OFF_TIMER,DIM_ACT_TIM,STEPBACK_TIM                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	ON_OFF_TIMER,DIM_ACT_TIM (new values),F_DIM_DIRCT (new direction)       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SCAN_DIMMERS							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000109   3003     MOVLW     0x3            			MOVLW	C_OUT_DIMMER		;are we dimmers?                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00010a   062b     XORWF     0x2b,0x0       			XORWF	FUNZIONE_USC_0,W	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00010b   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00010c   293a     GOTO      0x13a          			GOTO	_PORT_1_DIM			;NOT A DIMMER                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00010d   08ac     MOVF      0x2c,0x1       			MOVF	ON_OFF_TIMER_0,F	;see if ON/OFF timer running                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00010e   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00010f   2917     GOTO      0x117          			GOTO	_DIMMING_0			;no, we might be dimming                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000110   0bac     DECFSZ    0x2c,0x1       			DECFSZ	ON_OFF_TIMER_0,F	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000111   293a     GOTO      0x13a          			GOTO	_PORT_1_DIM			;ON/OFF running but not expired                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000112   3001     MOVLW     0x1            			MOVLW	C_DIMMER_ACTION		;ON/OFF timer expired                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000113   00ad     MOVWF     0x2d           			MOVWF	DIM_ACT_TIM_0		;start dimmer action timer                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000114   301e     MOVLW     0x1e           			MOVLW	C_SFTY_DIM_STOP		;start safety timer                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000115   00a5     MOVWF     0x25           			MOVWF	SFTY_DIM_TIMR		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000116   293a     GOTO      0x13a          			GOTO	_PORT_1_DIM			;dimming starts next cycle                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000117   08ad     MOVF      0x2d,0x1       _DIMMING_0	MOVF	DIM_ACT_TIM_0,F		;                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000118   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000119   291f     GOTO      0x11f          			GOTO	_STP_BCK_0			;dimmer action is off, check to see if we need to step back C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00011a   0bad     DECFSZ    0x2d,0x1       			DECFSZ	DIM_ACT_TIM_0,F		;dimmer action running, dec until 0                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00011b   293a     GOTO      0x13a          			GOTO	_PORT_1_DIM			; - dimming but no action yet                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00011c   3001     MOVLW     0x1            			MOVLW	C_DIMMER_ACTION		;time to dimm, reset the timer right away              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00011d   00ad     MOVWF     0x2d           			MOVWF	DIM_ACT_TIM_0		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00011e   2924     GOTO      0x124          			GOTO	_DIMM_0_ON			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;			                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00011f   08af     MOVF      0x2f,0x1       _STP_BCK_0	MOVF	STEPBACK_TIM_0,F	;if step back is non-zero, decrement and dimm   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000120   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000121   293a     GOTO      0x13a          			GOTO	_PORT_1_DIM			;we're not dimming port 0, check port 1                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000122   03af     DECF      0x2f,0x1       			DECF	STEPBACK_TIM_0,F	;we're stepping back                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000123   292a     GOTO      0x12a          			GOTO	_DIM_0_CONT			;don't look at sfty timer now                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000124   08a5     MOVF      0x25,0x1       _DIMM_0_ON	MOVF	SFTY_DIM_TIMR,F		;we ARE dimming, check safety timmer first, if its expired C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000125   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			; cancel the ACTIVE timer i.e. stop dimming                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000126   292a     GOTO      0x12a          			GOTO	_DIM_0_CONT			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000127   01ad     CLRF      0x2d           			CLRF	DIM_ACT_TIM_0		;(both dimmers are shutoff)                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000128   01b2     CLRF      0x32           			CLRF	DIM_ACT_TIM_1		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000129   296f     GOTO      0x16f          			GOTO	_DIM_END			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _DIM_0_CONT								;We are dimming port 0                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00012a   1e47     BTFSS     0x47,0x4       			BTFSS	F_DIM_DIRCT_0		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00012b   2934     GOTO      0x134          			GOTO	_DEC_DIM_0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00012c   0aae     INCF      0x2e,0x1       			INCF	OUT_VAL0,F			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00012d   30ff     MOVLW     0xff           			MOVLW	0xFF				;reached the maximum?                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00012e   062e     XORWF     0x2e,0x0       			XORWF	OUT_VAL0,W			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00012f   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000130   2938     GOTO      0x138          			GOTO	_OUTPUT_DIMM_0		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000131   1247     BCF       0x47,0x4       			BCF		F_DIM_DIRCT_0		;reverse direction at maximum                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000132   16c8     BSF       0x48,0x5       			BSF		F_UPD_EEPROM		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000133   2938     GOTO      0x138          			GOTO	_OUTPUT_DIMM_0		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000134   0bae     DECFSZ    0x2e,0x1       _DEC_DIM_0	DECFSZ	OUT_VAL0,F			;                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000135   2938     GOTO      0x138          			GOTO	_OUTPUT_DIMM_0		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000136   1647     BSF       0x47,0x4       			BSF		F_DIM_DIRCT_0		;reverse direction at minimum                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000137   16c8     BSF       0x48,0x5       			BSF		F_UPD_EEPROM		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _OUTPUT_DIMM_0							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000138   01cf     CLRF      0x4f           			CLRF	PORT_OUT			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000139   23b2     CALL      0x3b2          			CALL	WRITE_OUT_PORT		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;---------------------------------------;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _PORT_1_DIM								;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00013a   3003     MOVLW     0x3            			MOVLW	C_OUT_DIMMER		;are we dimmers?                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00013b   0630     XORWF     0x30,0x0       			XORWF	FUNZIONE_USC_1,W	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00013c   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00013d   296c     GOTO      0x16c          			GOTO	_MOD_DIM_EE			;NOT A DIMMER                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00013e   08b1     MOVF      0x31,0x1       			MOVF	ON_OFF_TIMER_1,F	;see if ON/OF timer running                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00013f   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000140   2948     GOTO      0x148          			GOTO	_DIMMING_1			;no, we might be dimming                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000141   0bb1     DECFSZ    0x31,0x1       			DECFSZ	ON_OFF_TIMER_1,F	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000142   296c     GOTO      0x16c          			GOTO	_MOD_DIM_EE			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000143   3001     MOVLW     0x1            			MOVLW	C_DIMMER_ACTION		;ON/OFF wait is over                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000144   00b2     MOVWF     0x32           			MOVWF	DIM_ACT_TIM_1		;START DIMMING-ACTIVE TIMERS                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000145   301e     MOVLW     0x1e           			MOVLW	C_SFTY_DIM_STOP		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000146   00a5     MOVWF     0x25           			MOVWF	SFTY_DIM_TIMR		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000147   296c     GOTO      0x16c          			GOTO	_MOD_DIM_EE			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000148   08b2     MOVF      0x32,0x1       _DIMMING_1	MOVF	DIM_ACT_TIM_1,F		;                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000149   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00014a   2950     GOTO      0x150          			GOTO	_STP_BCK_1			;dimmer action is off, see if we need to step back          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00014b   0bb2     DECFSZ    0x32,0x1       			DECFSZ	DIM_ACT_TIM_1,F		;dimmer action running, dec until 0                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00014c   296c     GOTO      0x16c          			GOTO	_MOD_DIM_EE			; - dimming but no action yet                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00014d   3001     MOVLW     0x1            			MOVLW	C_DIMMER_ACTION		; - time to dimm                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00014e   00b2     MOVWF     0x32           			MOVWF	DIM_ACT_TIM_1		;  -- reset the timer right away                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00014f   2955     GOTO      0x155          			GOTO	_DIMM_1_ON			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000150   08b4     MOVF      0x34,0x1       _STP_BCK_1	MOVF	STEPBACK_TIM_1,F	;if step back is non-zero, decrement and dimm   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000151   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000152   296c     GOTO      0x16c          			GOTO	_MOD_DIM_EE			;we're not dimming port 1 at all                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000153   03b4     DECF      0x34,0x1       			DECF	STEPBACK_TIM_1,F	;we're stepping back                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000154   295b     GOTO      0x15b          			GOTO	_DIM_1_CONT			;don't look at sfty timer now                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000155   08a5     MOVF      0x25,0x1       _DIMM_1_ON	MOVF	SFTY_DIM_TIMR,F		;we ARE dimming, check safety timmer first, if its expired C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000156   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			; cancel the ACTIVE timer i.e. stop dimming                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000157   295b     GOTO      0x15b          			GOTO	_DIM_1_CONT			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000158   01ad     CLRF      0x2d           			CLRF	DIM_ACT_TIM_0		;BOTH DIMMER OFF: WE EITHER LOST COMMUNICATIONS OR SOMEONE C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000159   01b2     CLRF      0x32           			CLRF	DIM_ACT_TIM_1		; IS PLAYING WITH THE LIGHTS!!!                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00015a   296f     GOTO      0x16f          			GOTO	_DIM_END			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _DIM_1_CONT								;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00015b   1ec7     BTFSS     0x47,0x5       			BTFSS	F_DIM_DIRCT_1		;			                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00015c   2965     GOTO      0x165          			GOTO	_DEC_DIM_1			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00015d   0ab3     INCF      0x33,0x1       			INCF	OUT_VAL1,F			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00015e   30ff     MOVLW     0xff           			MOVLW	0xFF				;reached the maximum?                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00015f   0633     XORWF     0x33,0x0       			XORWF	OUT_VAL1,W			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000160   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000161   2969     GOTO      0x169          			GOTO	_OUTPUT_DIMM_1		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000162   12c7     BCF       0x47,0x5       			BCF		F_DIM_DIRCT_1		;reverse direction at maximum                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000163   16c8     BSF       0x48,0x5       			BSF		F_UPD_EEPROM		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000164   2969     GOTO      0x169          			GOTO	_OUTPUT_DIMM_1		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000165   0bb3     DECFSZ    0x33,0x1       _DEC_DIM_1	DECFSZ	OUT_VAL1,F			;                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000166   2969     GOTO      0x169          			GOTO	_OUTPUT_DIMM_1		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000167   16c7     BSF       0x47,0x5       			BSF		F_DIM_DIRCT_1		;reverse direction at minimum                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000168   16c8     BSF       0x48,0x5       			BSF		F_UPD_EEPROM		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _OUTPUT_DIMM_1							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000169   3001     MOVLW     0x1            			MOVLW	1					;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00016a   00cf     MOVWF     0x4f           			MOVWF	PORT_OUT			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00016b   23b2     CALL      0x3b2          			CALL	WRITE_OUT_PORT		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;---------------------------------------;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00016c   1ec8     BTFSS     0x48,0x5       _MOD_DIM_EE	BTFSS	F_UPD_EEPROM		;                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00016d   296f     GOTO      0x16f          			GOTO	_DIM_END			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00016e   2760     CALL      0x760          			CALL	SAVE_STATE_DIRECTION;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00016f   28a9     GOTO      0xa9           _DIM_END	GOTO	_RET_7				;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Function A (STEP WATCH) threshold: check if the PERIOD_AVG deviates from the    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ; REFERENCE_SAMPLE by a marging larger than the STEP size.                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		PORT_IN                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;DESTROYS:	TEMP_BYT0,TEMP_BYT1                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           FUNC_A_THR_XING							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000170   08ce     MOVF      0x4e,0x1       			MOVF	PORT_IN,F			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000171   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000172   2978     GOTO      0x178          			GOTO	_POR_1_THR_A		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _POR_0_THR_A							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000173   1d47     BTFSS     0x47,0x2       			BTFSS	F_FA0_STEP_NZ		;Check if the thrshold crossing function is turned for port 0 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000174   29a8     GOTO      0x1a8          			GOTO	_THR_A_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000175   0874     MOVF      0x74,0x0       			MOVF	PERIOD_AVG_0,W		;Get the latest period average for this port             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000176   00fb     MOVWF     0x7b           			MOVWF	TEMP_BYT1			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000177   297c     GOTO      0x17c          			GOTO	_FUNC_CONT			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _POR_1_THR_A							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000178   1dc7     BTFSS     0x47,0x3       			BTFSS	F_FA1_STEP_NZ		;Check if the thrshold crossing function is turned for port 1 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000179   29a8     GOTO      0x1a8          			GOTO	_THR_A_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00017a   0875     MOVF      0x75,0x0       			MOVF	PERIOD_AVG_1,W		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00017b   00fb     MOVWF     0x7b           			MOVWF	TEMP_BYT1			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00017c   084e     MOVF      0x4e,0x0       _FUNC_CONT	MOVF	PORT_IN,W			;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00017d   3ebe     ADDLW     0xbe           			ADDLW	REFERENCE_SAMPLE	;calculate thresholds based on step size for this port C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00017e   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00017f   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;FSR -> REFERENCE_SAMPLE                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000180   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000181   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000182   0a84     INCF      0x4,0x1        			INCF	FSR,F				;FSR -> STEP_A                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000183   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;REF+STEP < CURRENT SAMPLE?                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000184   07fa     ADDWF     0x7a,0x1       			ADDWF	TEMP_BYT0,F			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000185   1c03     BTFSS     0x3,0x0        			BTFSS	STATUS,C			;overflow? don't test                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000186   2988     GOTO      0x188          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000187   2991     GOTO      0x191          			GOTO	_NO_HI_THR			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           		M_CMP_JG	TEMP_BYT0,TEMP_BYT1,_NO_HI_THR                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00018f   14c9     BSF       0x49,0x1       			BSF		F_SOGLIA		 	;1=SOGLIA IN SALITA                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000190   299c     GOTO      0x19c          			GOTO	_THR_PASSED			;in up direction                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000191   0800     MOVF      0x0,0x0        _NO_HI_THR	MOVF	INDF,W				;FSR -> STEP_A                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000192   02fa     SUBWF     0x7a,0x1       			SUBWF	TEMP_BYT0,F			;by subtracting twice the value of STEP we obtain REF-STEP C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000193   02fa     SUBWF     0x7a,0x1       			SUBWF	TEMP_BYT0,F			;REF-STEP_A < CURRENT SAMPLE?                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000194   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;underflow? don't test                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000195   2997     GOTO      0x197          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000196   29a8     GOTO      0x1a8          			GOTO	_THR_A_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           		M_CMP_JL	TEMP_BYT0,TEMP_BYT1,_THR_A_END                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00019b   10c9     BCF       0x49,0x1       			BCF		F_SOGLIA		 	;0=SOGLIA IN DISCESA                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00019c   0384     DECF      0x4,0x1        _THR_PASSED	DECF	FSR,F				;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00019d   0384     DECF      0x4,0x1        			DECF	FSR,F				;FSR -> REFERENCE_SAMPLE                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00019e   087b     MOVF      0x7b,0x0       			MOVF	TEMP_BYT1,W			;new reference only when the message is sent               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00019f   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001a0   084e     MOVF      0x4e,0x0       			MOVF	PORT_IN,W			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001a1   3ed4     ADDLW     0xd4           			ADDLW	EE_SAVED_SAMPLE		;save in EEPROM                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001a2   00da     MOVWF     0x5a           			MOVWF	E2ADDRESS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001a3   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001a4   00db     MOVWF     0x5b           			MOVWF	E2VALUE				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001a5   2772     CALL      0x772          			CALL	COPY_TO_EEPROM		;Put msg data into EEPROM                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001a6   1449     BSF       0x49,0x0       			BSF		F_TEMPORANEO		;ALARM                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001a7   2391     CALL      0x391          			CALL	SEND_REF_MSG		;FSR -> REFERENCE_SAMPLE(PORT_IN)                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001a8   0008     RETURN                   _THR_A_END	RETURN						;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Function B (THRESHOLD WATCH) threshold: Analyze PERIOD_AVG and compare it to    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;threshold values, if crossed send messages stored in EEPROM for each threshold.   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Gets called every time the PERIOD_AVG is calculated. All variables in this procedure  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;are in bank 2.                                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;NOTE: TO FOLLOW THE CODE BELOW ASSUME THAT THE CURRENT THRESHOLD IS  'C'        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		PORT_IN,PERIOD_AVG                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;DESTROYS:	FSR, TEMP_BYT0                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           FUNC_B_THR_XING							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001a9   08ce     MOVF      0x4e,0x1       			MOVF	PORT_IN,F			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001aa   1283     BCF       0x3,0x5        			BANKSEL	TIMER_0_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001ab   1703     BSF       0x3,0x6                                                                                         
0001ac   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001ad   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001ae   2a14     GOTO      0x214          			GOTO	_PORT_1_B			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;=======================================;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;	==	PORT 0 FUNTCION B THRESHOLDS ==	;                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;=======================================;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001af   0814     MOVF      0x14,0x0       _PORT_0_B	MOVF	CURSOR_0,W			;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001b0   3a08     XORLW     0x8            			XORLW	8					;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001b1   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;If C is the highest threshold, check only for down threshold C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001b2   29bd     GOTO      0x1bd          			GOTO	_THR_0_DOWN			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001b3   0a14     INCF      0x14,0x0       			INCF	CURSOR_0,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001b4   3e15     ADDLW     0x15           			ADDLW	THRLD_B0_UP-1		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001b5   0084     MOVWF     0x4            			MOVWF	FSR					;has PERIOD_AVG crossed threshold 'D'?                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001b6   0880     MOVF      0x0,0x1        			MOVF	INDF,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001b7   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;threshold not used?                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001b8   29bd     GOTO      0x1bd          			GOTO	_THR_0_DOWN			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           		M_CMP_JGE	PERIOD_AVG_0,INDF,_B0_UP                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001bd   0814     MOVF      0x14,0x0       _THR_0_DOWN	MOVF	CURSOR_0,W			;Check if we crossed a LOW threshold               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001be   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;are we at the lowest THR?                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001bf   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001c0   3e1d     ADDLW     0x1d           			ADDLW	THRLD_B0_DWN-1		;compare the PERIOD_AVG threshold 'C' to see if         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001c1   0084     MOVWF     0x4            			MOVWF	FSR					; we are down at threshold 'B'                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001c2   0880     MOVF      0x0,0x1        			MOVF	INDF,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001c3   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;threshold not used?                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001c4   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           		M_CMP_JL	PERIOD_AVG_0,INDF,_B0_DWN                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001c9   0190     CLRF      0x10           _B0_SAME	CLRF	TIMER_0_UP			;NTHR crossing, clear timers                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001ca   0191     CLRF      0x11           			CLRF	TIMER_0_DWN			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001cb   2a79     GOTO      0x279          			GOTO	_THR_B_END			;no THR-B0 changes                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001cc   0890     MOVF      0x10,0x1       _B0_UP		MOVF	TIMER_0_UP,F		;Threshold 'D' has been crossed                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001cd   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;is UP-clock running?                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001ce   29f0     GOTO      0x1f0          			GOTO	_SET_UP_0_TMR		;NO                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001cf   0a14     INCF      0x14,0x0       			INCF	CURSOR_0,W			;UP-clock is running                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001d0   3e01     ADDLW     0x1            			ADDLW	1					; see if we've crossed an even higher threshold                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001d1   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			; means we have to move the current cursor up               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001d2   3a09     XORLW     0x9            			XORLW	9					;Did we exceed the highest?                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001d3   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;If yes, the threshold will be incremented on TIMEREX        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001d4   2a79     GOTO      0x279          			GOTO	_THR_B_END			; because we can't test for further increment               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001d5   087a     MOVF      0x7a,0x0       			MOVF	TEMP_BYT0,W			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001d6   3e15     ADDLW     0x15           			ADDLW	THRLD_B0_UP-1		;Now check the higher threshold                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001d7   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001d8   0880     MOVF      0x0,0x1        			MOVF	INDF,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001d9   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;first see if the higher threshold is in use?                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001da   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           		M_CMP_JGE	PERIOD_AVG_0,INDF,_SND_0_UP_MSG;                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001df   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _SND_0_UP_MSG							;We crossed threshold 'E', send message for threshold 'D-UP'  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001e0   0a94     INCF      0x14,0x1       			INCF	CURSOR_0,F			; and start new timer                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001e1   0314     DECF      0x14,0x0       			DECF	CURSOR_0,W			;adjust for offset to EEPROM messages                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001e2   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001e3   1003     BCF       0x3,0x0        			CLRC						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001e4   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;multiply crusor by 5 to get start of message              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001e5   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001e6   077a     ADDWF     0x7a,0x0       			ADDWF	TEMP_BYT0,W			;			                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001e7   3e34     ADDLW     0x34           			ADDLW	EE_MESSAGE_0_UP		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001e8   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001e9   1303     BCF       0x3,0x6                                                                                         
0001ea   1383     BCF       0x3,0x7        			BCF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001eb   272b     CALL      0x72b          			CALL	SEND_EEPROM_MSG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001ec   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001ed   16c8     BSF       0x48,0x5       			BSF		F_UPD_EEPROM		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001ee   1283     BCF       0x3,0x5        			BANKSEL	TIMER_0_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001ef   1703     BSF       0x3,0x6                                                                                         
                                           _SET_UP_0_TMR							;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001f0   0191     CLRF      0x11           			CLRF	TIMER_0_DWN			;Whatever DOWN timer was doing, it must be shut-off        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001f1   0814     MOVF      0x14,0x0       			MOVF	CURSOR_0,W			;Set the UP-timer only we're not at the higest THRHLD       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001f2   3a08     XORLW     0x8            			XORLW	8					;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001f3   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001f4   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001f5   0878     MOVF      0x78,0x0       			MOVF	TEMPO_INVIO_0,W		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001f6   0090     MOVWF     0x10           			MOVWF	TIMER_0_UP			;RE-Start the UP clock                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001f7   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;---------------------------------------;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001f8   0891     MOVF      0x11,0x1       _B0_DWN		MOVF	TIMER_0_DWN,F		;DOWN clock running?                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001f9   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001fa   2a0b     GOTO      0x20b          			GOTO	_SET_DWN_0_TMR		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001fb   0394     DECF      0x14,0x1       _B0_DWN_CNT	DECF	CURSOR_0,F			;Do we need to check for LOWER than LOWEST????????? C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001fc   0814     MOVF      0x14,0x0       			MOVF	CURSOR_0,W			;adjust for offset to EEPROM messages                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001fd   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001fe   1003     BCF       0x3,0x0        			CLRC						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0001ff   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;CURSOR*5 to get start of message                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000200   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000201   077a     ADDWF     0x7a,0x0       			ADDWF	TEMP_BYT0,W			;			                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000202   3e5c     ADDLW     0x5c           			ADDLW	EE_MESSAGE_0_DWN	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000203   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000204   1303     BCF       0x3,0x6                                                                                         
000205   1383     BCF       0x3,0x7        			BCF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000206   272b     CALL      0x72b          			CALL	SEND_EEPROM_MSG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000207   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000208   16c8     BSF       0x48,0x5       			BSF		F_UPD_EEPROM		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000209   1283     BCF       0x3,0x5        			BANKSEL	TIMER_0_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00020a   1703     BSF       0x3,0x6                                                                                         
                                           _SET_DWN_0_TMR							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00020b   0894     MOVF      0x14,0x1       			MOVF	CURSOR_0,F			;If we are at the lowest threshold do not start             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00020c   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			; the timer (cancel if its already running)                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00020d   2a10     GOTO      0x210          			GOTO	_SET_D0				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00020e   0191     CLRF      0x11           			CLRF	TIMER_0_DWN			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00020f   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000210   0878     MOVF      0x78,0x0       _SET_D0		MOVF	TEMPO_INVIO_0,W		;First detection of THR crossing                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000211   0091     MOVWF     0x11           			MOVWF	TIMER_0_DWN			;RE-Start the DOWN clock                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000212   0190     CLRF      0x10           			CLRF	TIMER_0_UP			;Whatever UP timer was doing, it must be shut-off           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000213   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;=======================================;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;	==	PORT 1 FUNTCION B THRESHOLDS ==	;                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;=======================================;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000214   0815     MOVF      0x15,0x0       _PORT_1_B	MOVF	CURSOR_1,W			;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000215   3a08     XORLW     0x8            			XORLW	8					;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000216   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;If C is the highest threshold, check only for down threshold C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000217   2a22     GOTO      0x222          			GOTO	_THR_1_DOWN			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000218   0a15     INCF      0x15,0x0       			INCF	CURSOR_1,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000219   3e25     ADDLW     0x25           			ADDLW	THRLD_B1_UP-1		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00021a   0084     MOVWF     0x4            			MOVWF	FSR					;has PERIOD_AVG crossed threshold 'D'?                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00021b   0880     MOVF      0x0,0x1        			MOVF	INDF,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00021c   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00021d   2a22     GOTO      0x222          			GOTO	_THR_1_DOWN			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           		M_CMP_JGE	PERIOD_AVG_1,INDF,_B1_UP                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000222   0815     MOVF      0x15,0x0       _THR_1_DOWN	MOVF	CURSOR_1,W			;Check if we crossed a LOW threshold               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000223   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;are we at the lowest THR?                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000224   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000225   3e2d     ADDLW     0x2d           			ADDLW	THRLD_B1_DWN-1		;compare the PERIOD_AVG with threshold 'C' to see if    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000226   0084     MOVWF     0x4            			MOVWF	FSR					; we are down at threshold 'B'                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000227   0880     MOVF      0x0,0x1        			MOVF	INDF,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000228   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;threshold not used?                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000229   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;			                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           		M_CMP_JL	PERIOD_AVG_1,INDF,_B1_DWN                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00022e   0192     CLRF      0x12           _B1_SAME	CLRF	TIMER_1_UP			;NTHR crossing, clear timers                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00022f   0193     CLRF      0x13           			CLRF	TIMER_1_DWN			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000230   2a79     GOTO      0x279          			GOTO	_THR_B_END			;no THR-B1 changes                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000231   0892     MOVF      0x12,0x1       _B1_UP		MOVF	TIMER_1_UP,F		;Threshold 'D' has been crossed                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000232   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;is UP-clock running?                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000233   2a55     GOTO      0x255          			GOTO	_SET_UP_1_TMR		;NO                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000234   0a15     INCF      0x15,0x0       			INCF	CURSOR_1,W			;UP-clock is running                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000235   3e01     ADDLW     0x1            			ADDLW	1					; see if we've crossed an even higher threshold                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000236   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			; means we have to move the current cursor up               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000237   3a09     XORLW     0x9            			XORLW	9					;Did we exceed the highest?                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000238   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;If yes, the threshold will be incremented on TIMEREX        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000239   2a79     GOTO      0x279          			GOTO	_THR_B_END			; because can't test for further increment                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00023a   087a     MOVF      0x7a,0x0       			MOVF	TEMP_BYT0,W			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00023b   3e25     ADDLW     0x25           			ADDLW	THRLD_B1_UP-1		;Now check the actual threshold                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00023c   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00023d   0880     MOVF      0x0,0x1        			MOVF	INDF,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00023e   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;see if the higher threshold is also in use                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00023f   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           		M_CMP_JGE	PERIOD_AVG_1,INDF,_SND_1_UP_MSG;                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000244   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _SND_1_UP_MSG							;We crossed threshold 'E', send message for threshold 'D-UP'  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000245   0a95     INCF      0x15,0x1       			INCF	CURSOR_1,F			; and start new timer                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000246   0315     DECF      0x15,0x0       			DECF	CURSOR_1,W			;adjust for offset to EEPROM messages                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000247   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000248   1003     BCF       0x3,0x0        			CLRC						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000249   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;multiply crusor by 5 to get start of message              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00024a   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00024b   077a     ADDWF     0x7a,0x0       			ADDWF	TEMP_BYT0,W			;			                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00024c   3e84     ADDLW     0x84           			ADDLW	EE_MESSAGE_1_UP		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00024d   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00024e   1303     BCF       0x3,0x6                                                                                         
00024f   1383     BCF       0x3,0x7        			BCF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000250   272b     CALL      0x72b          			CALL	SEND_EEPROM_MSG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000251   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000252   16c8     BSF       0x48,0x5       			BSF		F_UPD_EEPROM		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000253   1283     BCF       0x3,0x5        			BANKSEL	TIMER_1_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000254   1703     BSF       0x3,0x6                                                                                         
                                           _SET_UP_1_TMR							;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000255   0193     CLRF      0x13           			CLRF	TIMER_1_DWN			;Whatever DOWN timer was doing, it must be shut-off        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000256   0815     MOVF      0x15,0x0       			MOVF	CURSOR_1,W			;Set the UP-timer only we're not at the higest THRHLD       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000257   3a08     XORLW     0x8            			XORLW	8					;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000258   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000259   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00025a   0879     MOVF      0x79,0x0       			MOVF	TEMPO_INVIO_1,W		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00025b   0092     MOVWF     0x12           			MOVWF	TIMER_1_UP			;RE-Start the UP clock                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00025c   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;---------------------------------------;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00025d   0893     MOVF      0x13,0x1       _B1_DWN		MOVF	TIMER_1_DWN,F		;DOWN clock running?                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00025e   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00025f   2a70     GOTO      0x270          			GOTO	_SET_DWN_1_TMR		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000260   0395     DECF      0x15,0x1       _B1_DWN_CNT	DECF	CURSOR_1,F			;Do we need to check for LOWER than LOWEST????????? C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000261   0815     MOVF      0x15,0x0       			MOVF	CURSOR_1,W			;adjust for offset to EEPROM messages                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000262   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000263   1003     BCF       0x3,0x0        			CLRC						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000264   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;CURSOR*5 to get start of message                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000265   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000266   077a     ADDWF     0x7a,0x0       			ADDWF	TEMP_BYT0,W			;			                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000267   3eac     ADDLW     0xac           			ADDLW	EE_MESSAGE_1_DWN	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000268   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000269   1303     BCF       0x3,0x6                                                                                         
00026a   1383     BCF       0x3,0x7        			BCF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00026b   272b     CALL      0x72b          			CALL	SEND_EEPROM_MSG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00026c   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00026d   16c8     BSF       0x48,0x5       			BSF		F_UPD_EEPROM		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00026e   1283     BCF       0x3,0x5        			BANKSEL	TIMER_1_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00026f   1703     BSF       0x3,0x6                                                                                         
                                           _SET_DWN_1_TMR							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000270   0895     MOVF      0x15,0x1       			MOVF	CURSOR_1,F			;If we are at the lowest threshold do not start             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000271   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			; the timer (cancel if its already running)                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000272   2a75     GOTO      0x275          			GOTO	_SET_D1				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000273   0193     CLRF      0x13           			CLRF	TIMER_1_DWN			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000274   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000275   0879     MOVF      0x79,0x0       _SET_D1		MOVF	TEMPO_INVIO_1,W		;First detection of THR crossing                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000276   0093     MOVWF     0x13           			MOVWF	TIMER_1_DWN			;RE-Start the DOWN clock                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000277   0192     CLRF      0x12           			CLRF	TIMER_1_UP			;Whatever UP timer was doing, it must be shut-off           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000278   2a79     GOTO      0x279          			GOTO	_THR_B_END			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;=======================================;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000279   1383     BCF       0x3,0x7        _THR_B_END	BCF		STATUS,IRP			;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00027a   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00027b   1303     BCF       0x3,0x6                                                                                         
00027c   1ec8     BTFSS     0x48,0x5       			BTFSS	F_UPD_EEPROM		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00027d   2a91     GOTO      0x291          			GOTO	_THR_DONE			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00027e   12c8     BCF       0x48,0x5       			BCF		F_UPD_EEPROM		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00027f   30d8     MOVLW     0xd8           			MOVLW	EE_SAVED_CURSOR		;Save the cursors in EEPROM                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000280   00da     MOVWF     0x5a           			MOVWF	E2ADDRESS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000281   1283     BCF       0x3,0x5        			BANKSEL	TIMER_0_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000282   1703     BSF       0x3,0x6                                                                                         
000283   0814     MOVF      0x14,0x0       			MOVF	CURSOR_0,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000284   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;	                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000285   1303     BCF       0x3,0x6                                                                                         
000286   00db     MOVWF     0x5b           			MOVWF	E2VALUE				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000287   2772     CALL      0x772          			CALL	COPY_TO_EEPROM		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000288   30d9     MOVLW     0xd9           			MOVLW	EE_SAVED_CURSOR+1	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000289   00da     MOVWF     0x5a           			MOVWF	E2ADDRESS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00028a   1283     BCF       0x3,0x5        			BANKSEL	TIMER_0_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00028b   1703     BSF       0x3,0x6                                                                                         
00028c   0815     MOVF      0x15,0x0       			MOVF	CURSOR_1,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00028d   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;	                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00028e   1303     BCF       0x3,0x6                                                                                         
00028f   00db     MOVWF     0x5b           			MOVWF	E2VALUE				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000290   2772     CALL      0x772          			CALL	COPY_TO_EEPROM		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000291   0008     RETURN                   _THR_DONE	RETURN						;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;If function A, send samples after SEND_TIMER expires                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           THRESHOLD_A_PERIOD						;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000292   01ce     CLRF      0x4e           			CLRF	PORT_IN				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _NXT_PORT_TIMER							;Decrement the programmed seconds timer                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000293   08ce     MOVF      0x4e,0x1       			MOVF	PORT_IN,F			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000294   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000295   2a9d     GOTO      0x29d          			GOTO	_PORT_1_TIM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000296   0829     MOVF      0x29,0x0       _PORT_0_TIM	MOVF	FUNZIONE_ING_0,W	;                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000297   3a01     XORLW     0x1            			XORLW	C_IN_STEP_WATCH		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000298   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000299   2ab8     GOTO      0x2b8          			GOTO	_NXT_PORT_NBR		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00029a   1c47     BTFSS     0x47,0x0       			BTFSS	F_FA0_TMP_SND		;See if periodic timers are active for either port       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00029b   2ab8     GOTO      0x2b8          			GOTO	_NXT_PORT_NBR		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00029c   2aa4     GOTO      0x2a4          			GOTO	_CHK_TIME			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00029d   082a     MOVF      0x2a,0x0       _PORT_1_TIM	MOVF	FUNZIONE_ING_1,W	;                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00029e   3a01     XORLW     0x1            			XORLW	C_IN_STEP_WATCH		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00029f   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002a0   2ab8     GOTO      0x2b8          			GOTO	_NXT_PORT_NBR		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002a1   1cc7     BTFSS     0x47,0x1       			BTFSS	F_FA1_TMP_SND		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002a2   2ab8     GOTO      0x2b8          			GOTO	_NXT_PORT_NBR		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002a3   2aa4     GOTO      0x2a4          			GOTO	_CHK_TIME			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002a4   3076     MOVLW     0x76           _CHK_TIME	MOVLW	DATA_TIMER			;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002a5   074e     ADDWF     0x4e,0x0       			ADDWF	PORT_IN,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002a6   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002a7   0b80     DECFSZ    0x0,0x1        			DECFSZ	INDF,F				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002a8   2ab8     GOTO      0x2b8          			GOTO	_NXT_PORT_NBR		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002a9   084e     MOVF      0x4e,0x0       			MOVF	PORT_IN,W			;Send timer expired                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002aa   3e78     ADDLW     0x78           			ADDLW	TEMPO_INVIO_0		; reset it rigth away                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002ab   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002ac   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002ad   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002ae   084e     MOVF      0x4e,0x0       			MOVF	PORT_IN,W			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002af   3e76     ADDLW     0x76           			ADDLW	DATA_TIMER			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002b0   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002b1   087a     MOVF      0x7a,0x0       			MOVF	TEMP_BYT0,W			;FSR -> DATA_TIMER(PORT_IN)                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002b2   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002b3   01c9     CLRF      0x49           			CLRF	SEND_FLAGS			;Initialize flags (<0>=temporaneo)                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002b4   084e     MOVF      0x4e,0x0       			MOVF	PORT_IN,W			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002b5   3e74     ADDLW     0x74           			ADDLW	PERIOD_AVG_0		;report the last reading for this port                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002b6   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002b7   2391     CALL      0x391          			CALL	SEND_REF_MSG		;(PORT_IN,FSR -> REFERENCE_SAMPLE(PORT_IN)                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _NXT_PORT_NBR							;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002b8   0ace     INCF      0x4e,0x1       			INCF	PORT_IN,F			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002b9   1cce     BTFSS     0x4e,0x1       			BTFSS	PORT_IN,1			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002ba   2a93     GOTO      0x293          			GOTO	_NXT_PORT_TIMER		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002bb   28cf     GOTO      0xcf           _NOT_YET	GOTO	_RET_5				;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Checks for THRESHOLD persistancy for ports with function B.  All variables in Bank 2 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;DESTROYS:	FSR,TEMP_BYT0                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           THRESHOLD_B_PERIOD						;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002bc   0829     MOVF      0x29,0x0       			MOVF	FUNZIONE_ING_0,W	;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002bd   3a02     XORLW     0x2            			XORLW	C_IN_THRHLD_WATCH	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002be   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002bf   2aec     GOTO      0x2ec          			GOTO	_PORT_1B_PERIOD		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002c0   1283     BCF       0x3,0x5        			BANKSEL	TIMER_0_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002c1   1703     BSF       0x3,0x6                                                                                         
0002c2   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002c3   0890     MOVF      0x10,0x1       			MOVF	TIMER_0_UP,F		;UP-clock running?                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002c4   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002c5   2ad9     GOTO      0x2d9          			GOTO	_TIME_0_DOWN		;NO UP-clock, nothing to do port 0                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002c6   0b90     DECFSZ    0x10,0x1       			DECFSZ	TIMER_0_UP,F		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002c7   2aec     GOTO      0x2ec          			GOTO	_PORT_1B_PERIOD		;no THR-B0 changes... yet                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002c8   0a94     INCF      0x14,0x1       			INCF	CURSOR_0,F			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002c9   0314     DECF      0x14,0x0       			DECF	CURSOR_0,W			;adjust for offset to EEPROM messages                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002ca   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002cb   1003     BCF       0x3,0x0        			CLRC						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002cc   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;multiply crusor by 5 to get start of message              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002cd   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002ce   077a     ADDWF     0x7a,0x0       			ADDWF	TEMP_BYT0,W			;			                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002cf   3e34     ADDLW     0x34           			ADDLW	EE_MESSAGE_0_UP		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002d0   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002d1   1303     BCF       0x3,0x6                                                                                         
0002d2   1383     BCF       0x3,0x7        			BCF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002d3   272b     CALL      0x72b          			CALL	SEND_EEPROM_MSG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002d4   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002d5   16c8     BSF       0x48,0x5       			BSF		F_UPD_EEPROM		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002d6   1283     BCF       0x3,0x5        			BANKSEL	TIMER_0_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002d7   1703     BSF       0x3,0x6                                                                                         
                                           										;THR-B0 moves up on TIMER EXPIRY - NEW REFERENCE                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002d8   2aec     GOTO      0x2ec          			GOTO	_PORT_1B_PERIOD		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _TIME_0_DOWN							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002d9   0891     MOVF      0x11,0x1       			MOVF	TIMER_0_DWN,F		;DOWN-clock running?                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002da   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002db   2aec     GOTO      0x2ec          			GOTO	_PORT_1B_PERIOD		;no DOWN-clock, no changes port 0                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002dc   0b91     DECFSZ    0x11,0x1       			DECFSZ	TIMER_0_DWN,F		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002dd   2aec     GOTO      0x2ec          			GOTO	_PORT_1B_PERIOD		;no THR-B0 changes... yet                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002de   0394     DECF      0x14,0x1       			DECF	CURSOR_0,F			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002df   0814     MOVF      0x14,0x0       			MOVF	CURSOR_0,W			;adjust for offset to EEPROM messages                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002e0   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002e1   1003     BCF       0x3,0x0        			CLRC						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002e2   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;multiply crusor by 5 to get start of message              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002e3   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002e4   077a     ADDWF     0x7a,0x0       			ADDWF	TEMP_BYT0,W			;			                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002e5   3e5c     ADDLW     0x5c           			ADDLW	EE_MESSAGE_0_DWN	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002e6   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002e7   1303     BCF       0x3,0x6                                                                                         
0002e8   1383     BCF       0x3,0x7        			BCF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002e9   272b     CALL      0x72b          			CALL	SEND_EEPROM_MSG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002ea   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002eb   16c8     BSF       0x48,0x5       			BSF		F_UPD_EEPROM		;THR-B0 moves down on TIMER EXPIRY - NEW REFERENCE         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;=======================================;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _PORT_1B_PERIOD							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002ec   082a     MOVF      0x2a,0x0       			MOVF	FUNZIONE_ING_1,W	;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002ed   3a02     XORLW     0x2            			XORLW	C_IN_THRHLD_WATCH	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002ee   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002ef   2b1c     GOTO      0x31c          			GOTO	_THR_B_EPILOGUE		;not THR B1 funtion                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002f0   1283     BCF       0x3,0x5        			BANKSEL	TIMER_1_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002f1   1703     BSF       0x3,0x6                                                                                         
0002f2   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002f3   0892     MOVF      0x12,0x1       			MOVF	TIMER_1_UP,F		;UP-clock running?                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002f4   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002f5   2b09     GOTO      0x309          			GOTO	_TIME_1_DOWN		;no THR-B1 changes                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002f6   0b92     DECFSZ    0x12,0x1       			DECFSZ	TIMER_1_UP,F		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002f7   2b1c     GOTO      0x31c          			GOTO	_THR_B_EPILOGUE		;no THR-B1 changes... yet                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002f8   0a95     INCF      0x15,0x1       			INCF	CURSOR_1,F			;THR-B1 moves up on TIMER EXPIRY - NEW REFERENCE            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002f9   0315     DECF      0x15,0x0       			DECF	CURSOR_1,W			;adjust for offset to EEPROM messages                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002fa   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002fb   1003     BCF       0x3,0x0        			CLRC						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002fc   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;multiply crusor by 5 to get start of message              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002fd   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002fe   077a     ADDWF     0x7a,0x0       			ADDWF	TEMP_BYT0,W			;			                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0002ff   3e84     ADDLW     0x84           			ADDLW	EE_MESSAGE_1_UP		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000300   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000301   1303     BCF       0x3,0x6                                                                                         
000302   1383     BCF       0x3,0x7        			BCF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000303   272b     CALL      0x72b          			CALL	SEND_EEPROM_MSG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000304   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000305   16c8     BSF       0x48,0x5       			BSF		F_UPD_EEPROM		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000306   1283     BCF       0x3,0x5        			BANKSEL	TIMER_1_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000307   1703     BSF       0x3,0x6                                                                                         
000308   2b1c     GOTO      0x31c          			GOTO	_THR_B_EPILOGUE		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _TIME_1_DOWN							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000309   0893     MOVF      0x13,0x1       			MOVF	TIMER_1_DWN,F		;DOWN-clock running?                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00030a   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00030b   2b1c     GOTO      0x31c          			GOTO	_THR_B_EPILOGUE		;no THR-B1 changes                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00030c   0b93     DECFSZ    0x13,0x1       			DECFSZ	TIMER_1_DWN,F		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00030d   2b1c     GOTO      0x31c          			GOTO	_THR_B_EPILOGUE		;no THR-B1 changes... yet                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00030e   0395     DECF      0x15,0x1       			DECF	CURSOR_1,F			;THR-B1 moves down on TIMER EXPIRY - NEW REFERENCE          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00030f   0815     MOVF      0x15,0x0       			MOVF	CURSOR_1,W			;adjust for offset to EEPROM messages                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000310   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000311   1003     BCF       0x3,0x0        			CLRC						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000312   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;multiply crusor by 5 to get start of message              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000313   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000314   077a     ADDWF     0x7a,0x0       			ADDWF	TEMP_BYT0,W			;			                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000315   3eac     ADDLW     0xac           			ADDLW	EE_MESSAGE_1_DWN	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000316   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000317   1303     BCF       0x3,0x6                                                                                         
000318   1383     BCF       0x3,0x7        			BCF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000319   272b     CALL      0x72b          			CALL	SEND_EEPROM_MSG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00031a   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00031b   16c8     BSF       0x48,0x5       			BSF		F_UPD_EEPROM		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;=======================================;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _THR_B_EPILOGUE							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00031c   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;	                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00031d   1303     BCF       0x3,0x6                                                                                         
00031e   1383     BCF       0x3,0x7        			BCF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00031f   1ec8     BTFSS     0x48,0x5       			BTFSS	F_UPD_EEPROM		;put new cursors in EEPROM when necessary                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000320   2b34     GOTO      0x334          			GOTO	_END_THR_B			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000321   12c8     BCF       0x48,0x5       			BCF		F_UPD_EEPROM		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000322   30d8     MOVLW     0xd8           			MOVLW	EE_SAVED_CURSOR		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000323   00da     MOVWF     0x5a           			MOVWF	E2ADDRESS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000324   1283     BCF       0x3,0x5        			BANKSEL	TIMER_0_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000325   1703     BSF       0x3,0x6                                                                                         
000326   0814     MOVF      0x14,0x0       			MOVF	CURSOR_0,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000327   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;	                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000328   1303     BCF       0x3,0x6                                                                                         
000329   00db     MOVWF     0x5b           			MOVWF	E2VALUE				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00032a   2772     CALL      0x772          			CALL	COPY_TO_EEPROM		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00032b   30d9     MOVLW     0xd9           			MOVLW	EE_SAVED_CURSOR+1	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00032c   00da     MOVWF     0x5a           			MOVWF	E2ADDRESS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00032d   1283     BCF       0x3,0x5        			BANKSEL	TIMER_0_UP			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00032e   1703     BSF       0x3,0x6                                                                                         
00032f   0815     MOVF      0x15,0x0       			MOVF	CURSOR_1,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000330   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;	                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000331   1303     BCF       0x3,0x6                                                                                         
000332   00db     MOVWF     0x5b           			MOVWF	E2VALUE				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000333   2772     CALL      0x772          			CALL	COPY_TO_EEPROM		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000334   28d0     GOTO      0xd0           _END_THR_B	GOTO	_RET_6				;e.g. RETURN                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Read PORT_IN                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;DESTROYS:	TEMP_BYT0,TEMP_BYT2                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		PORT_IN=port to read (0|1), SAMPLE=sample number (0..3)                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	sample                                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           GET_SAMPLES								;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000335   084e     MOVF      0x4e,0x0       			MOVF	PORT_IN,W			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000336   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000337   1003     BCF       0x3,0x0        			CLRC						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000338   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;*4 to point to correct SAMPLES                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000339   0d7a     RLF       0x7a,0x0       			RLF		TEMP_BYT0,W			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00033a   0735     ADDWF     0x35,0x0       			ADDWF	SAMPLE_CNTR,W		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00033b   3eb6     ADDLW     0xb6           			ADDLW	SAMPLES				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00033c   0084     MOVWF     0x4            			MOVWF	FSR					;FSR -> SAMPLES(PORT_IN,SAMPLE_CNTR)                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00033d   08ce     MOVF      0x4e,0x1       			MOVF	PORT_IN,F			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00033e   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00033f   2b42     GOTO      0x342          			GOTO	$+3					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000340   3080     MOVLW     0x80           			MOVLW	b'10000000'			;READ PORT 0                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000341   2b43     GOTO      0x343          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000342   3088     MOVLW     0x88           			MOVLW	b'10001000'			;READ PORT 1                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000343   009f     MOVWF     0x1f           _READ_DELAY	MOVWF	ADCON0				;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000344   3001     MOVLW     0x1            			MOVLW	b'00000001'			;turn ON, A/D module                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000345   049f     IORWF     0x1f,0x1       			IORWF	ADCON0,F			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000346   300c     MOVLW     0xc            			MOVLW	12					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000347   00fc     MOVWF     0x7c           			MOVWF	TEMP_BYT2			;wait cycle                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000348   0bfc     DECFSZ    0x7c,0x1       			DECFSZ	TEMP_BYT2,F			;2 CYC+2CYC=4*12=48us+ delay                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000349   2b48     GOTO      0x348          			GOTO	$-1					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00034a   151f     BSF       0x1f,0x2       _ADCON_GO	BSF		ADCON0,GO			;start conversion                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00034b   191f     BTFSC     0x1f,0x2       			BTFSC	ADCON0,GO			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00034c   2b4b     GOTO      0x34b          			GOTO	$-1					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00034d   081e     MOVF      0x1e,0x0       _ADCON_RDY	MOVF	ADRESH,W			;8 MSB (ignore 2 LSBs in ADRESL)                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00034e   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00034f   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Calculate average for PORT_IN                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		PORT_IN                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	PERIOD_AVG(PORT_IN) - average of the last 4 samples for this port       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;DESTROYS:	TEMP_BYT0,TEMP_BYT1,TEMP_BYT2,FSR                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000350   01b5     CLRF      0x35           CALC_AVG	CLRF	SAMPLE_CNTR			;after 4 samples are collected compute the average   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000351   01fc     CLRF      0x7c           			CLRF	TEMP_BYT2			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000352   01fb     CLRF      0x7b           			CLRF	TEMP_BYT1			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000353   084e     MOVF      0x4e,0x0       			MOVF	PORT_IN,W			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000354   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000355   1003     BCF       0x3,0x0        			CLRC						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000356   0dfa     RLF       0x7a,0x1       			RLF		TEMP_BYT0,F			;*4 to point to correct SAMPLES                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000357   0d7a     RLF       0x7a,0x0       			RLF		TEMP_BYT0,W			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000358   0735     ADDWF     0x35,0x0       			ADDWF	SAMPLE_CNTR,W		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000359   3eb5     ADDLW     0xb5           			ADDLW	SAMPLES-1			;double precision sum of                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00035a   0084     MOVWF     0x4            			MOVWF	FSR					; of 4 collected samples                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00035b   0a84     INCF      0x4,0x1        _NXT_SUM	INCF	FSR,F				;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00035c   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00035d   07fb     ADDWF     0x7b,0x1       			ADDWF	TEMP_BYT1,F			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00035e   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00035f   0afc     INCF      0x7c,0x1       			INCF	TEMP_BYT2,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000360   0ab5     INCF      0x35,0x1       			INCF	SAMPLE_CNTR,F		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           	   M_CMPL_JL	SAMPLE_CNTR,4,_NXT_SUM                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000368   0cfc     RRF       0x7c,0x1       			RRF		TEMP_BYT2,F			;devide by 4, double precision                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000369   0cfb     RRF       0x7b,0x1       			RRF		TEMP_BYT1,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00036a   0cfc     RRF       0x7c,0x1       			RRF		TEMP_BYT2,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00036b   0cfb     RRF       0x7b,0x1       			RRF		TEMP_BYT1,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00036c   3074     MOVLW     0x74           			MOVLW	PERIOD_AVG_0		;Save this period's average                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00036d   074e     ADDWF     0x4e,0x0       			ADDWF	PORT_IN,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00036e   0084     MOVWF     0x4            			MOVWF	FSR					;FSR -> PERIOD_AVG                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00036f   087b     MOVF      0x7b,0x0       			MOVF	TEMP_BYT1,W			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000370   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000371   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Get states of inputs and outputs and report back to the CPU.                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		msg in SHARED data                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	none                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SND_PORT_PARS							;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           		M_CMPL_JNE	MSG_SUBT,1,_PORTS1	; decide if its port pair 0 or 1                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000376   0874     MOVF      0x74,0x0       			MOVF	PERIOD_AVG_0,W		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000377   00e2     MOVWF     0x62           			MOVWF	MSG_DISC			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000378   082e     MOVF      0x2e,0x0       			MOVF	OUT_VAL0,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000379   00e3     MOVWF     0x63           			MOVWF	MSG_ARGT			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00037a   2b86     GOTO      0x386          			GOTO	_SND_PP				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _PORTS1: M_CMPL_JNE	MSG_SUBT,2,_PORT_ERROR;                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00037f   0875     MOVF      0x75,0x0       			MOVF	PERIOD_AVG_1,W		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000380   00e2     MOVWF     0x62           			MOVWF	MSG_DISC			;	                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000381   0833     MOVF      0x33,0x0       			MOVF	OUT_VAL1,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000382   00e3     MOVWF     0x63           			MOVWF	MSG_ARGT			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000383   2b86     GOTO      0x386          			GOTO	_SND_PP				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000384   2682     CALL      0x682          _PORT_ERROR	CALL	ERROR_HANDLER		;ERROR: NO TX ENTRY AVAILABLE FOR REPLY          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000385   2b90     GOTO      0x390          			GOTO	_PORT_PARS_FIN		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000386   30b6     MOVLW     0xb6           _SND_PP		MOVLW	TYPE_RISPOSTA_STAT 	;(182)	                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000387   00df     MOVWF     0x5f           			MOVWF	MSG_TYPE			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000388   3001     MOVLW     0x1            			MOVLW	1					;send only once                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000389   00de     MOVWF     0x5e           			MOVWF	MSG_EXPIRE			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00038a   262a     CALL      0x62a          			CALL	FIND_EMPTY_TX_Q		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00038b   19c8     BTFSC     0x48,0x3       			BTFSC	F_MSG_FOUND			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00038c   2b8f     GOTO      0x38f          			GOTO	$+3					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00038d   2682     CALL      0x682          			CALL	ERROR_HANDLER		;ERROR: NO TX ENTRY AVAILABLE FOR REPLY                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00038e   2b90     GOTO      0x390          			GOTO	_PORT_PARS_FIN		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00038f   2662     CALL      0x662          			CALL	COPY_TO_TX			;RX msg will be discarded on return                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _PORT_PARS_FIN							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000390   0008     RETURN                   			RETURN						;return SND_PORT_PARS                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Send a messge with the REFERENCE_SAMPLE.  The message is treated more or less as if it  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;was an alarm.                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		PORT_IN,FSR -> PERIOD_AVG (timer ex) or REFERENCE_SAMPLE (threshold passed) C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	message in RX_QUE                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;DESTROYS:	FSR                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SEND_REF_MSG							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000391   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000392   00e3     MOVWF     0x63           			MOVWF	MSG_ARGT			;save rightaway                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000393   30b4     MOVLW     0xb4           			MOVLW	TYPE_INVIO_STATO	;180                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000394   00df     MOVWF     0x5f           			MOVWF	MSG_TYPE			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000395   0849     MOVF      0x49,0x0       			MOVF	SEND_FLAGS,W		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000396   00e0     MOVWF     0x60           			MOVWF	MSG_SUBT			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000397   084a     MOVF      0x4a,0x0       			MOVF	OWN_SERIAL,W		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000398   00e1     MOVWF     0x61           			MOVWF	MSG_SERL			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000399   0a4e     INCF      0x4e,0x0       			INCF	PORT_IN,W			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00039a   00e2     MOVWF     0x62           			MOVWF	MSG_DISC			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00039b   3001     MOVLW     0x1            			MOVLW	C_NO_RETRY			;no retries                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00039c   00de     MOVWF     0x5e           			MOVWF	MSG_EXPIRE			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00039d   262a     CALL      0x62a          			CALL	FIND_EMPTY_TX_Q		;Prepare reply                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00039e   1dc8     BTFSS     0x48,0x3       			BTFSS	F_MSG_FOUND			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00039f   2ba2     GOTO      0x3a2          			GOTO	_ERROR_OUT			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003a0   2662     CALL      0x662          			CALL	COPY_TO_TX			;RX msg will be discarded on return                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003a1   2ba3     GOTO      0x3a3          			GOTO	_FUN_A_USC			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003a2   2682     CALL      0x682          _ERROR_OUT	CALL	ERROR_HANDLER		;                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003a3   084e     MOVF      0x4e,0x0       _FUN_A_USC	MOVF	PORT_IN,W			;if this USCITA is function A (LISTEN TO OWN PORT) put C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003a4   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003a5   2ba8     GOTO      0x3a8          			GOTO	$+3					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003a6   30ab     MOVLW     0xab           			MOVLW	FUNZIONE_USC_0		; the message also in the RX QUE                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003a7   2ba9     GOTO      0x3a9          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003a8   30b0     MOVLW     0xb0           			MOVLW	FUNZIONE_USC_1		; the message also in the RX QUE                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003a9   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003aa   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003ab   3a01     XORLW     0x1            			XORLW	C_OUT_LISTEN_OWN	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003ac   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003ad   2bb1     GOTO      0x3b1          			GOTO	_REF_OUT			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003ae   263c     CALL      0x63c          			CALL	FIND_EMPTY_RX_Q		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003af   19c8     BTFSC     0x48,0x3       			BTFSC	F_MSG_FOUND			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003b0   2651     CALL      0x651          			CALL	COPY_TO_RX			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003b1   0008     RETURN                   _REF_OUT	RETURN						;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Write to an output port.                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;IPUT:		PORT_OUT(0|1),port to write = OUT_VAL0|OUT_VAL1                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;DESTROYS:	TEMP_BYT0                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           WRITE_OUT_PORT							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003b2   1112     BCF       0x12,0x2       			BCF		T2CON,TMR2ON		;shut-off TMR2                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003b3   0191     CLRF      0x11           			CLRF	TMR2				;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003b4   0187     CLRF      0x7            			CLRF	PORTC				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003b5   08cf     MOVF      0x4f,0x1       			MOVF	PORT_OUT,F			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003b6   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003b7   2bc8     GOTO      0x3c8          			GOTO	_WRI_PORT1			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003b8   082e     MOVF      0x2e,0x0       _WRI_PORT0	MOVF	OUT_VAL0,W			;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003b9   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003ba   0195     CLRF      0x15           			CLRF	CCPR1L				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003bb   1003     BCF       0x3,0x0        			CLRC						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003bc   0cfa     RRF       0x7a,0x1       			RRF		TEMP_BYT0,F			;LSB - > CCP1CON<5,4>                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003bd   1217     BCF       0x17,0x4       			BCF		CCP1CON,4			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003be   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003bf   1617     BSF       0x17,0x4       			BSF		CCP1CON,4			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003c0   0cfa     RRF       0x7a,0x1       			RRF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003c1   1297     BCF       0x17,0x5       			BCF		CCP1CON,5			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003c2   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003c3   1697     BSF       0x17,0x5       			BSF		CCP1CON,5			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003c4   303f     MOVLW     0x3f           			MOVLW	0x3F				;MSB - > CCPR1L                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003c5   057a     ANDWF     0x7a,0x0       			ANDWF	TEMP_BYT0,W			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003c6   0095     MOVWF     0x15           			MOVWF	CCPR1L				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003c7   2bd7     GOTO      0x3d7          			GOTO	_ENABL_WR			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003c8   0833     MOVF      0x33,0x0       _WRI_PORT1	MOVF	OUT_VAL1,W			;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003c9   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003ca   019b     CLRF      0x1b           			CLRF	CCPR2L				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003cb   1003     BCF       0x3,0x0        			CLRC						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003cc   0cfa     RRF       0x7a,0x1       			RRF		TEMP_BYT0,F			;LSB - > CCP1CON<5,4>                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003cd   121d     BCF       0x1d,0x4       			BCF		CCP2CON,4			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003ce   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003cf   161d     BSF       0x1d,0x4       			BSF		CCP2CON,4			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003d0   0cfa     RRF       0x7a,0x1       			RRF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003d1   129d     BCF       0x1d,0x5       			BCF		CCP2CON,5			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003d2   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003d3   169d     BSF       0x1d,0x5       			BSF		CCP2CON,5			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003d4   303f     MOVLW     0x3f           			MOVLW	0x3F				;MSB - > CCPR1L                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003d5   057a     ANDWF     0x7a,0x0       			ANDWF	TEMP_BYT0,W			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003d6   009b     MOVWF     0x1b           			MOVWF	CCPR2L				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003d7   1512     BSF       0x12,0x2       _ENABL_WR	BSF		T2CON,TMR2ON		;start TMR2                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003d8   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Scan the RX queu to see if we have any pending commands to perform.  Note that ALL C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;messages in the BUS have been received by the interrupt procedure, here we throw C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;away everything that is not ours.                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SCAN_RX_QUEU							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003d9   1048     BCF       0x48,0x0       			BCF		F_ABORT_RX_FLAG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003da   3006     MOVLW     0x6            			MOVLW	C_NBR_ENTRIES_RX	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003db   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003dc   3050     MOVLW     0x50           			MOVLW	RX_QUEU				;Find a msg in the RX_QUEU                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003dd   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003de   30ff     MOVLW     0xff           _FIND_RX_Q	MOVLW	0xFF				;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003df   0600     XORWF     0x0,0x0        			XORWF	INDF,W				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003e0   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003e1   2be7     GOTO      0x3e7          			GOTO	_RX_MSG_FOUND		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003e2   3005     MOVLW     0x5            			MOVLW	C_SIZE_RX_Q_ENTRY	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003e3   0784     ADDWF     0x4,0x1        			ADDWF	FSR,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003e4   0bfa     DECFSZ    0x7a,0x1       			DECFSZ	TEMP_BYT0,F			;		                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003e5   2bde     GOTO      0x3de          			GOTO	_FIND_RX_Q			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003e6   2d15     GOTO      0x515          			GOTO	_RXQ_FIN			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _RX_MSG_FOUND							;msg found, analyze -> BREAKPOINT MESSAGE RECEIVED           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003e7   0804     MOVF      0x4,0x0        			MOVF	FSR,W				;Save RX msg start                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003e8   00dd     MOVWF     0x5d           			MOVWF	RX_MSG_START		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INCORPORATED FOR STACK REDUCTION                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Dequeue the message, move from the RX_QUEU to the SHARED bank (MSG_TYPE...MSG_BYTE4) C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		RX_MSG_START                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	BYT0...BYTE4 filled with a copy of the msg                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           COPY_FROM_RX							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003e9   085d     MOVF      0x5d,0x0       			MOVF	RX_MSG_START,W		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003ea   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003eb   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;COMMAND_TYPE                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003ec   00df     MOVWF     0x5f           			MOVWF	MSG_TYPE			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003ed   0a84     INCF      0x4,0x1        			INCF	FSR,F				;COMMAND_SUB_TYPE                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003ee   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003ef   00e0     MOVWF     0x60           			MOVWF	MSG_SUBT			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003f0   0a84     INCF      0x4,0x1        			INCF	FSR,F				;SERIAL                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003f1   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003f2   00e1     MOVWF     0x61           			MOVWF	MSG_SERL			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003f3   0a84     INCF      0x4,0x1        			INCF	FSR,F				;DISCRMINATOR                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003f4   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003f5   00e2     MOVWF     0x62           			MOVWF	MSG_DISC			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003f6   0a84     INCF      0x4,0x1        			INCF	FSR,F				;ARGUMENT                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003f7   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003f8   00e3     MOVWF     0x63           			MOVWF	MSG_ARGT			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			RETURN						;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003f9   085f     MOVF      0x5f,0x0       			MOVF	MSG_TYPE,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003fa   3ab4     XORLW     0xb4           			XORLW	TYPE_INVIO_STATO	;message type 180                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003fb   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003fc   2c47     GOTO      0x447          			GOTO	_COPY_INVIO_STATO	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003fd   085f     MOVF      0x5f,0x0       			MOVF	MSG_TYPE,W			;message type 181                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003fe   3ab5     XORLW     0xb5           			XORLW	TYPE_INTERROG_STAT	;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0003ff   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000400   2c43     GOTO      0x443          			GOTO	_INTERROG_STAT		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000401   085f     MOVF      0x5f,0x0       			MOVF	MSG_TYPE,W			;message type 183                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000402   3ab7     XORLW     0xb7           			XORLW	TYPE_IMPOSTAZIONE_USCITA;                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000403   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000404   2c66     GOTO      0x466          			GOTO	_IMPOST_USCITA		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000405   085f     MOVF      0x5f,0x0       			MOVF	MSG_TYPE,W			;command type 170                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000406   3aaa     XORLW     0xaa           			XORLW	TYPE_PROGRAMMAZIONE	;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000407   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000408   2c26     GOTO      0x426          			GOTO	_PROGRAMMAZIONE		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000409   085f     MOVF      0x5f,0x0       			MOVF	MSG_TYPE,W			;command type 119                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00040a   3a77     XORLW     0x77           			XORLW	TYPE_INTERROG_PROGR	;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00040b   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00040c   2c3f     GOTO      0x43f          			GOTO	_INTERROG_PROGR		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00040d   085f     MOVF      0x5f,0x0       			MOVF	MSG_TYPE,W			;command type 85 - dimmer or CPU interrogation              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00040e   3a55     XORLW     0x55           			XORLW	TYPE_FUNZIONAMENTO	;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00040f   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000410   2d0e     GOTO      0x50e          			GOTO	_DISCARD			;Unknown or untreated message type - throw away               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;---------------------------------------;Testing sub-type from here on           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000411   0860     MOVF      0x60,0x0       			MOVF	MSG_SUBT,W			;Check Sub-type of msg type 85                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000412   3a10     XORLW     0x10           			XORLW	SUBT_INVIO_MODULO	;16                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000413   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000414   2c78     GOTO      0x478          			GOTO	_FUNZIONAMENTO_DIG	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000415   0860     MOVF      0x60,0x0       			MOVF	MSG_SUBT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000416   3a00     XORLW     0x0            			XORLW	SUBT_RISPO_MODULO	;0                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000417   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000418   2ceb     GOTO      0x4eb          			GOTO	_REPLY_TO_MY_MSG	;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000419   0860     MOVF      0x60,0x0       			MOVF	MSG_SUBT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00041a   3a46     XORLW     0x46           			XORLW	SUBT_RISPO_C		;70 -RISPOSTA A UN ALLARME                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00041b   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00041c   2ceb     GOTO      0x4eb          			GOTO	_REPLY_TO_MY_MSG	;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00041d   0860     MOVF      0x60,0x0       			MOVF	MSG_SUBT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00041e   3a02     XORLW     0x2            			XORLW	SUBT_RISPO_CPU		;2                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00041f   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000420   2ceb     GOTO      0x4eb          			GOTO	_REPLY_TO_MY_MSG	;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000421   0860     MOVF      0x60,0x0       			MOVF	MSG_SUBT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000422   3a21     XORLW     0x21           			XORLW	SUBT_RICH_CPU		;33                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000423   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000424   2c31     GOTO      0x431          			GOTO	_REPLY_TO_CPU		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000425   2d0e     GOTO      0x50e          			GOTO	_DISCARD			;Unknown or untreated message SUB-type                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;TREAT RECEIVED MESSAGES:                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _PROGRAMMAZIONE							;FSR -> RX msg                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000426   2624     CALL      0x624          			CALL	CHECK_SERIAL		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000427   1d48     BTFSS     0x48,0x2       			BTFSS	F_SERIAL_MATCH		;(170,X,NS,DISCRIMINATOR,ARGUMENT)                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000428   2d0e     GOTO      0x50e          			GOTO	_DISCARD			;NOT for us                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000429   0862     MOVF      0x62,0x0       			MOVF	MSG_DISC,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00042a   00da     MOVWF     0x5a           			MOVWF	E2ADDRESS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00042b   0863     MOVF      0x63,0x0       			MOVF	MSG_ARGT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00042c   00db     MOVWF     0x5b           			MOVWF	E2VALUE				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00042d   2772     CALL      0x772          			CALL	COPY_TO_EEPROM		;Put msg data into EEPROM                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00042e   2685     CALL      0x685          			CALL	READ_STABLE_DATA	;Re-read operating parameters from EEPROM               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00042f   2516     CALL      0x516          			CALL	SEND_PROG_REPLY		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000430   2d0e     GOTO      0x50e          			GOTO	_DISCARD			;Finished                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _REPLY_TO_CPU							;(85,33,NS,0,0)                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000431   2624     CALL      0x624          			CALL	CHECK_SERIAL		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000432   1d48     BTFSS     0x48,0x2       			BTFSS	F_SERIAL_MATCH		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000433   2d0e     GOTO      0x50e          			GOTO	_DISCARD			;NOT for us                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000434   3001     MOVLW     0x1            			MOVLW	SUBT_RISTAT_CPU		;(1) Reply to query from CPU                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000435   00e0     MOVWF     0x60           			MOVWF	MSG_SUBT			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000436   01e2     CLRF      0x62           			CLRF	MSG_DISC			;no digital states in the analogue version                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000437   01e3     CLRF      0x63           			CLRF	MSG_ARGT			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000438   262a     CALL      0x62a          			CALL	FIND_EMPTY_TX_Q		;Prepare reply                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000439   1dc8     BTFSS     0x48,0x3       			BTFSS	F_MSG_FOUND			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00043a   2c3e     GOTO      0x43e          			GOTO	_CPU_FIN			;No reply is possible, msg will be repeated so ignore         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00043b   3001     MOVLW     0x1            			MOVLW	1					;send only once                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00043c   00de     MOVWF     0x5e           			MOVWF	MSG_EXPIRE			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00043d   2662     CALL      0x662          			CALL	COPY_TO_TX			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00043e   2d0e     GOTO      0x50e          _CPU_FIN	GOTO	_DISCARD			;Finished                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _INTERROG_PROGR							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00043f   2624     CALL      0x624          			CALL	CHECK_SERIAL		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000440   1948     BTFSC     0x48,0x2       			BTFSC	F_SERIAL_MATCH		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000441   2516     CALL      0x516          			CALL	SEND_PROG_REPLY		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000442   2d0e     GOTO      0x50e          			GOTO	_DISCARD			;Finished                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _INTERROG_STAT							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000443   2624     CALL      0x624          			CALL	CHECK_SERIAL		;Interrogates the state of 1 port                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000444   1948     BTFSC     0x48,0x2       			BTFSC	F_SERIAL_MATCH		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000445   2372     CALL      0x372          			CALL	SND_PORT_PARS		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000446   2d0e     GOTO      0x50e          			GOTO	_DISCARD			;Finished                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _COPY_INVIO_STATO						;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000447   01cf     CLRF      0x4f           			CLRF	PORT_OUT			;Wether this message came from our scheda or not makes        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000448   2c4c     GOTO      0x44c          			GOTO	_WTP_CONT			; no difference i.e.the message came frorm our own           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _NEXT_USCITA							; scheda if the function of the USCITA is C_OUT_LISTEN_OWN    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000449   0acf     INCF      0x4f,0x1       			INCF	PORT_OUT,F			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00044a   18cf     BTFSC     0x4f,0x1       			BTFSC	PORT_OUT,1			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00044b   2c65     GOTO      0x465          			GOTO	_USC_INVIO_DONE		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00044c   084f     MOVF      0x4f,0x0       _WTP_CONT	MOVF	PORT_OUT,W			;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00044d   3ec2     ADDLW     0xc2           			ADDLW	LISTEN_TO_SRL		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00044e   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00044f   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000450   0661     XORWF     0x61,0x0       			XORWF	MSG_SERL,W			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000451   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000452   2c49     GOTO      0x449          			GOTO	_NEXT_USCITA		;not the correct serial number                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000453   084f     MOVF      0x4f,0x0       			MOVF	PORT_OUT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000454   3ec4     ADDLW     0xc4           			ADDLW	LISTEN_TO_PORT		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000455   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000456   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000457   0662     XORWF     0x62,0x0       			XORWF	MSG_DISC,W			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000458   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000459   2c49     GOTO      0x449          			GOTO	_NEXT_USCITA		;not the correct serial number                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;			                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _ACTIVATE_OUTPUT						;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00045a   084f     MOVF      0x4f,0x0       			MOVF	PORT_OUT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00045b   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00045c   2c5f     GOTO      0x45f          			GOTO	$+3					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00045d   30ae     MOVLW     0xae           			MOVLW	OUT_VAL0			;value to write                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00045e   2c60     GOTO      0x460          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00045f   30b3     MOVLW     0xb3           			MOVLW	OUT_VAL1			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000460   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000461   0863     MOVF      0x63,0x0       			MOVF	MSG_ARGT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000462   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000463   23b2     CALL      0x3b2          			CALL	WRITE_OUT_PORT		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000464   2754     CALL      0x754          			CALL	SAVE_OUTPUT_VALUE	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _USC_INVIO_DONE							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000465   2d0e     GOTO      0x50e          			GOTO	_DISCARD			;Finished                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _IMPOST_USCITA							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000466   2624     CALL      0x624          			CALL	CHECK_SERIAL		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000467   1d48     BTFSS     0x48,0x2       			BTFSS	F_SERIAL_MATCH		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000468   2c77     GOTO      0x477          			GOTO	_IMP_DONE			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000469   0360     DECF      0x60,0x0       			DECF	MSG_SUBT,W			;USCITA                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00046a   00cf     MOVWF     0x4f           			MOVWF	PORT_OUT			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00046b   084f     MOVF      0x4f,0x0       			MOVF	PORT_OUT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00046c   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00046d   2c70     GOTO      0x470          			GOTO	$+3					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00046e   30ae     MOVLW     0xae           			MOVLW	OUT_VAL0			;value to write                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00046f   2c71     GOTO      0x471          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000470   30b3     MOVLW     0xb3           			MOVLW	OUT_VAL1			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000471   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000472   0863     MOVF      0x63,0x0       			MOVF	MSG_ARGT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000473   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000474   23b2     CALL      0x3b2          			CALL	WRITE_OUT_PORT		;Force the state of a port                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000475   2754     CALL      0x754          			CALL	SAVE_OUTPUT_VALUE	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000476   2372     CALL      0x372          			CALL	SND_PORT_PARS		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000477   2d0e     GOTO      0x50e          _IMP_DONE	GOTO	_DISCARD			;Finished                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _FUNZIONAMENTO_DIG						;Dimmer activation (85,16,SN,USCITA,FRONTE)              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000478   2624     CALL      0x624          			CALL	CHECK_SERIAL		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000479   1d48     BTFSS     0x48,0x2       			BTFSS	F_SERIAL_MATCH		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00047a   2cea     GOTO      0x4ea          			GOTO	_FUNZ_DIG_DONE		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00047b   0362     DECF      0x62,0x0       			DECF	MSG_DISC,W			;PORT 1,2 -> 0,1                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00047c   00cf     MOVWF     0x4f           			MOVWF	PORT_OUT			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           		M_CMPL_JG	PORT_OUT,1,_FUNZ_DIG_DONE                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000481   084f     MOVF      0x4f,0x0       			MOVF	PORT_OUT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000482   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000483   2c86     GOTO      0x486          			GOTO	$+3					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000484   30ab     MOVLW     0xab           			MOVLW	FUNZIONE_USC_0		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000485   2c87     GOTO      0x487          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000486   30b0     MOVLW     0xb0           			MOVLW	FUNZIONE_USC_1		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000487   0084     MOVWF     0x4            			MOVWF	FSR					;FSR -> FUNZIONE_USC(PORT_OUT)                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000488   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;(FSR -> FUNZIONE_USC)                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000489   3a03     XORLW     0x3            			XORLW	C_OUT_DIMMER		;this PORT a dimmer?                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00048a   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00048b   2cea     GOTO      0x4ea          			GOTO	_FUNZ_DIG_DONE		;command is for port 0 but port 0 is not dimmer          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00048c   0863     MOVF      0x63,0x0       			MOVF	MSG_ARGT,W			;command for dimmer port 0                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00048d   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;SALITA/DISCESA?                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00048e   2ca4     GOTO      0x4a4          			GOTO	_DISCESA			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00048f   08cf     MOVF      0x4f,0x1       _SALITA		MOVF	PORT_OUT,F			;If this dimmer is OFF, do nothing when salita is received C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000490   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			; (in the OFF state, we can only turn ON - no dimming)       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000491   2c93     GOTO      0x493          			GOTO	_CHECK_OUT_0		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000492   2c96     GOTO      0x496          			GOTO	_CHECK_OUT_1		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _CHECK_OUT_0							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000493   1f47     BTFSS     0x47,0x6       			BTFSS	F_DIMMR_ON_0		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000494   2ce3     GOTO      0x4e3          			GOTO	_REPLY_FUNZ_DIG		;just reply to SALITA if we're OFF                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000495   2c98     GOTO      0x498          			GOTO	_SALIT_CONT			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _CHECK_OUT_1							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000496   1fc7     BTFSS     0x47,0x7       			BTFSS	F_DIMMR_ON_1		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000497   2ce3     GOTO      0x4e3          			GOTO	_REPLY_FUNZ_DIG		;just reply to SALITA if we're OFF                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000498   0a84     INCF      0x4,0x1        _SALIT_CONT	INCF	FSR,F				;(FSR -> ON_OFF_TIMER)                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000499   0880     MOVF      0x0,0x1        			MOVF	INDF,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00049a   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00049b   2cea     GOTO      0x4ea          			GOTO	_FUNZ_DIG_DONE		;we are already treating a command, we are waiting for OFF. C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00049c   0a84     INCF      0x4,0x1        			INCF	FSR,F				;(FSR -> DIM_ACT_TIM)                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00049d   0880     MOVF      0x0,0x1        			MOVF	INDF,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00049e   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00049f   2cea     GOTO      0x4ea          			GOTO	_FUNZ_DIG_DONE		;we are already dimming the port                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004a0   0384     DECF      0x4,0x1        			DECF	FSR,F				;(FSR -> ON_OFF_TIMER)                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004a1   3018     MOVLW     0x18           			MOVLW	C_ON_OFF_WAIT		;start ON/OFF timer                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004a2   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004a3   2ce3     GOTO      0x4e3          			GOTO	_REPLY_FUNZ_DIG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _DISCESA								;(FSR -> FUNZIONE_USC)                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004a4   0a84     INCF      0x4,0x1        			INCF	FSR,F				;(FSR -> ON_OFF_TIMER)                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004a5   0880     MOVF      0x0,0x1        			MOVF	INDF,F				;CASE:                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004a6   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;1. If the ON_OFF_TIMER is running then go toggle            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004a7   2cc3     GOTO      0x4c3          			GOTO	_TOGGLE_ACT			;   (Turn OFF)                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004a8   08cf     MOVF      0x4f,0x1       			MOVF	PORT_OUT,F			;2. If C_ON_OFF_WAIT is OFF and the dimmer state is off     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004a9   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;   (Turn ON)                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004aa   2cae     GOTO      0x4ae          			GOTO	$+4					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004ab   1f47     BTFSS     0x47,0x6       			BTFSS	F_DIMMR_ON_0		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004ac   2cc3     GOTO      0x4c3          			GOTO	_TOGGLE_ACT			;(a salita was ignored if the dimmer state is OFF)         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004ad   2cb0     GOTO      0x4b0          			GOTO	_DIM_CONT			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004ae   1fc7     BTFSS     0x47,0x7       			BTFSS	F_DIMMR_ON_1		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004af   2cc3     GOTO      0x4c3          			GOTO	_TOGGLE_ACT			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004b0   0a84     INCF      0x4,0x1        _DIM_CONT	INCF	FSR,F				;(FSR -> DIM_ACT_TIM)                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004b1   0880     MOVF      0x0,0x1        			MOVF	INDF,F				;3. If C_ON_OFF_WAIT is OFF and dimmer state is ON and         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004b2   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;   DIM_ACT_TIM is running (e.g received OFF while dimming)  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004b3   2ce3     GOTO      0x4e3          			GOTO	_REPLY_FUNZ_DIG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004b4   0180     CLRF      0x0            			CLRF	INDF				;(FSR -> DIM_ACT_TIM)                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004b5   0a84     INCF      0x4,0x1        			INCF	FSR,F				;(FSR -> OUT_VAL)                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004b6   0a84     INCF      0x4,0x1        			INCF	FSR,F				;(FSR -> STEPBACK_TIM)                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004b7   0828     MOVF      0x28,0x0       			MOVF	STEPBACK,W			;Dimming just finished:                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004b8   0080     MOVWF     0x0            			MOVWF	INDF				; a. Clear the action timer.                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004b9   2754     CALL      0x754          			CALL	SAVE_OUTPUT_VALUE	; b. Copy the number of STEP BACKs to compesate for timing C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;    delays (form release of the button until message with             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004ba   08cf     MOVF      0x4f,0x1       			MOVF	PORT_OUT,F			;    fronte DISCESA received),  start the STEPBACK timer    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004bb   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			; c. Save current output in EEPROM                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004bc   2cbf     GOTO      0x4bf          			GOTO	$+3					; d. Toggle and save DIRECTION of the dimmer (next dimming action C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004bd   3010     MOVLW     0x10           			MOVLW	b'00010000'			;    will be done in the opposite direction)              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004be   2cc0     GOTO      0x4c0          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004bf   3020     MOVLW     0x20           			MOVLW	b'00100000'			;NOTE: the stepback (a) will occur in the new direction (b) even C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004c0   06c7     XORWF     0x47,0x1       			XORWF	FLAGS0,F			;      when the                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004c1   2760     CALL      0x760          			CALL	SAVE_STATE_DIRECTION;                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004c2   2ce3     GOTO      0x4e3          			GOTO	_REPLY_FUNZ_DIG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _TOGGLE_ACT								;(FSR -> ON_OFF_TIMER)                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004c3   08cf     MOVF      0x4f,0x1       			MOVF	PORT_OUT,F			;Toggle the state of the dimmer ON/OFF                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004c4   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			; (in the OFF state, we can only turn ON - no dimming)       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004c5   2cc8     GOTO      0x4c8          			GOTO	$+3					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004c6   3040     MOVLW     0x40           _TOGGLE_0	MOVLW	b'01000000'			;toggle the correct bit                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004c7   2cc9     GOTO      0x4c9          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004c8   3080     MOVLW     0x80           _TOGGLE_1	MOVLW	b'10000000'			;                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004c9   06c7     XORWF     0x47,0x1       			XORWF	FLAGS0,F			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;(FSR -> ON_OFF_TIMER) ON/OFF was still running                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004ca   0a84     INCF      0x4,0x1        			INCF	FSR,F				;SWAP CURRENT OUTPUT VALUE WITH TOGGLE VALUE IN EEPROM          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004cb   0a84     INCF      0x4,0x1        			INCF	FSR,F				;FSR -> OUT_VAL                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004cc   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004cd   00fb     MOVWF     0x7b           			MOVWF	TEMP_BYT1			;1. Save current output value                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004ce   084f     MOVF      0x4f,0x0       			MOVF	PORT_OUT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004cf   3eda     ADDLW     0xda           			ADDLW	EE_DIMM_TOGGLE		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004d0   2791     CALL      0x791          			CALL	READ_EEPROM			;2. Get the output value on last toggle                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004d1   0080     MOVWF     0x0            			MOVWF	INDF				;FSR -> OUT_VAL                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004d2   23b2     CALL      0x3b2          			CALL	WRITE_OUT_PORT		;3. Write output                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004d3   084f     MOVF      0x4f,0x0       			MOVF	PORT_OUT,W			;4. Save new output to EEPROM                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004d4   3ed6     ADDLW     0xd6           			ADDLW	EE_SAVED_OUTPUT		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004d5   00da     MOVWF     0x5a           			MOVWF	E2ADDRESS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004d6   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;FSR -> OUT_VAL                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004d7   00db     MOVWF     0x5b           			MOVWF	E2VALUE				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004d8   2772     CALL      0x772          			CALL	COPY_TO_EEPROM		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004d9   084f     MOVF      0x4f,0x0       			MOVF	PORT_OUT,W			;5. Save old value to EEPROM (toggle value)                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004da   3eda     ADDLW     0xda           			ADDLW	EE_DIMM_TOGGLE		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004db   00da     MOVWF     0x5a           			MOVWF	E2ADDRESS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004dc   087b     MOVF      0x7b,0x0       			MOVF	TEMP_BYT1,W			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004dd   00db     MOVWF     0x5b           			MOVWF	E2VALUE				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004de   2772     CALL      0x772          			CALL	COPY_TO_EEPROM		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004df   2760     CALL      0x760          			CALL	SAVE_STATE_DIRECTION;6. Save state                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;7. Clear timers                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004e0   0384     DECF      0x4,0x1        			DECF	FSR,F				;FSR -> OUT_VAL                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004e1   0384     DECF      0x4,0x1        			DECF	FSR,F				;FSR -> DIM_ACT_TIM                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004e2   0180     CLRF      0x0            			CLRF	INDF				;FSR -> ON_OFF_TIMER                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;---------------------------------------;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _REPLY_FUNZ_DIG							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004e3   262a     CALL      0x62a          			CALL	FIND_EMPTY_TX_Q		;Prepare reply                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004e4   1dc8     BTFSS     0x48,0x3       			BTFSS	F_MSG_FOUND			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004e5   2cea     GOTO      0x4ea          			GOTO	_FUNZ_DIG_DONE		;No reply is possible, msg will be repeated so ignore    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004e6   01e0     CLRF      0x60           			CLRF	MSG_SUBT			;SUBT_RISPO_MODULO (0)                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004e7   3001     MOVLW     0x1            			MOVLW	1					;send only once                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004e8   00de     MOVWF     0x5e           			MOVWF	MSG_EXPIRE			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004e9   2662     CALL      0x662          			CALL	COPY_TO_TX			;RX msg will be discarded on return                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _FUNZ_DIG_DONE							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004ea   2d0e     GOTO      0x50e          			GOTO	_DISCARD			;Finished                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;;INCORPORATED FOR STACK REDUCTION                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;;85,[0|2|70],SN,USCITA|E,STATE                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;;A scheda has replied to a command (MSG 85):                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;;a) Check the TX_QUEU and match serial and USCITA COMANDATA, if a match is found,  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;;   delete it from the QUE.                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;;b) Check to see if we are VISUALIZZAZIONE port, if we do, match serial and port to it C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;;   to see if this is a delayed reply (e.g. TEMPORIZZATA or ZONE command) and match the C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;;   reported state to the corresponding port.                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;;INPUT:		msg in SHARED data                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;;OUTPUT:	TX_QUEU entry = null                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _REPLY_TO_MY_MSG						;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004eb   11c8     BCF       0x48,0x3       			BCF		F_MSG_FOUND			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004ec   3020     MOVLW     0x20           			MOVLW	TX_QUEU				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004ed   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004ee   3006     MOVLW     0x6            			MOVLW	C_NBR_ENTRIES_TX	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004ef   00f3     MOVWF     0x73           			MOVWF	NBR_BYTES			;shared bank                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _TRY_NEXT_TXQ							;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004f0   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;Skip empty entry (0 = entry not used)                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004f1   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004f2   2d08     GOTO      0x508          			GOTO	_NOT_THIS_MSG		;Empty message                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004f3   0804     MOVF      0x4,0x0        			MOVF	FSR,W				;FSR -> start of free TX msg                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004f4   00dc     MOVWF     0x5c           			MOVWF	TX_MSG_START		;non empty TX entry                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004f5   3003     MOVLW     0x3            			MOVLW	TX_SERIAL			;point to serial number                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004f6   0784     ADDWF     0x4,0x1        			ADDWF	FSR,F				;FSR -> serial number of TX entry                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004f7   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004f8   0661     XORWF     0x61,0x0       			XORWF	MSG_SERL,W			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004f9   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004fa   2d08     GOTO      0x508          			GOTO	_NOT_THIS_MSG		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004fb   0860     MOVF      0x60,0x0       			MOVF	MSG_SUBT,W			;if this is a reply to an alarm, a match on SN is enough    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004fc   3a46     XORLW     0x46           			XORLW	SUBT_RISPO_C		;70                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004fd   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004fe   2d04     GOTO      0x504          			GOTO	_DELETE_MSG			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0004ff   0a84     INCF      0x4,0x1        			INCF	FSR,F				;not an alarm...FSR -> TX_DISCRMINATOR (uscita da comandare)    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000500   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000501   0562     ANDWF     0x62,0x0       			ANDWF	MSG_DISC,W			;at least one match in the reply must be made with the ports sent C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000502   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000503   2d08     GOTO      0x508          			GOTO	_NOT_THIS_MSG		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;TX msg found, see if we need to mirror the state                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000504   085c     MOVF      0x5c,0x0       _DELETE_MSG	MOVF	TX_MSG_START,W		;IT CAN NOW BE DELETED                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000505   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000506   0180     CLRF      0x0            			CLRF	INDF				;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000507   2d0e     GOTO      0x50e          			GOTO	_TXD_Q_SEAR			;we're done with this msg in the queu                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _NOT_THIS_MSG							;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000508   0bf3     DECFSZ    0x73,0x1       			DECFSZ	NBR_BYTES,F			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000509   2d0b     GOTO      0x50b          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00050a   2d0e     GOTO      0x50e          			GOTO	_TXD_Q_SEAR			;no more messages                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00050b   3008     MOVLW     0x8            			MOVLW	C_SIZE_TX_Q_ENTRY	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00050c   0784     ADDWF     0x4,0x1        			ADDWF	FSR,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00050d   2cf0     GOTO      0x4f0          			GOTO	_TRY_NEXT_TXQ		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _TXD_Q_SEAR								;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00050e   1a48     BTFSC     0x48,0x4       _DISCARD	BTFSC	F_NO_DISCARD		;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00050f   2d14     GOTO      0x514          			GOTO	_CLEAR_DISC			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000510   085d     MOVF      0x5d,0x0       			MOVF	RX_MSG_START,W		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000511   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000512   30ff     MOVLW     0xff           			MOVLW	0xFF				;Release RX message                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000513   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000514   1248     BCF       0x48,0x4       _CLEAR_DISC	BCF		F_NO_DISCARD		;                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000515   28a4     GOTO      0xa4           _RXQ_FIN	GOTO	_RET1				;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Read EEPROM and reply                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		Received message in SHARED data                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	Message in the TX_BUFFER ready to be sent                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SEND_PROG_REPLY							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000516   262a     CALL      0x62a          			CALL	FIND_EMPTY_TX_Q		;Prepare reply                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000517   1dc8     BTFSS     0x48,0x3       			BTFSS	F_MSG_FOUND			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000518   2d21     GOTO      0x521          			GOTO	_RISP_FIN			;No reply is possible, msg will be repeated so ignore        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000519   0862     MOVF      0x62,0x0       			MOVF	MSG_DISC,W			;read the EEPROM location in DISCRMINATOR                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00051a   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00051b   00e3     MOVWF     0x63           			MOVWF	MSG_ARGT			;fill ARGUMENT in TX msg                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00051c   3033     MOVLW     0x33           			MOVLW	TYPE_RISPOSTA		;modify the COMMAND_TYPE                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00051d   00df     MOVWF     0x5f           			MOVWF	MSG_TYPE			;	                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00051e   3001     MOVLW     0x1            			MOVLW	1					;send only once                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00051f   00de     MOVWF     0x5e           			MOVWF	MSG_EXPIRE			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000520   2662     CALL      0x662          			CALL	COPY_TO_TX			;RX msg will be discarded on return                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000521   0008     RETURN                   _RISP_FIN	RETURN						;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Scan the TX QUEUE to see if there is a messaqge to be transmitted               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SCAN_TX_QUEU							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000522   3020     MOVLW     0x20           			MOVLW	TX_QUEU				;TX_QUEU in bank1: address only with FSR (IRP=0)             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000523   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000524   3006     MOVLW     0x6            			MOVLW	C_NBR_ENTRIES_TX	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000525   00d0     MOVWF     0x50           			MOVWF	NBR_ENTRIES			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000526   0800     MOVF      0x0,0x0        _FIND_TX	MOVF	INDF,W				;Skip empty entry (0 = entry not used)                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000527   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000528   2d35     GOTO      0x535          			GOTO	_NXT_FIND_TX		;not a rdy message                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _CANDIDATE_FOUND						;a non-empty TX msg has been found                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000529   0804     MOVF      0x4,0x0        			MOVF	FSR,W				;Save pointer to entry in case we need to send                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00052a   00dc     MOVWF     0x5c           			MOVWF	TX_MSG_START		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00052b   0e00     SWAPF     0x0,0x0        			SWAPF	INDF,W				;Look at                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00052c   390f     ANDLW     0xf            			ANDLW	0x0F				;IF REXMIT counter = 0                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00052d   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00052e   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00052f   2d3b     GOTO      0x53b          			GOTO	_MSG_FOUND			;   send the message                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000530   03fa     DECF      0x7a,0x1       			DECF	TEMP_BYT0,F			;ELSE                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000531   300f     MOVLW     0xf            			MOVLW	0x0F				;   decrement REXMIT counter                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000532   0580     ANDWF     0x0,0x1        			ANDWF	INDF,F				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000533   0e7a     SWAPF     0x7a,0x0       			SWAPF	TEMP_BYT0,W			;				                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000534   0480     IORWF     0x0,0x1        			IORWF	INDF,F				;END                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _NXT_FIND_TX							;find another candidate                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000535   0bd0     DECFSZ    0x50,0x1       			DECFSZ	NBR_ENTRIES,F		;Continue searching for                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000536   2d38     GOTO      0x538          			GOTO	$+2					; something to send                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000537   2d7c     GOTO      0x57c          			GOTO	_NO_MORE_MSG		;Give up, no msgs to send                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000538   3008     MOVLW     0x8            			MOVLW	C_SIZE_TX_Q_ENTRY	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000539   0784     ADDWF     0x4,0x1        			ADDWF	FSR,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00053a   2d26     GOTO      0x526          			GOTO	_FIND_TX			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _MSG_FOUND	;CALL	TAKE_BUS			;BEAKPOINT FOR TX MSG TO BE SENT                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INCORPORATED FOR STACK REDUCTION                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Take ownership of the bus.  Since arriving messages are handled via interrupts, the wait C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;for collision can be allowed to be very short.  If a message arrives during this wait C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;(e.g. we were interrupted) we will abandon the attempt to send until the next cycle  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;(interrupt service resets F_BUS_IS_MINE).  We do this done to allow greater spacing between  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;messages being sent from different schede.                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00053b   14c8     BSF       0x48,0x1       TAKE_BUS	BSF		F_BUS_IS_MINE		;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00053c   0801     MOVF      0x1,0x0        			MOVF	TMR0,W				;Random value of TMR0                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00053d   00d1     MOVWF     0x51           			MOVWF	WAIT_BUS_CLEAR		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00053e   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;avoid waits of 0 cycles, add serial number                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00053f   2d42     GOTO      0x542          			GOTO	$+3					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000540   084a     MOVF      0x4a,0x0       			MOVF	OWN_SERIAL,W		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000541   07d1     ADDWF     0x51,0x1       			ADDWF	WAIT_BUS_CLEAR,F	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000542   1806     BTFSC     0x6,0x0        _CHK_BUS	BTFSC	BUS_IN				;test for free bus                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000543   2d46     GOTO      0x546          			GOTO	$+3					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000544   10c8     BCF       0x48,0x1       			BCF		F_BUS_IS_MINE		;Impossible situtation: if someone had taken it, we would  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000545   2d7c     GOTO      0x57c          			GOTO	_NO_MORE_MSG		;  have been interrupted, but...                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000546   1cc8     BTFSS     0x48,0x1       			BTFSS	F_BUS_IS_MINE		;If we were interrupted while waiting to take the bus (means a msg C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000547   2d7c     GOTO      0x57c          			GOTO	_NO_MORE_MSG		; has just arrived), abandon until next cycle - see Service_Interr C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000548   0bd1     DECFSZ    0x51,0x1       			DECFSZ	WAIT_BUS_CLEAR,F	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000549   2d42     GOTO      0x542          			GOTO	_CHK_BUS			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00054a   1cc8     BTFSS     0x48,0x1       			BTFSS	F_BUS_IS_MINE		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00054b   2d7c     GOTO      0x57c          			GOTO	_NO_MORE_MSG		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00054c   1683     BSF       0x3,0x5        			BSF		STATUS,RP0			;WE OWN THE BUS!                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00054d   1086     BCF       0x6,0x1        			BCF		TRISB,1				;put RB1 in output                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00054e   1283     BCF       0x3,0x5        			BCF		STATUS,RP0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00054f   138b     BCF       0xb,0x7        			BCF		INTCON,GIE			;From here on we operate without interrupts                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000550   1086     BCF       0x6,0x1        			BCF		BUS_OUT				;Take ownership                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			CALL	MSG_SEND			;  abandon, will send later                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INCORPORATED FOR STACK REDUCTION                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;PROCEDURE: Send a message in BUS_OUT                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Send a message.  Glare has been avoided.  Runs with interrupts disabled while   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;ALL OTHER PROCESSORS ARE INTERRUPTED                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT: 	FSR -> Message to be sent                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;SUM CHECK has been calculated already                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000551   3006     MOVLW     0x6            MSG_SEND	MOVLW	C_NBR_PROTOCOL_BYTES;                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000552   00f3     MOVWF     0x73           			MOVWF	NBR_BYTES			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000553   085c     MOVF      0x5c,0x0       			MOVF	TX_MSG_START,W		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000554   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000555   0a84     INCF      0x4,0x1        _NXT_T_BYTE	INCF	FSR,F				;Skip MSG_EXPIRE                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000556   0800     MOVF      0x0,0x0        			MOVF	INDF,W				;W = byte to be sent                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			CALL	SEND_BYTE			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INCORPORATED FOR STACK REDUCTION                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Send 8 bits of data + start and stop bits.  LSB is sent first.                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		W=byte to send                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SEND_BYTE								;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000557   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;Hold the BUS LOW for the rest of the duration of           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000558   3008     MOVLW     0x8            			MOVLW	8					;  C_BIT_1 before sending the HIGH for the START bit              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000559   00f2     MOVWF     0x72           			MOVWF	NBR_BITS			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00055a   3074     MOVLW     0x74           			MOVLW	(C_BIT_1 - 10)		;(17 clocks used in the code up to here + 2 from here to GO_LOW  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00055b   261f     CALL      0x61f          			CALL	GO_LOW				; + 2 tp begining of the loop) / 2 instructions per loop       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00055c   30b6     MOVLW     0xb6           			MOVLW	C_BIT_0				;send START bit (0)                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00055d   261a     CALL      0x61a          			CALL	GO_HIGH				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00055e   307e     MOVLW     0x7e           			MOVLW	C_BIT_1				;go low for '1' bit                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00055f   261f     CALL      0x61f          			CALL	GO_LOW				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000560   30b6     MOVLW     0xb6           _NEXT_T_BIT	MOVLW	C_BIT_0				;Send 8 bits data                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000561   0cfa     RRF       0x7a,0x1       			RRF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000562   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000563   307e     MOVLW     0x7e           			MOVLW	C_BIT_1				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000564   261a     CALL      0x61a          			CALL	GO_HIGH				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000565   307e     MOVLW     0x7e           			MOVLW	C_BIT_1				;go low for '1' bit                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000566   261f     CALL      0x61f          			CALL	GO_LOW				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000567   0bf2     DECFSZ    0x72,0x1       			DECFSZ	NBR_BITS,F			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000568   2d60     GOTO      0x560          			GOTO	_NEXT_T_BIT			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000569   307e     MOVLW     0x7e           			MOVLW	C_BIT_1				;STOP bit                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00056a   261a     CALL      0x61a          			CALL	GO_HIGH				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			RETURN						;return in SEND_BYTE                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00056b   0bf3     DECFSZ    0x73,0x1       			DECFSZ	NBR_BYTES,F			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00056c   2d55     GOTO      0x555          			GOTO	_NXT_T_BYTE			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			RETURN						;return in MSG_SEND                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00056d   085c     MOVF      0x5c,0x0       			MOVF	TX_MSG_START,W		;decrement retry counter when finished                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00056e   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00056f   300f     MOVLW     0xf            			MOVLW	0x0F				;RXMIT counter should be 0 anyways...                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000570   0580     ANDWF     0x0,0x1        			ANDWF	INDF,F				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000571   0b80     DECFSZ    0x0,0x1        			DECFSZ	INDF,F				;When it reaches 0 the message expires                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000572   2d74     GOTO      0x574          			GOTO	_RESET_RXMIT		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000573   2d76     GOTO      0x576          			GOTO	_MSG_DONE			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _RESET_RXMIT							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000574   30f0     MOVLW     0xf0           			MOVLW	C_RXTIME			;C_RXTIME has the timer value in HIGH nibble                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000575   0480     IORWF     0x0,0x1        			IORWF	INDF,F				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000576   1486     BSF       0x6,0x1        _MSG_DONE	BSF		BUS_OUT				;release bus                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000577   108b     BCF       0xb,0x1        			BCF		INTCON,INTF			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000578   178b     BSF       0xb,0x7        			BSF		INTCON,GIE			;DONE! interrupts re-enabled                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000579   1683     BSF       0x3,0x5        			BSF		STATUS,RP0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00057a   1486     BSF       0x6,0x1        			BSF		TRISB,1				;RB1 in high impedance (input)                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00057b   1283     BCF       0x3,0x5        			BCF		STATUS,RP0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			GOTO	_NXT_FIND_TX		;find other ready messages                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _NO_MORE_MSG							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00057c   108b     BCF       0xb,0x1        			BCF		INTCON,INTF			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00057d   178b     BSF       0xb,0x7        			BSF		INTCON,GIE			;DONE! interrupts re-enabled                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			RETURN						;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00057e   28ae     GOTO      0xae           			GOTO	_RET2				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INTERRUPT PROCEDURE: Receives a complete message in the ECHO BUS.               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;*** WARNING: on reception of a new message:                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;1) The TX timer is incremented to give more time to all schede to digest this   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;   new message before more transmissions are attempted.                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;2) TMR1 is stopped to avoid that all processor exit the interrupt procedured with this C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;   timer expired                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Contains procedures RECEIVE_BYTE,RECEIVE_BIT                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;(Make changes here to extend the protocol)                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	Empty entry on RX_QUEU filled with 6 bytes of recvd data                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           Service_Interrupt						;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00057f   00f0     MOVWF     0x70           			MOVWF	I_W_TEMP			;I_W_TEMP MUST be in shared memory                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000580   0e03     SWAPF     0x3,0x0        			SWAPF	STATUS,W			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000581   00d2     MOVWF     0x52           			MOVWF	I_STATUS_TEMP		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000582   0183     CLRF      0x3            			CLRF	STATUS				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000583   00d2     MOVWF     0x52           			MOVWF	I_STATUS_TEMP		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000584   0804     MOVF      0x4,0x0        			MOVF	FSR,W				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000585   00d3     MOVWF     0x53           			MOVWF	I_FSR_TEMP			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000586   0aa0     INCF      0x20,0x1       			INCF	TIME_SCAN_TX,F		;add 1 ms to next tranmission to avoid racing            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000587   1010     BCF       0x10,0x0       			BCF		T1CON,TMR1ON		;stop TMR1 to avoid synchoronize sending from many schede  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000588   1048     BCF       0x48,0x0       			BCF		F_ABORT_RX_FLAG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000589   10c8     BCF       0x48,0x1       			BCF		F_BUS_IS_MINE		;this is an indication to TAKE_BUS to avoid sending a message C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00058a   3006     MOVLW     0x6            			MOVLW	C_NBR_ENTRIES_RX	; because a new one has just been received             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00058b   00d5     MOVWF     0x55           			MOVWF	I_TEMP_BYT0			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00058c   3050     MOVLW     0x50           			MOVLW	RX_QUEU				;Find an empty slot in the RX_QUEU                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00058d   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00058e   30ff     MOVLW     0xff           _FIND_RX	MOVLW	0xFF				;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00058f   0600     XORWF     0x0,0x0        			XORWF	INDF,W				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000590   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000591   2d9b     GOTO      0x59b          			GOTO	_RX_CONT1			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000592   3005     MOVLW     0x5            			MOVLW	C_SIZE_RX_Q_ENTRY	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000593   0784     ADDWF     0x4,0x1        			ADDWF	FSR,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000594   0bd5     DECFSZ    0x55,0x1       			DECFSZ	I_TEMP_BYT0,F		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000595   2d8e     GOTO      0x58e          			GOTO	_FIND_RX			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000596   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;NO SPACE FOR NEW MESSAGE!                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000597   3036     MOVLW     0x36           			MOVLW	GARBAGE_CAN			;This message will be received but ignored                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000598   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000599   30ff     MOVLW     0xff           			MOVLW	0xFF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00059a   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00059b   0804     MOVF      0x4,0x0        _RX_CONT1	MOVF	FSR,W				;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00059c   00d9     MOVWF     0x59           			MOVWF	I_FREE_RX_Q			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00059d   30f0     MOVLW     0xf0           			MOVLW	C_BIT_SUP			;bit supervision: avoid false interrupts                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00059e   00d8     MOVWF     0x58           			MOVWF	I_SUPERVISION		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00059f   1c06     BTFSS     0x6,0x0        _SFTY_HIGH	BTFSS	BUS_IN				;BUS must be LOW before call                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005a0   2da5     GOTO      0x5a5          			GOTO	_SFTY_CONT			;  to byte receiver                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005a1   0bd8     DECFSZ    0x58,0x1       			DECFSZ	I_SUPERVISION,F		;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005a2   2d9f     GOTO      0x59f          			GOTO	_SFTY_HIGH			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005a3   1448     BSF       0x48,0x0       			BSF		F_ABORT_RX_FLAG		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005a4   2ddc     GOTO      0x5dc          			GOTO	_RX_ABORT			;BUS timed out, was probably a glitch                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005a5   3005     MOVLW     0x5            _SFTY_CONT	MOVLW	C_SIZE_RX_Q_ENTRY	;FSR is pointing at the correct queu entry    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005a6   00d7     MOVWF     0x57           			MOVWF	I_NBR_BYTES			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _NXT_R_BYTE	;CALL	RECEIVE_START_BIT	;STACK REDUCTION                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Receive the START bit.  We use the duty cycle of this bit to calibrate the minimum C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;length of the '0' bit.                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		START bit in IN_BUS                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	Duration of '0' bit in BIT_0 (6.25%*actual duration)                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           RECEIVE_START_BIT                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005a7   0064     CLRWDT                   			CLRWDT						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005a8   2608     CALL      0x608          			CALL	RECEIVE_BIT			;receive the start bit                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005a9   1848     BTFSC     0x48,0x0       			BTFSC	F_ABORT_RX_FLAG		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005aa   2ddc     GOTO      0x5dc          			GOTO	_RX_ABORT			;BUS timed out                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005ab   0854     MOVF      0x54,0x0       			MOVF	I_TEMP_BIT,W		;I_TEMP_BIT has 100% duty cycle of START bit               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005ac   00c6     MOVWF     0x46           			MOVWF	BIT_0				;-6% to allow for errors in variations of clock speed          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005ad   0cc6     RRF       0x46,0x1       			RRF		BIT_0,F				;devide by 16                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005ae   0cc6     RRF       0x46,0x1       			RRF		BIT_0,F				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005af   0cc6     RRF       0x46,0x1       			RRF		BIT_0,F				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005b0   0cc6     RRF       0x46,0x1       			RRF		BIT_0,F				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005b1   0846     MOVF      0x46,0x0       			MOVF	BIT_0,W				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005b2   390f     ANDLW     0xf            			ANDLW	0xF					;W=6.25% of BIT_0                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005b3   0254     SUBWF     0x54,0x0       			SUBWF	I_TEMP_BIT,W		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005b4   00c6     MOVWF     0x46           			MOVWF	BIT_0				;BIT_0=Length of START bit                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			;RETURN						;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005b5   25e9     CALL      0x5e9          			CALL	RECEIVE_BYTE		;Receive 5 bytes of data in the received buffer            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005b6   2608     CALL      0x608          			CALL	RECEIVE_BIT			;receive and ignore the stop bit                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005b7   1848     BTFSC     0x48,0x0       			BTFSC	F_ABORT_RX_FLAG		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005b8   2ddc     GOTO      0x5dc          			GOTO	_RX_ABORT			;BUS timed out                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005b9   0855     MOVF      0x55,0x0       			MOVF	I_TEMP_BYT0,W		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005ba   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005bb   0bd7     DECFSZ    0x57,0x1       			DECFSZ	I_NBR_BYTES,F		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005bc   2dbe     GOTO      0x5be          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005bd   2dc0     GOTO      0x5c0          			GOTO	_RX_CS				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005be   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005bf   2da7     GOTO      0x5a7          			GOTO	_NXT_R_BYTE			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _RX_CS									;stack reduction: = CALL	RECEIVE_START_BIT                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005c0   2608     CALL      0x608          			CALL	RECEIVE_BIT			;receive the start bit                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005c1   1848     BTFSC     0x48,0x0       			BTFSC	F_ABORT_RX_FLAG		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005c2   2ddc     GOTO      0x5dc          			GOTO	_RX_ABORT			;BUS timed out                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005c3   0854     MOVF      0x54,0x0       			MOVF	I_TEMP_BIT,W		;I_TEMP_BIT has 100% duty cycle of START bit               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005c4   00c6     MOVWF     0x46           			MOVWF	BIT_0				;-6% to allow for errors in variations of clock speed          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005c5   0cc6     RRF       0x46,0x1       			RRF		BIT_0,F				;devide by 16                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005c6   0cc6     RRF       0x46,0x1       			RRF		BIT_0,F				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005c7   0cc6     RRF       0x46,0x1       			RRF		BIT_0,F				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005c8   0cc6     RRF       0x46,0x1       			RRF		BIT_0,F				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005c9   0846     MOVF      0x46,0x0       			MOVF	BIT_0,W				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005ca   390f     ANDLW     0xf            			ANDLW	0xF					;W=6.25% of BIT_0                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005cb   0254     SUBWF     0x54,0x0       			SUBWF	I_TEMP_BIT,W		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005cc   00c6     MOVWF     0x46           			MOVWF	BIT_0				;BIT_0=Length of START bit                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005cd   25e9     CALL      0x5e9          			CALL	RECEIVE_BYTE		;Receive CS but don't put it in the queu -                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005ce   1848     BTFSC     0x48,0x0       			BTFSC	F_ABORT_RX_FLAG		;   NOTE: last byte: no STOP bit                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005cf   2ddc     GOTO      0x5dc          			GOTO	_RX_ABORT			;BUS timed out                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005d0   3005     MOVLW     0x5            			MOVLW	C_SIZE_RX_Q_ENTRY	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			CALL	CALC_CS				;FSR points to the last received byte                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INCORPORATED FOR STACK REDUCTION:                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Calculate a CHECK SUM	for a number for C_NBR_PROTOCOL_BYTES-1 in reverse order  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		W = number of bytes, FSR -> last byte in the string.                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	W = calculated CS, FSR -> first byte                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;WARNING: Runs with disabled interrupts                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005d1   00d7     MOVWF     0x57           CALC_CS		MOVWF	I_NBR_BYTES			;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005d2   0103     CLRW                     			CLRW						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005d3   0700     ADDWF     0x0,0x0        _LOOP_CS	ADDWF	INDF,W				;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005d4   0bd7     DECFSZ    0x57,0x1       			DECFSZ	I_NBR_BYTES,F		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005d5   2dd7     GOTO      0x5d7          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005d6   2dd9     GOTO      0x5d9          			GOTO	_CS_DONE			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005d7   0384     DECF      0x4,0x1        			DECF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005d8   2dd3     GOTO      0x5d3          			GOTO	_LOOP_CS			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _CS_DONE	;RETURN						;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005d9   0655     XORWF     0x55,0x0       			XORWF	I_TEMP_BYT0,W		;FSR now points to the first received byte               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005da   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005db   2de0     GOTO      0x5e0          			GOTO	_ISR_END			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005dc   0859     MOVF      0x59,0x0       _RX_ABORT	MOVF	I_FREE_RX_Q,W		;Clear entry and abort                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005dd   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005de   30ff     MOVLW     0xff           			MOVLW	0xFF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005df   0080     MOVWF     0x0            			MOVWF	INDF				;Clear this entry, timeout or SC error                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005e0   1410     BSF       0x10,0x0       _ISR_END	BSF		T1CON,TMR1ON		;restart timer1                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005e1   0853     MOVF      0x53,0x0       			MOVF	I_FSR_TEMP,W		;restore pre-interrupt registers                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005e2   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005e3   0e52     SWAPF     0x52,0x0       			SWAPF	I_STATUS_TEMP,W		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005e4   0083     MOVWF     0x3            			MOVWF	STATUS				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005e5   0ef0     SWAPF     0x70,0x1       			SWAPF	I_W_TEMP,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005e6   0e70     SWAPF     0x70,0x0       			SWAPF	I_W_TEMP,W			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005e7   108b     BCF       0xb,0x1        			BCF		INTCON,INTF			;clear interrupt flag                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005e8   0009     RETFIE                   			RETFIE						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Receives the next 8 bits of a transmitted byte. NOTE: LSB is received first     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	I_TEMP_BYT0 contains the full byte                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           RECEIVE_BYTE							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005e9   01d5     CLRF      0x55           			CLRF	I_TEMP_BYT0			;prepare to receive 8 bits                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005ea   3008     MOVLW     0x8            			MOVLW	8					;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005eb   00d6     MOVWF     0x56           			MOVWF	I_NBR_BITS			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _NEXT_R_BIT								;stack reduction: = CALL	RECEIVE_BIT	                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005ec   30f0     MOVLW     0xf0           			MOVLW	C_BIT_SUP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005ed   00d8     MOVWF     0x58           			MOVWF	I_SUPERVISION		;setup supervision                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005ee   01d4     CLRF      0x54           			CLRF	I_TEMP_BIT			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005ef   1806     BTFSC     0x6,0x0        _WAI_LOW2	BTFSC	BUS_IN				;wait here while bus is LOW                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005f0   2df5     GOTO      0x5f5          			GOTO	_WAI_HIGH2			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005f1   0bd8     DECFSZ    0x58,0x1       			DECFSZ	I_SUPERVISION,F		;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005f2   2def     GOTO      0x5ef          			GOTO	_WAI_LOW2			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005f3   1448     BSF       0x48,0x0       			BSF		F_ABORT_RX_FLAG		;timed out on the 'low'                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005f4   2dfd     GOTO      0x5fd          			GOTO	_END_RX_BIT2		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005f5   30f0     MOVLW     0xf0           _WAI_HIGH2	MOVLW	C_BIT_SUP			;bus is HIGH                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005f6   00d8     MOVWF     0x58           			MOVWF	I_SUPERVISION		;setup supervision                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005f7   1c06     BTFSS     0x6,0x0        _NXT_HIGH2	BTFSS	BUS_IN				;next bit started                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005f8   2dfd     GOTO      0x5fd          			GOTO	_END_RX_BIT2			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005f9   0ad4     INCF      0x54,0x1       			INCF	I_TEMP_BIT,F		;length of the bit received                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005fa   0bd8     DECFSZ    0x58,0x1       			DECFSZ	I_SUPERVISION,F		;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005fb   2df7     GOTO      0x5f7          			GOTO	_NXT_HIGH2			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005fc   1448     BSF       0x48,0x0       			BSF		F_ABORT_RX_FLAG		;timed out on the 'high'                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _END_RX_BIT2							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005fd   1848     BTFSC     0x48,0x0       			BTFSC	F_ABORT_RX_FLAG		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005fe   2e07     GOTO      0x607          			GOTO	_RX_B_ABORT			;BUS timed out                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0005ff   1003     BCF       0x3,0x0        			CLRC						;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000600   0cd5     RRF       0x55,0x1       			RRF		I_TEMP_BYT0,F		;TEMP_BYT0(7) is now 0                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000601   0846     MOVF      0x46,0x0       			MOVF	BIT_0,W				;Compare with calibrated '0'                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000602   0254     SUBWF     0x54,0x0       			SUBWF	I_TEMP_BIT,W		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000603   1c03     BTFSS     0x3,0x0        			BTFSS	STATUS,C			;C is 1 when 0 or positive (e.g. I_TEMP_BIT>='0')            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000604   17d5     BSF       0x55,0x7       			BSF		I_TEMP_BYT0,7		;TEMP_BYT0(7)=1                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000605   0bd6     DECFSZ    0x56,0x1       			DECFSZ	I_NBR_BITS,F		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000606   2dec     GOTO      0x5ec          			GOTO	_NEXT_R_BIT			;Loop to next bit                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000607   0008     RETURN                   _RX_B_ABORT	RETURN						;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Receive a bit coming in the ECHOBUS                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		NONE - (BUS_IN is low)                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	I_TEMP_BIT = counter with the duration of the bit received              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           RECEIVE_BIT								;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000608   30f0     MOVLW     0xf0           			MOVLW	C_BIT_SUP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000609   00d8     MOVWF     0x58           			MOVWF	I_SUPERVISION		;setup supervision                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00060a   01d4     CLRF      0x54           			CLRF	I_TEMP_BIT			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00060b   1806     BTFSC     0x6,0x0        _WAI_LOW	BTFSC	BUS_IN				;wait here while bus is LOW                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00060c   2e11     GOTO      0x611          			GOTO	_WAI_HIGH			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00060d   0bd8     DECFSZ    0x58,0x1       			DECFSZ	I_SUPERVISION,F		;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00060e   2e0b     GOTO      0x60b          			GOTO	_WAI_LOW			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00060f   1448     BSF       0x48,0x0       			BSF		F_ABORT_RX_FLAG		;timed out on the 'low'                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000610   2e19     GOTO      0x619          			GOTO	_END_RX_BIT			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000611   30f0     MOVLW     0xf0           _WAI_HIGH	MOVLW	C_BIT_SUP			;bus is HIGH                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000612   00d8     MOVWF     0x58           			MOVWF	I_SUPERVISION		;setup supervision                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000613   1c06     BTFSS     0x6,0x0        _NXT_HIGH	BTFSS	BUS_IN				;next bit started                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000614   2e19     GOTO      0x619          			GOTO	_END_RX_BIT			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000615   0ad4     INCF      0x54,0x1       			INCF	I_TEMP_BIT,F		;length of the bit received                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000616   0bd8     DECFSZ    0x58,0x1       			DECFSZ	I_SUPERVISION,F		;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000617   2e13     GOTO      0x613          			GOTO	_NXT_HIGH			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000618   1448     BSF       0x48,0x0       			BSF		F_ABORT_RX_FLAG		;timed out on the 'high'                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000619   0008     RETURN                   _END_RX_BIT	RETURN						;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Keep the BUS_OUT line HIGH for the duration of a the bit passed in W and then put  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;it low.  Note that this procedure expects the BUS_OUT to be (already) high at start.   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT	:	W=duration (1=93, 0=61 with 4Mz Fosc) (BUS_OUT = high)                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE (BUS_OUT = high)                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           GO_HIGH									;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00061a   00f1     MOVWF     0x71           			MOVWF	TEMP_BIT			;5 instruction clocks since bus is high for START bit        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00061b   1486     BSF       0x6,0x1        			BSF		BUS_OUT				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00061c   0bf1     DECFSZ    0x71,0x1       _HOLD_HIGH	DECFSZ	TEMP_BIT,F			;8		"		"		"	"	"	"	"	DATA bit                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00061d   2e1c     GOTO      0x61c          			GOTO	_HOLD_HIGH			;8		"		"		"	"	"	"	"	STOP bit                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00061e   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Put the BUS_OUT line to LOW for the duration of a '1' bit. Sets the bus high when done. C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		W = duration of low (always bit '1')                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           GO_LOW									;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00061f   00f1     MOVWF     0x71           			MOVWF	TEMP_BIT			;17 intruction clocks since bus is low for START msg         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000620   1086     BCF       0x6,0x1        			BCF		BUS_OUT				;13 intruction clocks since bus is low for START of next byte C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000621   0bf1     DECFSZ    0x71,0x1       _HOLD_LOW	DECFSZ	TEMP_BIT,F			; 4		"		"		"	"	"	"	"	any DATA bit                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000622   2e21     GOTO      0x621          			GOTO	_HOLD_LOW			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000623   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Checks the serial number in a msg of the RX_QUE                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		RX_MSG_START                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	match/no match                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           CHECK_SERIAL							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000624   1148     BCF       0x48,0x2       			BCF		F_SERIAL_MATCH		;initialize as no match                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000625   0861     MOVF      0x61,0x0       			MOVF	MSG_SERL,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000626   064a     XORWF     0x4a,0x0       			XORWF	OWN_SERIAL,W		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000627   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000628   1548     BSF       0x48,0x2       			BSF		F_SERIAL_MATCH		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000629   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Scan the TX_QUE for an empty msg slot                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	F_MSG_FOUND(T/F), FSR -> free msg                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           FIND_EMPTY_TX_Q							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00062a   11c8     BCF       0x48,0x3       			BCF		F_MSG_FOUND			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00062b   3020     MOVLW     0x20           			MOVLW	TX_QUEU				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00062c   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00062d   3006     MOVLW     0x6            			MOVLW	C_NBR_ENTRIES_TX	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00062e   00f3     MOVWF     0x73           			MOVWF	NBR_BYTES			;shared bank                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00062f   0800     MOVF      0x0,0x0        _FIND_E_TX	MOVF	INDF,W				;Skip empty entry (0 = entry not used)                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000630   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000631   2e38     GOTO      0x638          			GOTO	_SLOT_FOUND			;Empty message found                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000632   0bf3     DECFSZ    0x73,0x1       			DECFSZ	NBR_BYTES,F			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000633   2e35     GOTO      0x635          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000634   2e3b     GOTO      0x63b          			GOTO	_NOFREESLOT			;Give up, no free messages left                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000635   3008     MOVLW     0x8            			MOVLW	C_SIZE_TX_Q_ENTRY	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000636   0784     ADDWF     0x4,0x1        			ADDWF	FSR,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000637   2e2f     GOTO      0x62f          			GOTO	_FIND_E_TX			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000638   15c8     BSF       0x48,0x3       _SLOT_FOUND	BSF		F_MSG_FOUND			;                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000639   0804     MOVF      0x4,0x0        			MOVF	FSR,W				;FSR -> start of free TX msg                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00063a   00dc     MOVWF     0x5c           			MOVWF	TX_MSG_START		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00063b   0008     RETURN                   _NOFREESLOT RETURN						;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;This procedure is used mostly by KEY actions assigned to an own port.           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Scan the RX_QUE for an empty msg slot.                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	F_MSG_FOUND(T/F), FSR -> free msg                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;WARNING: 	Runs with INTERRUPTS DISABLED to avoid conflict with ISR              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           FIND_EMPTY_RX_Q							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00063c   11c8     BCF       0x48,0x3       			BCF		F_MSG_FOUND			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00063d   3006     MOVLW     0x6            			MOVLW	C_NBR_ENTRIES_RX	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00063e   00fc     MOVWF     0x7c           			MOVWF	TEMP_BYT2			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00063f   3050     MOVLW     0x50           			MOVLW	RX_QUEU				;Find an empty slot in the RX_QUEU                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000640   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000641   138b     BCF       0xb,0x7        			BCF		INTCON,GIE			;disable interrupts                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000642   30ff     MOVLW     0xff           _FND_QRX	MOVLW	0xFF				;0xFF indicates empty                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000643   0600     XORWF     0x0,0x0        			XORWF	INDF,W				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000644   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000645   2e4b     GOTO      0x64b          			GOTO	_RX_Q_FOUND			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000646   3005     MOVLW     0x5            			MOVLW	C_SIZE_RX_Q_ENTRY	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000647   0784     ADDWF     0x4,0x1        			ADDWF	FSR,F				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000648   0bfc     DECFSZ    0x7c,0x1       			DECFSZ	TEMP_BYT2,F			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000649   2e42     GOTO      0x642          			GOTO	_FND_QRX			;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00064a   2e4f     GOTO      0x64f          			GOTO	_RX_Q_NOT_FOUND		;no space in RX Q                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00064b   0180     CLRF      0x0            _RX_Q_FOUND	CLRF	INDF				;take this message que entry inmediately                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00064c   15c8     BSF       0x48,0x3       			BSF		F_MSG_FOUND			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00064d   0804     MOVF      0x4,0x0        			MOVF	FSR,W				;FSR -> start of free RX msg                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00064e   00dd     MOVWF     0x5d           			MOVWF	RX_MSG_START		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _RX_Q_NOT_FOUND							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00064f   178b     BSF       0xb,0x7        			BSF		INTCON,GIE			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000650   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Moves the message found in the SHARED bank (MSG_TYPE...MSG_ARGT) and puts it in  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;the RX_QUEU, typically used for commands assigned to my own scheda              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		RX_MSG_START (pointer to empty RX msg)                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           COPY_TO_RX								;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000651   085d     MOVF      0x5d,0x0       			MOVF	RX_MSG_START,W		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000652   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000653   085f     MOVF      0x5f,0x0       			MOVF	MSG_TYPE,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000654   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000655   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000656   0860     MOVF      0x60,0x0       			MOVF	MSG_SUBT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000657   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000658   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000659   0861     MOVF      0x61,0x0       			MOVF	MSG_SERL,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00065a   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00065b   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00065c   0862     MOVF      0x62,0x0       			MOVF	MSG_DISC,W			;			                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00065d   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00065e   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00065f   0863     MOVF      0x63,0x0       			MOVF	MSG_ARGT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000660   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000661   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Moves the bytes found in the SHARED bank (MSG_TYPE...MSG_ARGT) and puts them    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;in the TX_QUEU, calculates and writes the sumcheck.  Copies also the expiration data. C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		TX_MSG_START (pointer to empty TX msg), MSG_EXPIRE                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           COPY_TO_TX								;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000662   01e4     CLRF      0x64           			CLRF	TEMP_SC				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000663   085c     MOVF      0x5c,0x0       			MOVF	TX_MSG_START,W		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000664   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000665   085e     MOVF      0x5e,0x0       			MOVF	MSG_EXPIRE,W		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000666   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000667   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000668   085f     MOVF      0x5f,0x0       			MOVF	MSG_TYPE,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000669   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00066a   07e4     ADDWF     0x64,0x1       			ADDWF	TEMP_SC,F			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00066b   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00066c   0860     MOVF      0x60,0x0       			MOVF	MSG_SUBT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00066d   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00066e   07e4     ADDWF     0x64,0x1       			ADDWF	TEMP_SC,F			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00066f   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000670   0861     MOVF      0x61,0x0       			MOVF	MSG_SERL,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000671   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000672   07e4     ADDWF     0x64,0x1       			ADDWF	TEMP_SC,F			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000673   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000674   0862     MOVF      0x62,0x0       			MOVF	MSG_DISC,W			;			                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000675   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000676   07e4     ADDWF     0x64,0x1       			ADDWF	TEMP_SC,F			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000677   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000678   0863     MOVF      0x63,0x0       			MOVF	MSG_ARGT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000679   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00067a   07e4     ADDWF     0x64,0x1       			ADDWF	TEMP_SC,F			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00067b   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00067c   0864     MOVF      0x64,0x0       			MOVF	TEMP_SC,W			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00067d   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00067e   0a84     INCF      0x4,0x1        			INCF	FSR,F				;GI: KEY_TO_PORT added                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00067f   0865     MOVF      0x65,0x0       			MOVF	KEY_TO_PORT,W		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000680   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000681   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ERROR_HANDLER							;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000682   0000     NOP                      			NOP							;Good spot for breakpoint                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000683   0000     NOP                      			NOP							;                                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000684   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Reads all operating parameters from EEPROM if the programmazione argument is <= 50 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;(last port FUNZIONE)                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           READ_STABLE_DATA						;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;================================================================================ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           GENERAL:																			;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;================================================================================ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000685   3034     MOVLW     0x34           			MOVLW	EE_MESSAGE_0_UP		;parameters lower than this get read from EEPROM       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000686   0262     SUBWF     0x62,0x0       			SUBWF	MSG_DISC,W			; everytime any one of them is programmed and at restart   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000687   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000688   2f29     GOTO      0x729          			GOTO	_STABLE_DONE		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000689   01c7     CLRF      0x47           			CLRF	FLAGS0				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00068a   3030     MOVLW     0x30           			MOVLW	EE_SERIAL_NBR		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00068b   2791     CALL      0x791          			CALL	READ_EEPROM			;get own serial number                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00068c   00ca     MOVWF     0x4a           			MOVWF	OWN_SERIAL			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00068d   3031     MOVLW     0x31           			MOVLW	EE_STEP_BACK		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00068e   2791     CALL      0x791          			CALL	READ_EEPROM			;number of stepbacks during end of dimming                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00068f   00a8     MOVWF     0x28           			MOVWF	STEPBACK			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000690   3032     MOVLW     0x32           			MOVLW	EE_SAMPLE_TIMER		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000691   2791     CALL      0x791          			CALL	READ_EEPROM			;get the multipliers for the sampling timer                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000692   00a6     MOVWF     0x26           			MOVWF	SAMPLE_TIMER_1		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000693   00e6     MOVWF     0x66           			MOVWF	SAVE_SAMPLE_TIM_1	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000694   3033     MOVLW     0x33           			MOVLW	EE_SAMPLE_TIMER+1	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000695   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000696   00a7     MOVWF     0x27           			MOVWF	SAMPLE_TIMER_2		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000697   00e7     MOVWF     0x67           			MOVWF	SAVE_SAMPLE_TIM_2	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;================================================================================ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           USCITE:																			;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;================================================================================ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _INI_USCITA_0:							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;---------------------------------------;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000698   302e     MOVLW     0x2e           			MOVLW	EE_PORT_ASCOLTO		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000699   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00069a   00c4     MOVWF     0x44           			MOVWF	LISTEN_TO_PORT		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00069b   3002     MOVLW     0x2            			MOVLW	EE_FUNZIONE_USCITA	;IF FUNZ USCITA for port 0 = 0 (funz A)              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00069c   2791     CALL      0x791          			CALL	READ_EEPROM			; serial to listen to is OWN                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00069d   00ab     MOVWF     0x2b           			MOVWF	FUNZIONE_USC_0		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00069e   3a01     XORLW     0x1            			XORLW	C_OUT_LISTEN_OWN	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00069f   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006a0   2ea4     GOTO      0x6a4          			GOTO	_LISTEN_OTHER_0		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006a1   084a     MOVF      0x4a,0x0       			MOVF	OWN_SERIAL,W		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006a2   00c2     MOVWF     0x42           			MOVWF	LISTEN_TO_SRL		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006a3   2eb6     GOTO      0x6b6          			GOTO	_INI_USCITA_1		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _LISTEN_OTHER_0							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006a4   082b     MOVF      0x2b,0x0       			MOVF	FUNZIONE_USC_0,W	;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006a5   3a02     XORLW     0x2            			XORLW	C_OUT_LISTEN_OTHR	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006a6   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006a7   2eac     GOTO      0x6ac          			GOTO	_DIMM_0				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006a8   302c     MOVLW     0x2c           			MOVLW	EE_SERIAL_ASCOLTO	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006a9   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006aa   00c2     MOVWF     0x42           			MOVWF	LISTEN_TO_SRL		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006ab   2eb6     GOTO      0x6b6          			GOTO	_INI_USCITA_1		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _DIMM_0									;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006ac   01f6     CLRF      0x76           			CLRF	DATA_TIMER			;timer value will be filled when activation message arrives from TEMPO_INVIO C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006ad   30dc     MOVLW     0xdc           			MOVLW	EE_DIM_DRCTN_STAT	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006ae   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006af   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;Reset DIMMER direction                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006b0   0cfa     RRF       0x7a,0x1       			RRF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006b1   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006b2   1647     BSF       0x47,0x4       			BSF		F_DIM_DIRCT_0		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006b3   0cfa     RRF       0x7a,0x1       			RRF		TEMP_BYT0,F			;and ON/OFF state                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006b4   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006b5   1747     BSF       0x47,0x6       			BSF		F_DIMMR_ON_0		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;---------------------------------------;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _INI_USCITA_1:							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;---------------------------------------;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006b6   302f     MOVLW     0x2f           			MOVLW	EE_PORT_ASCOLTO+1	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006b7   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006b8   00c5     MOVWF     0x45           			MOVWF	LISTEN_TO_PORT_1	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006b9   3003     MOVLW     0x3            			MOVLW	EE_FUNZIONE_USCITA+1;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006ba   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006bb   00b0     MOVWF     0x30           			MOVWF	FUNZIONE_USC_1		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006bc   3a01     XORLW     0x1            			XORLW	C_OUT_LISTEN_OWN	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006bd   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006be   2ec2     GOTO      0x6c2          			GOTO	_LISTEN_OTHER_1		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006bf   084a     MOVF      0x4a,0x0       			MOVF	OWN_SERIAL,W		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006c0   00c3     MOVWF     0x43           			MOVWF	LISTEN_TO_SRL_1		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006c1   2ed4     GOTO      0x6d4          			GOTO	_INGRESSO_0			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _LISTEN_OTHER_1							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006c2   0830     MOVF      0x30,0x0       			MOVF	FUNZIONE_USC_1,W	;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006c3   3a02     XORLW     0x2            			XORLW	C_OUT_LISTEN_OTHR	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006c4   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006c5   2eca     GOTO      0x6ca          			GOTO	_DIMM_1				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006c6   302d     MOVLW     0x2d           			MOVLW	EE_SERIAL_ASCOLTO+1	;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006c7   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006c8   00c3     MOVWF     0x43           			MOVWF	LISTEN_TO_SRL_1		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006c9   2ed4     GOTO      0x6d4          			GOTO	_INGRESSO_0			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _DIMM_1									;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006ca   01f7     CLRF      0x77           			CLRF	DATA_TIMER_1		;timer value will be filled when activation message arrives C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006cb   30dd     MOVLW     0xdd           			MOVLW	EE_DIM_DRCTN_STAT+1	;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006cc   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006cd   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;Reset DIMMER direction                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006ce   0cfa     RRF       0x7a,0x1       			RRF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006cf   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006d0   16c7     BSF       0x47,0x5       			BSF		F_DIM_DIRCT_1		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006d1   0cfa     RRF       0x7a,0x1       			RRF		TEMP_BYT0,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006d2   1803     BTFSC     0x3,0x0        			BTFSC	STATUS,C			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006d3   17c7     BSF       0x47,0x7       			BSF		F_DIMMR_ON_1		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;================================================================================ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           INGRESSI:																		;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;================================================================================ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _INGRESSO_0:							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;---------------------------------------;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006d4   1447     BSF       0x47,0x0       			BSF		F_FA0_TMP_SND		;read delays for sending messages or thresholds           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006d5   3004     MOVLW     0x4            			MOVLW	EE_TEMPO_INVIO		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006d6   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006d7   00f6     MOVWF     0x76           			MOVWF	DATA_TIMER			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006d8   00f8     MOVWF     0x78           			MOVWF	TEMPO_INVIO_0		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006d9   08f6     MOVF      0x76,0x1       			MOVF	DATA_TIMER,F		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006da   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006db   1047     BCF       0x47,0x0       			BCF		F_FA0_TMP_SND		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006dc   3000     MOVLW     0x0            			MOVLW	EE_FUNZIONE_ING		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006dd   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006de   00a9     MOVWF     0x29           			MOVWF	FUNZIONE_ING_0		;0                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006df   3a01     XORLW     0x1            			XORLW	C_IN_STEP_WATCH		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006e0   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;if FUNCTION=0, read the STEP                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006e1   2eea     GOTO      0x6ea          			GOTO	_FUNCT_SND_THR_0	;PORT 0 = FUNCTION B?                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006e2   1547     BSF       0x47,0x2       _STEPA0		BSF		F_FA0_STEP_NZ		;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006e3   3006     MOVLW     0x6            			MOVLW	EE_STEP_FUNZ_A		;STEP PORT 0 - FUNCTION A                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006e4   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006e5   00c0     MOVWF     0x40           			MOVWF	STEP_A				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006e6   08c0     MOVF      0x40,0x1       			MOVF	STEP_A,F			;If the STEP_A0=0, no send on thr crossing                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006e7   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006e8   1147     BCF       0x47,0x2       			BCF		F_FA0_STEP_NZ		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006e9   2efe     GOTO      0x6fe          			GOTO	_INGRESSO_1			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _FUNCT_SND_THR_0						;Parameters port 0 - function B                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006ea   0829     MOVF      0x29,0x0       			MOVF	FUNZIONE_ING_0,W	;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006eb   3a02     XORLW     0x2            			XORLW	C_IN_THRHLD_WATCH	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006ec   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;if FUNCTION=B, read the thresholds                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006ed   2efe     GOTO      0x6fe          			GOTO	_INGRESSO_1			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006ee   3010     MOVLW     0x10           			MOVLW	16					;Read all thresholds for function B0                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006ef   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;and stored in bank 2                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006f0   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006f1   3016     MOVLW     0x16           			MOVLW	THRLD_B0_UP			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006f2   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006f3   300a     MOVLW     0xa            			MOVLW	EE_SOGLIE_FUNZ_B0_UP;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006f4   00fb     MOVWF     0x7b           			MOVWF	TEMP_BYT1			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006f5   087b     MOVF      0x7b,0x0       _RD_EE_THR0	MOVF	TEMP_BYT1,W			;                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006f6   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006f7   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006f8   0bfa     DECFSZ    0x7a,0x1       			DECFSZ	TEMP_BYT0,F			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006f9   2efb     GOTO      0x6fb          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006fa   2efe     GOTO      0x6fe          			GOTO	_INGRESSO_1			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006fb   0afb     INCF      0x7b,0x1       			INCF	TEMP_BYT1,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006fc   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006fd   2ef5     GOTO      0x6f5          			GOTO	_RD_EE_THR0			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;---------------------------------------;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _INGRESSO_1:							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;---------------------------------------;                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006fe   1383     BCF       0x3,0x7        			BCF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0006ff   14c7     BSF       0x47,0x1       			BSF		F_FA1_TMP_SND		;read delays for sending messages or thresholds           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000700   3005     MOVLW     0x5            			MOVLW	EE_TEMPO_INVIO+1	;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000701   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000702   00f7     MOVWF     0x77           			MOVWF	DATA_TIMER_1		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000703   00f9     MOVWF     0x79           			MOVWF	TEMPO_INVIO_1		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000704   08f7     MOVF      0x77,0x1       			MOVF	DATA_TIMER_1,F		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000705   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000706   10c7     BCF       0x47,0x1       			BCF		F_FA1_TMP_SND		;IF DATA_TIMER is 0, FUCTION A-periodic send is inhibited C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000707   3001     MOVLW     0x1            			MOVLW	EE_FUNZIONE_ING+1	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000708   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000709   00aa     MOVWF     0x2a           			MOVWF	FUNZIONE_ING_1		;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00070a   3a01     XORLW     0x1            			XORLW	C_IN_STEP_WATCH		;                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00070b   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;FUNCTION=0?                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00070c   2f15     GOTO      0x715          			GOTO	_FUNCT_SND_THR_1	;PORT 1 = FUNCTION B                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00070d   15c7     BSF       0x47,0x3       _STEPA1		BSF		F_FA1_STEP_NZ		;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00070e   3007     MOVLW     0x7            			MOVLW	EE_STEP_FUNZ_A+1	;STEP PORT 1 - FUNCTION A                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00070f   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000710   00c1     MOVWF     0x41           			MOVWF	STEP_A1				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000711   08c1     MOVF      0x41,0x1       			MOVF	STEP_A1,F			;If STEP_A1=0, dont send msg on thr crossing                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000712   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000713   11c7     BCF       0x47,0x3       			BCF		F_FA1_STEP_NZ		;don't send on teporary basis                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000714   2f29     GOTO      0x729          			GOTO	_STABLE_DONE		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _FUNCT_SND_THR_1						;PORT 1 = FUNCTION B                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000715   082a     MOVF      0x2a,0x0       			MOVF	FUNZIONE_ING_1,W	;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000716   3a02     XORLW     0x2            			XORLW	C_IN_THRHLD_WATCH	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000717   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000718   2f29     GOTO      0x729          			GOTO	_STABLE_DONE		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000719   3010     MOVLW     0x10           			MOVLW	16					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00071a   00fa     MOVWF     0x7a           			MOVWF	TEMP_BYT0			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00071b   1783     BSF       0x3,0x7        			BSF		STATUS,IRP			;The thresholds for FUNCTION B are stored in bank 2         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00071c   3026     MOVLW     0x26           			MOVLW	THRLD_B1_UP			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00071d   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00071e   301a     MOVLW     0x1a           			MOVLW	EE_SOGLIE_FUNZ_B1_UP;FILL IN PARAMETERS POR INGRESSO FUNCTION B         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00071f   00fb     MOVWF     0x7b           			MOVWF	TEMP_BYT1			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000720   087b     MOVF      0x7b,0x0       _RD_EE_THR1	MOVF	TEMP_BYT1,W			;Read all thresholds for function B0              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000721   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000722   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000723   0bfa     DECFSZ    0x7a,0x1       			DECFSZ	TEMP_BYT0,F			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000724   2f26     GOTO      0x726          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000725   2f29     GOTO      0x729          			GOTO	_STABLE_DONE		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000726   0afb     INCF      0x7b,0x1       			INCF	TEMP_BYT1,F			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000727   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000728   2f20     GOTO      0x720          			GOTO	_RD_EE_THR1			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _STABLE_DONE							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000729   1383     BCF       0x3,0x7        			BCF		STATUS,IRP			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00072a   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Read a THRESHOLD B message and put it in the the MSG_... variables in shared data. C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		W = beginning EEPROM address of message to be read                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	message in message variables                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SEND_EEPROM_MSG							;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00072b   00cd     MOVWF     0x4d           			MOVWF	MSG_HEAD_EE			;MMM - ADD RETRY ACCORDING TO TYPE AND SUBTYPE            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00072c   3005     MOVLW     0x5            			MOVLW	C_SIZE_RX_Q_ENTRY	;5	                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00072d   00fc     MOVWF     0x7c           			MOVWF	TEMP_BYT2			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00072e   30df     MOVLW     0xdf           			MOVLW	MSG_TYPE			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00072f   0084     MOVWF     0x4            			MOVWF	FSR					;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000730   084d     MOVF      0x4d,0x0       _NXT_BYTE	MOVF	MSG_HEAD_EE,W		;                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000731   2791     CALL      0x791          			CALL	READ_EEPROM			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000732   0080     MOVWF     0x0            			MOVWF	INDF				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000733   0a84     INCF      0x4,0x1        			INCF	FSR,F				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000734   0acd     INCF      0x4d,0x1       			INCF	MSG_HEAD_EE,F		;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000735   0bfc     DECFSZ    0x7c,0x1       			DECFSZ	TEMP_BYT2,F			;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000736   2f30     GOTO      0x730          			GOTO	_NXT_BYTE			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000737   085f     MOVF      0x5f,0x0       			MOVF	MSG_TYPE,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000738   3a55     XORLW     0x55           			XORLW	TYPE_FUNZIONAMENTO	;85,....                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000739   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00073a   2f4b     GOTO      0x74b          			GOTO	_MIN_RETRIES		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00073b   0860     MOVF      0x60,0x0       			MOVF	MSG_SUBT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00073c   3a10     XORLW     0x10           			XORLW	SUBT_INVIO_MODULO	;85,16,..                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00073d   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00073e   2f48     GOTO      0x748          			GOTO	_MAX_RETRIES		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00073f   0860     MOVF      0x60,0x0       			MOVF	MSG_SUBT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000740   3a80     XORLW     0x80           			XORLW	SUBT_ALLARME_C		;85,128,..                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000741   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000742   2f48     GOTO      0x748          			GOTO	_MAX_RETRIES		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000743   0860     MOVF      0x60,0x0       			MOVF	MSG_SUBT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000744   3a22     XORLW     0x22           			XORLW	SUBT_INVIO_CPU		;85,34,..                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000745   1903     BTFSC     0x3,0x2        			BTFSC	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000746   2f48     GOTO      0x748          			GOTO	_MAX_RETRIES		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000747   2f4b     GOTO      0x74b          			GOTO	_MIN_RETRIES		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _MAX_RETRIES							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000748   3005     MOVLW     0x5            			MOVLW	C_MAX_RETRIES		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000749   00de     MOVWF     0x5e           			MOVWF	MSG_EXPIRE			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00074a   2f4d     GOTO      0x74d          			GOTO	_EE_MSG_SND			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           _MIN_RETRIES							;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00074b   3001     MOVLW     0x1            			MOVLW	C_NO_RETRY			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00074c   00de     MOVWF     0x5e           			MOVWF	MSG_EXPIRE			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00074d   262a     CALL      0x62a          _EE_MSG_SND	CALL	FIND_EMPTY_TX_Q		;                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00074e   19c8     BTFSC     0x48,0x3       			BTFSC	F_MSG_FOUND			;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00074f   2f52     GOTO      0x752          			GOTO	$+3					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000750   2682     CALL      0x682          			CALL	ERROR_HANDLER		;ERROR: NO TX ENTRY AVAILABLE FOR REPLY                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000751   2b90     GOTO      0x390          			GOTO	_PORT_PARS_FIN		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000752   2662     CALL      0x662          			CALL	COPY_TO_TX			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000753   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Save recently written output value to EEPROM                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		PORT_OUT,OUT_VALX                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SAVE_OUTPUT_VALUE						;                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000754   084f     MOVF      0x4f,0x0       			MOVF	PORT_OUT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000755   1d03     BTFSS     0x3,0x2        			BTFSS	STATUS,Z			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000756   2f59     GOTO      0x759          			GOTO	$+3					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000757   082e     MOVF      0x2e,0x0       			MOVF	OUT_VAL0,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000758   2f5a     GOTO      0x75a          			GOTO	$+2					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000759   0833     MOVF      0x33,0x0       			MOVF	OUT_VAL1,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00075a   00db     MOVWF     0x5b           			MOVWF	E2VALUE				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00075b   084f     MOVF      0x4f,0x0       			MOVF	PORT_OUT,W			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00075c   3ed6     ADDLW     0xd6           			ADDLW	EE_SAVED_OUTPUT		;Restore output values before restart                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00075d   00da     MOVWF     0x5a           			MOVWF	E2ADDRESS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00075e   2772     CALL      0x772          			CALL	COPY_TO_EEPROM		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00075f   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Save the current state and direction bits of the dimmer in EEPROM.              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;INPUT:		FLAGS0<F_DIM_DIRCT_0,F_DIM_DIRCT_1,F_DIMMR_ON_0,F_DIMMR_ON_1> (4,5,6,7) C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;OUTPUT:	NONE                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           SAVE_STATE_DIRECTION					;                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000760   12c8     BCF       0x48,0x5       			BCF		F_UPD_EEPROM		;save dimmer directions/state when necessary               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000761   01db     CLRF      0x5b           			CLRF	E2VALUE				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000762   1a47     BTFSC     0x47,0x4       			BTFSC	F_DIM_DIRCT_0		;convert bit to byte (direction 0)                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000763   145b     BSF       0x5b,0x0       			BSF		E2VALUE,0			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000764   1b47     BTFSC     0x47,0x6       			BTFSC	F_DIMMR_ON_0		;convert bit to byte (state 0)                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000765   14db     BSF       0x5b,0x1       			BSF		E2VALUE,1			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000766   30dc     MOVLW     0xdc           			MOVLW	EE_DIM_DRCTN_STAT	;                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000767   00da     MOVWF     0x5a           			MOVWF	E2ADDRESS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000768   2772     CALL      0x772          			CALL	COPY_TO_EEPROM		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000769   01db     CLRF      0x5b           			CLRF	E2VALUE				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00076a   1ac7     BTFSC     0x47,0x5       			BTFSC	F_DIM_DIRCT_1		;convert bit to byte (direction 1)                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00076b   145b     BSF       0x5b,0x0       			BSF		E2VALUE,0			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00076c   1bc7     BTFSC     0x47,0x7       			BTFSC	F_DIMMR_ON_1		;convert bit to byte (state 1)                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00076d   14db     BSF       0x5b,0x1       			BSF		E2VALUE,1			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00076e   30dd     MOVLW     0xdd           			MOVLW	EE_DIM_DRCTN_STAT+1	;                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00076f   00da     MOVWF     0x5a           			MOVWF	E2ADDRESS			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000770   2772     CALL      0x772          			CALL	COPY_TO_EEPROM		;                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000771   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Write to EEPROM                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Input:		E2ADDRESS,E2VALUE                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Output:	None                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           COPY_TO_EEPROM							;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000772   1683     BSF       0x3,0x5        			BANKSEL	EECON1				;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000773   1703     BSF       0x3,0x6                                                                                         
000774   188c     BTFSC     0xc,0x1        			BTFSC	EECON1,WR			;b2                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000775   2f74     GOTO      0x774          			GOTO	$-1					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000776   1683     BSF       0x3,0x5        			BANKSEL	E2ADDRESS			;b0                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000777   1303     BCF       0x3,0x6                                                                                         
000778   085a     MOVF      0x5a,0x0       			MOVF	E2ADDRESS,W			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000779   1283     BCF       0x3,0x5        			BANKSEL	EEADR				;b2                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00077a   1703     BSF       0x3,0x6                                                                                         
00077b   008d     MOVWF     0xd            			MOVWF	EEADR				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00077c   1683     BSF       0x3,0x5        			BANKSEL	E2VALUE				;b0                                                        C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00077d   1303     BCF       0x3,0x6                                                                                         
00077e   085b     MOVF      0x5b,0x0       			MOVF	E2VALUE,W			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00077f   1283     BCF       0x3,0x5        			BANKSEL	EEDATA				;b2                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000780   1703     BSF       0x3,0x6                                                                                         
000781   008c     MOVWF     0xc            			MOVWF	EEDATA				;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000782   1683     BSF       0x3,0x5        			BANKSEL	EECON1				;b3                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000783   1703     BSF       0x3,0x6                                                                                         
000784   138c     BCF       0xc,0x7        			BCF		EECON1,EEPGD		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000785   150c     BSF       0xc,0x2        			BSF		EECON1,WREN			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000786   138b     BCF       0xb,0x7        			BCF		INTCON,GIE			;cc                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000787   3055     MOVLW     0x55           			MOVLW	0x55				;required sequence                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000788   008d     MOVWF     0xd            			MOVWF	EECON2				;b3                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000789   30aa     MOVLW     0xaa           			MOVLW	0xAA				;                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00078a   008d     MOVWF     0xd            			MOVWF	EECON2				;b3                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00078b   148c     BSF       0xc,0x1        			BSF		EECON1,WR			;b3                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           										;required sequence                                                     C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00078c   178b     BSF       0xb,0x7        			BSF		INTCON,GIE			;cc                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00078d   110c     BCF       0xc,0x2        			BCF		EECON1,WREN			;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00078e   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;bank 0                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00078f   1303     BCF       0x3,0x6                                                                                         
000790   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Read EEPROM memory.                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Input: 	W=address                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;Output: 	W=value read                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           READ_EEPROM								;                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000791   1683     BSF       0x3,0x5        			BANKSEL	EECON1				;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000792   1703     BSF       0x3,0x6                                                                                         
000793   188c     BTFSC     0xc,0x1        			BTFSC	EECON1,WR			;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000794   2f93     GOTO      0x793          			GOTO	$-1					;                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000795   1283     BCF       0x3,0x5        			BANKSEL	EEADR				;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000796   1703     BSF       0x3,0x6                                                                                         
000797   008d     MOVWF     0xd            			MOVWF	EEADR				;                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000798   1683     BSF       0x3,0x5        			BANKSEL	EECON1				;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
000799   1703     BSF       0x3,0x6                                                                                         
00079a   138c     BCF       0xc,0x7        			BCF		EECON1,EEPGD		;                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00079b   140c     BSF       0xc,0x0        			BSF		EECON1,RD			;                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00079c   1283     BCF       0x3,0x5        			BANKSEL	EEDATA				;                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00079d   1703     BSF       0x3,0x6                                                                                         
00079e   080c     MOVF      0xc,0x0        			MOVF	EEDATA,W			;W=eeprom data                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00079f   1683     BSF       0x3,0x5        			BANKSEL	TIME_SCAN_TX		;bank 0                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0007a0   1303     BCF       0x3,0x6                                                                                         
0007a1   0008     RETURN                   			RETURN						;                                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;EEPROM ADDRESSES                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_FUNZIONE_ING)                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002100   0000     NOP                      			DE		0,0                                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002101   0000     NOP                                                                                                       
                                           ;			DE		0,2							;test: not used, C_IN_thrh_WATCH                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_FUNZIONE_USCITA)                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			DE		0,0                                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002102   0001     ??? Illegal Opcode       			DE		1,1							;test: funzione dimmer                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002103   0001     ??? Illegal Opcode                                                                                        
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_TEMPO_INVIO)                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002104   0000     NOP                      			DE		0,0                                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002105   0000     NOP                                                                                                       
                                           ;			DE		3,3							;TEST:  SEND MESSAGE EVERY 3 SECOND                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_STEP_FUNZ_A)                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002106   0000     NOP                      			DE		0,0                                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002107   0000     NOP                                                                                                       
                                           ;			DE		5,5								;test value: STEP 5                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			                                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_TEMPO_ATTIVAZIONE)                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002108   0000     NOP                      			DE		0,0								;NOT USED                                                      C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002109   0000     NOP                                                                                                       
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_SOGLIE_FUNZ_B0_UP)                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			DE		0,0,0,0,0,0,0,0                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00210a   0010     ??? Illegal Opcode       			DE		0x10,0x20,0x30,0x40,0x50,0x60,0x70,0x80                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00210b   0020     NOP                                                                                                       
00210c   0030     ??? Illegal Opcode                                                                                        
00210d   0040     NOP                                                                                                       
00210e   0050     ??? Illegal Opcode                                                                                        
00210f   0060     NOP                                                                                                       
002110   0070     ??? Illegal Opcode                                                                                        
002111   0080     MOVWF     0x0                                                                                             
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_SOGLIE_FUNZ_B0_DWN)                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			DE		0,0,0,0,0,0,0,0                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002112   0010     ??? Illegal Opcode       			DE		0x10,0x20,0x30,0x40,0x50,0x60,0x70,0x80                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002113   0020     NOP                                                                                                       
002114   0030     ??? Illegal Opcode                                                                                        
002115   0040     NOP                                                                                                       
002116   0050     ??? Illegal Opcode                                                                                        
002117   0060     NOP                                                                                                       
002118   0070     ??? Illegal Opcode                                                                                        
002119   0080     MOVWF     0x0                                                                                             
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_SOGLIE_FUNZ_B1_UP)                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			DE		0,0,0,0,0,0,0,0                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00211a   0020     NOP                      			DE		0x20,0x40,0x60,0x80,0xA0,0xC0,0xE0,0xF0                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00211b   0040     NOP                                                                                                       
00211c   0060     NOP                                                                                                       
00211d   0080     MOVWF     0x0                                                                                             
00211e   00a0     MOVWF     0x20                                                                                            
00211f   00c0     MOVWF     0x40                                                                                            
002120   00e0     MOVWF     0x60                                                                                            
002121   00f0     MOVWF     0x70                                                                                            
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_SOGLIE_FUNZ_B1_DWN)                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;			DE		0,0,0,0,0,0,0,0                                                          C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002122   0018     ??? Illegal Opcode       			DE		0x18,0x38,0x58,0x78,0x98,0xB8,0xD8,0xE8                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002123   0038     ??? Illegal Opcode                                                                                        
002124   0058     ??? Illegal Opcode                                                                                        
002125   0078     ??? Illegal Opcode                                                                                        
002126   0098     MOVWF     0x18                                                                                            
002127   00b8     MOVWF     0x38                                                                                            
002128   00d8     MOVWF     0x58                                                                                            
002129   00e8     MOVWF     0x68                                                                                            
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_TIPO_SCHEDA)                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00212a   0003     ??? Illegal Opcode       			DE		3                                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_SW_VERSION)                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00212b   0001     ??? Illegal Opcode       			DE		1                                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_SERIAL_ASCOLTO)                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00212c   0000     NOP                      			DE		0,0                                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00212d   0000     NOP                                                                                                       
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_PORT_ASCOLTO)	;DEFAULT = LISTEN TO OWN INGRESSO               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00212e   0001     ??? Illegal Opcode       			DE		1,2                                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00212f   0002     ??? Illegal Opcode                                                                                        
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_SERIAL_NBR)                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002130   00fe     MOVWF     0x7e           			DE		254                                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_STEP_BACK)                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002131   0001     ??? Illegal Opcode       			DE		1                                                                         C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_SAMPLE_TIMER)                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002132   0001     ??? Illegal Opcode       			DE		1,10						;(based on 10ms = 400 ms per AVERAGE                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002133   000a     ??? Illegal Opcode                                                                                        
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_MESSAGE_0_UP)                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002134   0055     ??? Illegal Opcode       			DE		85,34,2,1,1                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002135   0022     ??? Illegal Opcode                                                                                        
002136   0002     ??? Illegal Opcode                                                                                        
002137   0001     ??? Illegal Opcode                                                                                        
002138   0001     ??? Illegal Opcode                                                                                        
002139   0055     ??? Illegal Opcode       			DE		85,34,2,2,2                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00213a   0022     ??? Illegal Opcode                                                                                        
00213b   0002     ??? Illegal Opcode                                                                                        
00213c   0002     ??? Illegal Opcode                                                                                        
00213d   0002     ??? Illegal Opcode                                                                                        
00213e   0055     ??? Illegal Opcode       			DE		85,34,2,4,4                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00213f   0022     ??? Illegal Opcode                                                                                        
002140   0002     ??? Illegal Opcode                                                                                        
002141   0004     ??? Illegal Opcode                                                                                        
002142   0004     ??? Illegal Opcode                                                                                        
002143   0055     ??? Illegal Opcode       			DE		85,34,2,8,8                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002144   0022     ??? Illegal Opcode                                                                                        
002145   0002     ??? Illegal Opcode                                                                                        
002146   0008     RETURN                                                                                                    
002147   0008     RETURN                                                                                                    
002148   0055     ??? Illegal Opcode       			DE		85,34,2,16,16                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002149   0022     ??? Illegal Opcode                                                                                        
00214a   0002     ??? Illegal Opcode                                                                                        
00214b   0010     ??? Illegal Opcode                                                                                        
00214c   0010     ??? Illegal Opcode                                                                                        
00214d   0055     ??? Illegal Opcode       			DE		85,34,2,32,32                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00214e   0022     ??? Illegal Opcode                                                                                        
00214f   0002     ??? Illegal Opcode                                                                                        
002150   0020     NOP                                                                                                       
002151   0020     NOP                                                                                                       
002152   0055     ??? Illegal Opcode       			DE		85,34,2,64,64                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002153   0022     ??? Illegal Opcode                                                                                        
002154   0002     ??? Illegal Opcode                                                                                        
002155   0040     NOP                                                                                                       
002156   0040     NOP                                                                                                       
002157   0055     ??? Illegal Opcode       			DE		85,34,2,128,128                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002158   0022     ??? Illegal Opcode                                                                                        
002159   0002     ??? Illegal Opcode                                                                                        
00215a   0080     MOVWF     0x0                                                                                             
00215b   0080     MOVWF     0x0                                                                                             
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00215c   0055     ??? Illegal Opcode       			DE		85,34,2,1,0                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00215d   0022     ??? Illegal Opcode                                                                                        
00215e   0002     ??? Illegal Opcode                                                                                        
00215f   0001     ??? Illegal Opcode                                                                                        
002160   0000     NOP                                                                                                       
002161   0055     ??? Illegal Opcode       			DE		85,34,2,2,0                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002162   0022     ??? Illegal Opcode                                                                                        
002163   0002     ??? Illegal Opcode                                                                                        
002164   0002     ??? Illegal Opcode                                                                                        
002165   0000     NOP                                                                                                       
002166   0055     ??? Illegal Opcode       			DE		85,34,2,4,0                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002167   0022     ??? Illegal Opcode                                                                                        
002168   0002     ??? Illegal Opcode                                                                                        
002169   0004     ??? Illegal Opcode                                                                                        
00216a   0000     NOP                                                                                                       
00216b   0055     ??? Illegal Opcode       			DE		85,34,2,8,0                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00216c   0022     ??? Illegal Opcode                                                                                        
00216d   0002     ??? Illegal Opcode                                                                                        
00216e   0008     RETURN                                                                                                    
00216f   0000     NOP                                                                                                       
002170   0055     ??? Illegal Opcode       			DE		85,34,2,16,0                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002171   0022     ??? Illegal Opcode                                                                                        
002172   0002     ??? Illegal Opcode                                                                                        
002173   0010     ??? Illegal Opcode                                                                                        
002174   0000     NOP                                                                                                       
002175   0055     ??? Illegal Opcode       			DE		85,34,2,32,0                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002176   0022     ??? Illegal Opcode                                                                                        
002177   0002     ??? Illegal Opcode                                                                                        
002178   0020     NOP                                                                                                       
002179   0000     NOP                                                                                                       
00217a   0055     ??? Illegal Opcode       			DE		85,34,2,64,0                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00217b   0022     ??? Illegal Opcode                                                                                        
00217c   0002     ??? Illegal Opcode                                                                                        
00217d   0040     NOP                                                                                                       
00217e   0000     NOP                                                                                                       
00217f   0055     ??? Illegal Opcode       			DE		85,34,2,128,0                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002180   0022     ??? Illegal Opcode                                                                                        
002181   0002     ??? Illegal Opcode                                                                                        
002182   0080     MOVWF     0x0                                                                                             
002183   0000     NOP                                                                                                       
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002184   0055     ??? Illegal Opcode       			DE		85,34,3,1,1                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002185   0022     ??? Illegal Opcode                                                                                        
002186   0003     ??? Illegal Opcode                                                                                        
002187   0001     ??? Illegal Opcode                                                                                        
002188   0001     ??? Illegal Opcode                                                                                        
002189   0055     ??? Illegal Opcode       			DE		85,34,3,2,2                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00218a   0022     ??? Illegal Opcode                                                                                        
00218b   0003     ??? Illegal Opcode                                                                                        
00218c   0002     ??? Illegal Opcode                                                                                        
00218d   0002     ??? Illegal Opcode                                                                                        
00218e   0055     ??? Illegal Opcode       			DE		85,34,3,4,4                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00218f   0022     ??? Illegal Opcode                                                                                        
002190   0003     ??? Illegal Opcode                                                                                        
002191   0004     ??? Illegal Opcode                                                                                        
002192   0004     ??? Illegal Opcode                                                                                        
002193   0055     ??? Illegal Opcode       			DE		85,34,3,8,8                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002194   0022     ??? Illegal Opcode                                                                                        
002195   0003     ??? Illegal Opcode                                                                                        
002196   0008     RETURN                                                                                                    
002197   0008     RETURN                                                                                                    
002198   0055     ??? Illegal Opcode       			DE		85,34,3,16,16                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
002199   0022     ??? Illegal Opcode                                                                                        
00219a   0003     ??? Illegal Opcode                                                                                        
00219b   0010     ??? Illegal Opcode                                                                                        
00219c   0010     ??? Illegal Opcode                                                                                        
00219d   0055     ??? Illegal Opcode       			DE		85,34,3,32,32                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
00219e   0022     ??? Illegal Opcode                                                                                        
00219f   0003     ??? Illegal Opcode                                                                                        
0021a0   0020     NOP                                                                                                       
0021a1   0020     NOP                                                                                                       
0021a2   0055     ??? Illegal Opcode       			DE		85,34,3,64,64                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021a3   0022     ??? Illegal Opcode                                                                                        
0021a4   0003     ??? Illegal Opcode                                                                                        
0021a5   0040     NOP                                                                                                       
0021a6   0040     NOP                                                                                                       
0021a7   0055     ??? Illegal Opcode       			DE		85,34,3,128,128                                                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021a8   0022     ??? Illegal Opcode                                                                                        
0021a9   0003     ??? Illegal Opcode                                                                                        
0021aa   0080     MOVWF     0x0                                                                                             
0021ab   0080     MOVWF     0x0                                                                                             
                                           ;                                                                                C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021ac   0055     ??? Illegal Opcode       			DE		85,34,3,1,0                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021ad   0022     ??? Illegal Opcode                                                                                        
0021ae   0003     ??? Illegal Opcode                                                                                        
0021af   0001     ??? Illegal Opcode                                                                                        
0021b0   0000     NOP                                                                                                       
0021b1   0055     ??? Illegal Opcode       			DE		85,34,3,2,0                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021b2   0022     ??? Illegal Opcode                                                                                        
0021b3   0003     ??? Illegal Opcode                                                                                        
0021b4   0002     ??? Illegal Opcode                                                                                        
0021b5   0000     NOP                                                                                                       
0021b6   0055     ??? Illegal Opcode       			DE		85,34,3,4,0                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021b7   0022     ??? Illegal Opcode                                                                                        
0021b8   0003     ??? Illegal Opcode                                                                                        
0021b9   0004     ??? Illegal Opcode                                                                                        
0021ba   0000     NOP                                                                                                       
0021bb   0055     ??? Illegal Opcode       			DE		85,34,3,8,0                                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021bc   0022     ??? Illegal Opcode                                                                                        
0021bd   0003     ??? Illegal Opcode                                                                                        
0021be   0008     RETURN                                                                                                    
0021bf   0000     NOP                                                                                                       
0021c0   0055     ??? Illegal Opcode       			DE		85,34,3,16,0                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021c1   0022     ??? Illegal Opcode                                                                                        
0021c2   0003     ??? Illegal Opcode                                                                                        
0021c3   0010     ??? Illegal Opcode                                                                                        
0021c4   0000     NOP                                                                                                       
0021c5   0055     ??? Illegal Opcode       			DE		85,34,3,32,0                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021c6   0022     ??? Illegal Opcode                                                                                        
0021c7   0003     ??? Illegal Opcode                                                                                        
0021c8   0020     NOP                                                                                                       
0021c9   0000     NOP                                                                                                       
0021ca   0055     ??? Illegal Opcode       			DE		85,34,3,64,0                                                              C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021cb   0022     ??? Illegal Opcode                                                                                        
0021cc   0003     ??? Illegal Opcode                                                                                        
0021cd   0040     NOP                                                                                                       
0021ce   0000     NOP                                                                                                       
0021cf   0055     ??? Illegal Opcode       			DE		85,34,3,128,0                                                             C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021d0   0022     ??? Illegal Opcode                                                                                        
0021d1   0003     ??? Illegal Opcode                                                                                        
0021d2   0080     MOVWF     0x0                                                                                             
0021d3   0000     NOP                                                                                                       
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_SAVED_SAMPLE)                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021d4   0000     NOP                      			DE		0,0                                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021d5   0000     NOP                                                                                                       
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_SAVED_OUTPUT)                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021d6   0000     NOP                      			DE		0,0                                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021d7   0000     NOP                                                                                                       
                                           ;			DE		0,128                                                                    C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_SAVED_CURSOR)                                                 C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021d8   0000     NOP                      			DE		0,0                                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021d9   0000     NOP                                                                                                       
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_DIMM_TOGGLE)                                                  C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021da   0000     NOP                      			DE		0,0                                                                       C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021db   0000     NOP                                                                                                       
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			ORG		(0x2100+EE_DIM_DRCTN_STAT)                                               C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021dc   0003     ??? Illegal Opcode       			DE		3,3							;default <0>,DIRECTION=UP,<1>STATE=ON                           C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
0021dd   0003     ??? Illegal Opcode                                                                                        
                                                                                                                            C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
                                           			END							;PROGRAM FINISHED                                                   C:\Embedded\GMB\GMB Analogue\GMB_analogue.asm
